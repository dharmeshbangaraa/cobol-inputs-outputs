
# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the enhancement of the COBOL legacy application suite, specifically focusing on the addition of a `CHANNEL-CODE` field to the transaction file. This change is intended to enable channel identification in batch processing and reporting, and it impacts the transaction record structure and all programs that read or write transaction records.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes business-critical transaction data using a modular structure. The transaction record layout is defined in a central copybook (`TRNREC.cpy`), which is included by various batch and utility programs. The main impacted programs are:
- `RPTPOS00.cbl`: Batch reporting program that reads transaction files and generates reports.
- `UTLVAL00.cbl`: Utility program that validates transaction data.

### 2.2 Detailed Logic  
#### 2.2.1 Transaction Record Copybook (`src/copybook/common/TRNREC.cpy`)
- **Purpose:** Defines the structure of a transaction record, including all fields used by downstream programs.
- **Usage:** Included via `COPY` statements in all transaction-processing programs.

#### 2.2.2 Batch Reporting Program (`src/programs/batch/RPTPOS00.cbl`)
- **1100-OPEN-FILES:** Opens the transaction file for reading and report file for writing.
- **2200-PROCESS-TRANSACTIONS:** Reads each transaction record, processes the data, and writes to the report file.

#### 2.2.3 Utility Validation Program (`src/programs/utility/UTLVAL00.cbl`)
- **1100-OPEN-FILES:** Opens the transaction file for reading/writing.
- **2400-CHECK-FORMAT:** Validates the format and contents of each transaction record.

#### Flowchart:
```mermaid
flowchart TD
    Start(["Start"])
    Init["Initialization:
Open Files"]
    ReadRec["Read
Transaction Record"]
    Validate["Validate
Record Format"]
    Process["Process
Transaction"]
    Report["Write
Report/Output"]
    End(["End"])

    Start --> Init
    Init --> ReadRec
    ReadRec --> Validate
    Validate --> Process
    Process --> Report
    Report --> End
```

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add a `CHANNEL-CODE` field to the transaction file to enable channel identification in batch processing and reporting.

**Summary:**  
The change requires updating the transaction record structure, all programs that read/write transaction records, and associated validation and reporting logic.

### 3.2 Proposed Code Changes Summary:
#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy** (Copybook structure)
- **src/programs/batch/RPTPOS00.cbl** (1100-OPEN-FILES, 2200-PROCESS-TRANSACTIONS)
- **src/programs/utility/UTLVAL00.cbl** (1100-OPEN-FILES, 2400-CHECK-FORMAT)

**Purpose of Changes:**  
To introduce a new field, `CHANNEL-CODE`, in the transaction record for channel identification, and ensure all relevant programs can read, process, and report this new field.

**Impact:**  
- All transaction-processing programs will now handle an additional field.
- File layouts, record lengths, and validation logic must be updated.
- Reporting and batch processing will be able to identify the channel for each transaction.

### 3.3 Insertion Points  
- **TRNREC.cpy:** Add `CHANNEL-CODE` field at the appropriate position in the transaction record structure.
- **RPTPOS00.cbl:**
  - Update file section to include the new field.
  - Update logic in `2200-PROCESS-TRANSACTIONS` to process and report the new field.
- **UTLVAL00.cbl:**
  - Update file section to include the new field.
  - Update validation logic in `2400-CHECK-FORMAT` to validate the new field.

### 3.4 Structured Diffs  

#### src/copybook/common/TRNREC.cpy

**Before:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID         PIC X(10).
           05  TRANSACTION-DATE       PIC 9(8).
           05  ACCOUNT-NUMBER         PIC X(12).
           05  AMOUNT                 PIC 9(9)V99.
           05  TRANSACTION-TYPE       PIC X(2).
           05  STATUS                 PIC X(1).
```

**After:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID         PIC X(10).
           05  TRANSACTION-DATE       PIC 9(8).
           05  ACCOUNT-NUMBER         PIC X(12).
           05  AMOUNT                 PIC 9(9)V99.
           05  TRANSACTION-TYPE       PIC X(2).
           05  STATUS                 PIC X(1).
           05  CHANNEL-CODE           PIC X(4).
```

#### src/programs/batch/RPTPOS00.cbl

**Before (File Section and 2200-PROCESS-TRANSACTIONS excerpt):**
```cobol
       FD  TRANSACTION-FILE
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 42 CHARACTERS
           DATA RECORD IS TRANSACTION-RECORD.

       2200-PROCESS-TRANSACTIONS.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   MOVE 'Y' TO END-OF-FILE
               NOT AT END
                   PERFORM 2300-WRITE-REPORT
                   GO TO 2200-PROCESS-TRANSACTIONS
           END-READ.
```

**After:**
```cobol
       FD  TRANSACTION-FILE
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 46 CHARACTERS
           DATA RECORD IS TRANSACTION-RECORD.

       2200-PROCESS-TRANSACTIONS.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   MOVE 'Y' TO END-OF-FILE
               NOT AT END
                   PERFORM 2250-PROCESS-CHANNEL-CODE
                   PERFORM 2300-WRITE-REPORT
                   GO TO 2200-PROCESS-TRANSACTIONS
           END-READ.

       2250-PROCESS-CHANNEL-CODE.
           * Logic to process CHANNEL-CODE, e.g., store, validate, or report
           DISPLAY 'CHANNEL-CODE: ' CHANNEL-CODE.
```

#### src/programs/utility/UTLVAL00.cbl

**Before (File Section and 2400-CHECK-FORMAT excerpt):**
```cobol
       FD  TRANSACTION-FILE
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 42 CHARACTERS
           DATA RECORD IS TRANSACTION-RECORD.

       2400-CHECK-FORMAT.
           IF TRANSACTION-TYPE NOT = 'CR' AND NOT = 'DR'
               MOVE 'E' TO ERROR-CODE
               DISPLAY 'INVALID TRANSACTION TYPE'
           END-IF.
```

**After:**
```cobol
       FD  TRANSACTION-FILE
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORD CONTAINS 46 CHARACTERS
           DATA RECORD IS TRANSACTION-RECORD.

       2400-CHECK-FORMAT.
           IF TRANSACTION-TYPE NOT = 'CR' AND NOT = 'DR'
               MOVE 'E' TO ERROR-CODE
               DISPLAY 'INVALID TRANSACTION TYPE'
           END-IF
           IF CHANNEL-CODE = SPACES OR CHANNEL-CODE = LOW-VALUES
               MOVE 'E' TO ERROR-CODE
               DISPLAY 'MISSING OR INVALID CHANNEL CODE'
           END-IF.
```

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to the transaction record structure and all relevant programs ensures that channel identification is available throughout batch processing and reporting. This change enhances the system's ability to track and report on transaction channels, supporting improved analytics and operational oversight. All impacted programs and copybooks have been updated to handle the new field, with validation and reporting logic extended accordingly.
