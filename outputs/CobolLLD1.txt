# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the enhancement of the COBOL legacy application suite, specifically addressing the addition of the `CHANNEL-CODE` field to the transaction file structure. The change is required to support channel identification in batch processing and reporting, impacting the transaction record copybook and all programs that read or write transaction records.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes business-critical transaction data using a modular structure. The core transaction record layout is defined in a central copybook (`TRNREC.cpy`), which is included by multiple programs. Two high-impact programs are directly affected:

- **RPTPOS00.cbl**: Generates daily position reports by reading transaction and position files.
- **UTLVAL00.cbl**: Performs data validation on transaction and position files.

Each program follows a structured flow: initialization (file open), main processing (reading/validating/processing records), and termination (file close and cleanup).

### 2.2 Detailed Logic  

#### 2.2.1 Transaction Record Copybook (`src/copybook/common/TRNREC.cpy`)
Defines the structure of a transaction record, including keys, data fields (such as investment ID, type, quantity, price, amount, currency, status), audit information, and filler space.

**Relevant Code (Lines 6–31):**
```cobol
 6   01  TRANSACTION-RECORD.
 7       05  TRN-KEY.
 8           10  TRN-DATE           PIC X(08).
 9           10  TRN-TIME           PIC X(06).
10           10  TRN-PORTFOLIO-ID   PIC X(08).
11           10  TRN-SEQUENCE-NO    PIC X(06).
12       05  TRN-DATA.
13           10  TRN-INVESTMENT-ID  PIC X(10).
14           10  TRN-TYPE           PIC X(02).
15               88  TRN-TYPE-BUY     VALUE 'BU'.
16               88  TRN-TYPE-SELL    VALUE 'SL'.
17               88  TRN-TYPE-TRANS   VALUE 'TR'.
18               88  TRN-TYPE-FEE     VALUE 'FE'.
19           10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
20           10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
21           10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
22           10  TRN-CURRENCY      PIC X(03).
23           10  TRN-STATUS        PIC X(01).
24               88  TRN-STATUS-PEND   VALUE 'P'.
25               88  TRN-STATUS-DONE   VALUE 'D'.
26               88  TRN-STATUS-FAIL   VALUE 'F'.
27               88  TRN-STATUS-REV    VALUE 'R'.
28       05  TRN-AUDIT.
29           10  TRN-PROCESS-DATE  PIC X(26).
30           10  TRN-PROCESS-USER  PIC X(08).
31       05  TRN-FILLER           PIC X(50).
```

#### 2.2.2 Batch Report Program (`src/programs/batch/RPTPOS00.cbl`)
- **Initialization (Lines 88–108):** Opens position master, transaction history, and report files, handling errors.
- **Processing (Lines 143–145):** Processes transactions by reading and summarizing activity.

**Relevant Code:**
```cobol
88  1100-OPEN-FILES.
89      OPEN INPUT POSITION-MASTER
90      IF WS-POSITION-STATUS NOT = '00'
91          MOVE 'ERROR OPENING POSITION MASTER'
92            TO WS-ERROR-MESSAGE
93          PERFORM 9999-ERROR-HANDLER
94      END-IF
95
96      OPEN INPUT TRANSACTION-HISTORY
97      IF WS-TRAN-STATUS NOT = '00'
98          MOVE 'ERROR OPENING TRANSACTION HISTORY'
99            TO WS-ERROR-MESSAGE
100         PERFORM 9999-ERROR-HANDLER
101     END-IF
102
103     OPEN OUTPUT REPORT-FILE
104     IF WS-REPORT-STATUS NOT = '00'
105         MOVE 'ERROR OPENING REPORT FILE'
106           TO WS-ERROR-MESSAGE
107         PERFORM 9999-ERROR-HANDLER
108     END-IF.
...
143  2200-PROCESS-TRANSACTIONS.
144      PERFORM 2210-READ-TRANSACTIONS
145      PERFORM 2220-SUMMARIZE-ACTIVITY.
```

#### 2.2.3 Utility Validation Program (`src/programs/utility/UTLVAL00.cbl`)
- **Initialization (Lines 106–133):** Opens validation control, position master, transaction history, and error report files.
- **Format Check (Lines 172–175):** Invokes format validation for position and transaction records.

**Relevant Code:**
```cobol
106  1100-OPEN-FILES.
107      OPEN INPUT VALIDATION-CONTROL
108      IF WS-VAL-STATUS NOT = '00'
109          MOVE 'ERROR OPENING VALIDATION CONTROL'
110            TO WS-ERROR-MESSAGE
111          PERFORM 9999-ERROR-HANDLER
112      END-IF
113
114      OPEN INPUT POSITION-MASTER
115      IF WS-POS-STATUS NOT = '00'
116          MOVE 'ERROR OPENING POSITION MASTER'
117            TO WS-ERROR-MESSAGE
118          PERFORM 9999-ERROR-HANDLER
119      END-IF
120
121      OPEN INPUT TRANSACTION-HISTORY
122      IF WS-TRAN-STATUS NOT = '00'
123          MOVE 'ERROR OPENING TRANSACTION HISTORY'
124            TO WS-ERROR-MESSAGE
125          PERFORM 9999-ERROR-HANDLER
126      END-IF
127
128      OPEN OUTPUT ERROR-REPORT
129      IF WS-RPT-STATUS NOT = '00'
130          MOVE 'ERROR OPENING ERROR REPORT'
131            TO WS-ERROR-MESSAGE
132          PERFORM 9999-ERROR-HANDLER
133      END-IF.
...
172  2400-CHECK-FORMAT.
173      PERFORM 2410-CHECK-POSITION-FORMAT
174      PERFORM 2420-CHECK-TRANSACTION-FORMAT.
```

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    Init["Initialization:
Open Files"]
    MainProc["Main Processing:
Read/Validate/Process
Transaction Records"]
    Term["Termination:
Close Files and Cleanup"]
    End(["End"])

    Start --> Init
    Init --> MainProc
    MainProc --> Term
    Term --> End
```

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting.

**Summary:**  
A new field, `CHANNEL-CODE`, must be added to the transaction record structure to enable identification of the channel (e.g., branch, online, mobile) through which each transaction was processed. This change impacts the transaction copybook and all programs that read or write transaction records, requiring updates to file layouts, processing logic, and validation routines.

### 3.2 Proposed Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy** (Entire copybook structure)
- **src/programs/batch/RPTPOS00.cbl** (1100-OPEN-FILES, 2200-PROCESS-TRANSACTIONS, and any logic referencing transaction fields)
- **src/programs/utility/UTLVAL00.cbl** (1100-OPEN-FILES, 2400-CHECK-FORMAT, and any logic referencing transaction fields)

- **Purpose of Changes:**  
  To introduce the `CHANNEL-CODE` field for each transaction, enabling downstream processes and reports to identify the origin channel of transactions. This supports enhanced reporting, auditing, and analytics.

- **Impact:**  
  - All transaction records will now include a `CHANNEL-CODE` field.
  - Programs reading/writing transaction files must be updated to handle the new field.
  - File layouts, record lengths, and validation logic must be adjusted.
  - Downstream reporting and batch processes will be able to filter/group by channel.

### 3.3 Insertion Points  
- **TRNREC.cpy:**  
  Insert `CHANNEL-CODE` as a new field in the transaction record structure, ideally after `TRN-CURRENCY` (line 22) and before `TRN-STATUS` (line 23) for logical grouping.
- **RPTPOS00.cbl:**  
  - Ensure the new field is referenced in the FILE SECTION (via the copybook).
  - Update any logic in `2200-PROCESS-TRANSACTIONS` and downstream paragraphs to read, process, and (optionally) report the channel code.
- **UTLVAL00.cbl:**  
  - Ensure the new field is referenced in the FILE SECTION (via the copybook).
  - Update validation logic in `2400-CHECK-FORMAT` and related routines to validate the presence and correctness of `CHANNEL-CODE`.

### 3.4 Structured Diffs  

#### 3.4.1 `src/copybook/common/TRNREC.cpy`

**Before:**
```cobol
22           10  TRN-CURRENCY      PIC X(03).
23           10  TRN-STATUS        PIC X(01).
```

**After:**
```cobol
22           10  TRN-CURRENCY      PIC X(03).
22A          10  TRN-CHANNEL-CODE  PIC X(04).
23           10  TRN-STATUS        PIC X(01).
```
*Note: Line number 22A is illustrative; actual insertion should be after line 22.*

**Full Structure After Change:**
```cobol
 6   01  TRANSACTION-RECORD.
 7       05  TRN-KEY.
 8           10  TRN-DATE           PIC X(08).
 9           10  TRN-TIME           PIC X(06).
10           10  TRN-PORTFOLIO-ID   PIC X(08).
11           10  TRN-SEQUENCE-NO    PIC X(06).
12       05  TRN-DATA.
13           10  TRN-INVESTMENT-ID  PIC X(10).
14           10  TRN-TYPE           PIC X(02).
15               88  TRN-TYPE-BUY     VALUE 'BU'.
16               88  TRN-TYPE-SELL    VALUE 'SL'.
17               88  TRN-TYPE-TRANS   VALUE 'TR'.
18               88  TRN-TYPE-FEE     VALUE 'FE'.
19           10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
20           10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
21           10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
22           10  TRN-CURRENCY      PIC X(03).
22A          10  TRN-CHANNEL-CODE  PIC X(04).
23           10  TRN-STATUS        PIC X(01).
24               88  TRN-STATUS-PEND   VALUE 'P'.
25               88  TRN-STATUS-DONE   VALUE 'D'.
26               88  TRN-STATUS-FAIL   VALUE 'F'.
27               88  TRN-STATUS-REV    VALUE 'R'.
28       05  TRN-AUDIT.
29           10  TRN-PROCESS-DATE  PIC X(26).
30           10  TRN-PROCESS-USER  PIC X(08).
31       05  TRN-FILLER           PIC X(46).
```
*Note: Adjust the filler length accordingly if the record length is fixed.*

#### 3.4.2 `src/programs/batch/RPTPOS00.cbl`

**Before (File Section):**
```cobol
35      COPY POSREC.
36      COPY TRNREC.
```
*(No explicit reference to CHANNEL-CODE, as it is included via the copybook.)*

**After:**
```cobol
35      COPY POSREC.
36      COPY TRNREC.
*     Now includes TRN-CHANNEL-CODE (PIC X(04)) in TRANSACTION-RECORD
```

**Before (2200-PROCESS-TRANSACTIONS):**
```cobol
143  2200-PROCESS-TRANSACTIONS.
144      PERFORM 2210-READ-TRANSACTIONS
145      PERFORM 2220-SUMMARIZE-ACTIVITY.
```

**After (add logic to process/report CHANNEL-CODE):**
```cobol
143  2200-PROCESS-TRANSACTIONS.
144      PERFORM 2210-READ-TRANSACTIONS
145      PERFORM 2220-SUMMARIZE-ACTIVITY
145A     PERFORM 2230-REPORT-BY-CHANNEL.
```
*Add new paragraph:*
```cobol
2230-REPORT-BY-CHANNEL.
    * Group or filter transactions by TRN-CHANNEL-CODE as required
    DISPLAY "CHANNEL CODE: " TRN-CHANNEL-CODE
    * Additional reporting logic as needed
```

#### 3.4.3 `src/programs/utility/UTLVAL00.cbl`

**Before (File Section):**
```cobol
44      COPY POSREC.
45      COPY TRNREC.
```
*(No explicit reference to CHANNEL-CODE, as it is included via the copybook.)*

**After:**
```cobol
44      COPY POSREC.
45      COPY TRNREC.
*     Now includes TRN-CHANNEL-CODE (PIC X(04)) in TRANSACTION-RECORD
```

**Before (2400-CHECK-FORMAT):**
```cobol
172  2400-CHECK-FORMAT.
173      PERFORM 2410-CHECK-POSITION-FORMAT
174      PERFORM 2420-CHECK-TRANSACTION-FORMAT.
```

**After (add validation for CHANNEL-CODE):**
```cobol
172  2400-CHECK-FORMAT.
173      PERFORM 2410-CHECK-POSITION-FORMAT
174      PERFORM 2420-CHECK-TRANSACTION-FORMAT
174A     PERFORM 2430-VALIDATE-CHANNEL-CODE.
```
*Add new paragraph:*
```cobol
2430-VALIDATE-CHANNEL-CODE.
    IF TRN-CHANNEL-CODE = SPACES OR TRN-CHANNEL-CODE = LOW-VALUES
        MOVE 'MISSING CHANNEL CODE' TO WS-ERROR-MESSAGE
        PERFORM 9999-ERROR-HANDLER
    END-IF
    * Optionally, validate against a list of allowed channel codes
```

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to the transaction record structure enables robust channel-based reporting and analytics across the legacy COBOL application suite. All impacted programs and copybooks have been identified and updated to support the new field, ensuring data integrity and seamless integration with existing business processes. The changes are backward-compatible at the code level but require careful coordination for data migration and file layout updates in production environments.
