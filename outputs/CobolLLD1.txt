# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical and low-level design for the COBOL legacy application suite, specifically addressing the enhancement to add a Transaction Type field to batch processing and reporting. The document details the current logic, identifies impacted modules, and provides step-by-step guidance and structured diffs for implementing the required changes. This will serve as a reference for developers, testers, and architects involved in modernization and maintenance.

---

## 2. Existing Logic and Flow  

### 2.1 Overview  
The COBOL application suite processes business-critical portfolio transactions. It is composed of modular programs for transaction processing (`PORTTRAN.cbl`), reporting (`RPTPOS00.cbl`), validation (`UTLVAL00.cbl`), and test data generation/validation (`TSTGEN00.cbl`, `TSTVAL00.cbl`). All programs share a common transaction record layout (`TRNREC.cpy`). The flow is structured into initialization, processing, and termination phases.

### 2.2 Detailed Logic  

#### 2.2.1 Transaction Record Structure (`TRNREC.cpy`)
Defines the core data structure for all transaction processing:

```cobol
       01  TRANSACTION-RECORD.
           05  TRN-KEY.
               10  TRN-DATE           PIC X(08).
               10  TRN-TIME           PIC X(06).
               10  TRN-PORTFOLIO-ID   PIC X(08).
               10  TRN-SEQUENCE-NO    PIC X(06).
           05  TRN-DATA.
               10  TRN-INVESTMENT-ID  PIC X(10).
               10  TRN-TYPE           PIC X(02).
                   88  TRN-TYPE-BUY     VALUE 'BU'.
                   88  TRN-TYPE-SELL    VALUE 'SL'.
                   88  TRN-TYPE-TRANS   VALUE 'TR'.
                   88  TRN-TYPE-FEE     VALUE 'FE'.
               10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
               10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
               10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
               10  TRN-CURRENCY      PIC X(03).
               10  TRN-STATUS        PIC X(01).
                   88  TRN-STATUS-PEND   VALUE 'P'.
                   88  TRN-STATUS-DONE   VALUE 'D'.
                   88  TRN-STATUS-FAIL   VALUE 'F'.
                   88  TRN-STATUS-REV    VALUE 'R'.
           05  TRN-AUDIT.
               10  TRN-PROCESS-DATE  PIC X(26).
               10  TRN-PROCESS-USER  PIC X(08).
           05  TRN-FILLER           PIC X(50).
```

#### 2.2.2 Main Program Flows

##### a. `PORTTRAN.cbl` (Portfolio Transaction Processing)
- **Initialization:** Opens files, sets counters.
- **Processing:** Reads transactions, validates (`2100-VALIDATE-TRANSACTION`), checks type (`2120-CHECK-TRANSACTION-TYPE`), updates positions (`2200-UPDATE-POSITIONS`), logs audit (`2300-UPDATE-AUDIT-TRAIL`).
- **Termination:** Closes files, displays summary.

##### b. `RPTPOS00.cbl` (Position Reporting)
- **Initialization:** Opens files, writes headers.
- **Processing:** Reads positions, processes transactions (`2200-PROCESS-TRANSACTIONS`), formats for report (`2110-FORMAT-POSITION`).
- **Termination:** Closes files.

##### c. `UTLVAL00.cbl` (Validation Utility)
- **Initialization:** Opens files, initializes totals.
- **Processing:** Dispatches validation routines (`2100-PROCESS-VALIDATION`), checks format (`2400-CHECK-FORMAT`), checks transaction format (`2420-CHECK-TRANSACTION-FORMAT`).
- **Termination:** Closes files.

##### d. `TSTGEN00.cbl` (Test Data Generation)
- **Initialization:** Opens files, initializes random/counters.
- **Processing:** Generates test data (`2300-GEN-TRANSACTION`, `2310-GEN-TRAN-DATA`).
- **Termination:** Closes files.

##### e. `TSTVAL00.cbl` (Test Validation)
- **Initialization:** Opens files, writes headers.
- **Processing:** Executes tests (`2100-EXECUTE-TEST`).
- **Termination:** Closes files.

#### 2.2.3 Flowchart

```mermaid
flowchart TD
    Start([Start])
    Init([Initialization])
    ReadTrans([Read Transaction])
    Validate([Validate Transaction])
    CheckType([Check Transaction Type])
    UpdatePos([Update Positions])
    Audit([Update Audit Trail])
    Report([Reporting])
    ValidateUtil([Validation Utility])
    TestGen([Test Data Generation])
    TestVal([Test Validation])
    End([End])

    Start --> Init
    Init --> ReadTrans
    ReadTrans --> Validate
    Validate --> CheckType
    CheckType --> UpdatePos
    UpdatePos --> Audit
    Audit --> Report
    Report --> ValidateUtil
    ValidateUtil --> TestGen
    TestGen --> TestVal
    TestVal --> End
```

---

## 3. Proposed Changes  

### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add Transaction Type field to transaction processing and reporting in COBOL portfolio system.

- **Goal:** Record and display the type of each transaction (e.g., BUY, SELL, DIVIDEND) in both processing and reporting programs for compliance and business insights.
- **Scope:** Update transaction record layout (copybook), batch processing, and reporting programs. Ensure backward compatibility.

---

### 3.2 Proposed Code Changes Summary

#### 3.2.1 Impacted Sections and Files

| File                | Sections/Paragraphs Impacted                                      |
|---------------------|-------------------------------------------------------------------|
| `TRNREC.cpy`        | Entire structure (add/modify `TRN-TYPE`)                          |
| `PORTTRAN.cbl`      | 2100-VALIDATE-TRANSACTION, 2120-CHECK-TRANSACTION-TYPE, 2200-UPDATE-POSITIONS, 2300-UPDATE-AUDIT-TRAIL |
| `RPTPOS00.cbl`      | 2200-PROCESS-TRANSACTIONS, 2110-FORMAT-POSITION                  |
| `UTLVAL00.cbl`      | 2400-CHECK-FORMAT, 2420-CHECK-TRANSACTION-FORMAT                 |
| `TSTGEN00.cbl`      | 2300-GEN-TRANSACTION, 2310-GEN-TRAN-DATA                         |
| `TSTVAL00.cbl`      | 2100-EXECUTE-TEST                                                |

- **Purpose of Changes:**  
  - To support new transaction types (e.g., DIVIDEND, INTEREST) for compliance and business analytics.
  - To ensure all programs can process, validate, and report on the new field.
- **Impact:**  
  - Core data structure change; all programs referencing transaction records must be updated.
  - Validation, reporting, and test logic must recognize new transaction types.
  - Backward compatibility logic may be required for legacy data.

---

### 3.3 Insertion Points  

#### a. `TRNREC.cpy`
- **Where:** Add new transaction types to `TRN-TYPE` field (88-levels).
- **How:** Expand `TRN-TYPE` to include new values (e.g., 'DV' for DIVIDEND, 'IN' for INTEREST).

#### b. `PORTTRAN.cbl`
- **2100-VALIDATE-TRANSACTION:** Ensure validation logic checks for new types.
- **2120-CHECK-TRANSACTION-TYPE:** Update `EVALUATE` to include new types.
- **2200-UPDATE-POSITIONS:** Add logic for new types (e.g., PERFORM 2250-PROCESS-DIVIDEND).
- **2300-UPDATE-AUDIT-TRAIL:** Ensure audit logs new types.

#### c. `RPTPOS00.cbl`
- **2200-PROCESS-TRANSACTIONS:** Summarize new transaction types.
- **2110-FORMAT-POSITION:** Display new types in report output.

#### d. `UTLVAL00.cbl`
- **2400-CHECK-FORMAT / 2420-CHECK-TRANSACTION-FORMAT:** Accept and validate new types.

#### e. `TSTGEN00.cbl`
- **2300-GEN-TRANSACTION / 2310-GEN-TRAN-DATA:** Generate test data for new types.

#### f. `TSTVAL00.cbl`
- **2100-EXECUTE-TEST:** Add assertions for new types.

---

### 3.4 Structured Diffs  

#### a. `TRNREC.cpy`

**Before:**
```cobol
               10  TRN-TYPE           PIC X(02).
                   88  TRN-TYPE-BUY     VALUE 'BU'.
                   88  TRN-TYPE-SELL    VALUE 'SL'.
                   88  TRN-TYPE-TRANS   VALUE 'TR'.
                   88  TRN-TYPE-FEE     VALUE 'FE'.
```

**After:**
```cobol
               10  TRN-TYPE           PIC X(02).
                   88  TRN-TYPE-BUY       VALUE 'BU'.
                   88  TRN-TYPE-SELL      VALUE 'SL'.
                   88  TRN-TYPE-TRANS     VALUE 'TR'.
                   88  TRN-TYPE-FEE       VALUE 'FE'.
                   88  TRN-TYPE-DIVIDEND  VALUE 'DV'.
                   88  TRN-TYPE-INTEREST  VALUE 'IN'.
```

---

#### b. `PORTTRAN.cbl` (2100-VALIDATE-TRANSACTION & 2120-CHECK-TRANSACTION-TYPE)

**Before:**
```cobol
       2120-CHECK-TRANSACTION-TYPE.
           EVALUATE TRN-TYPE
               WHEN 'BU'
               WHEN 'SL'
               WHEN 'TR'
               WHEN 'FE'
                   CONTINUE
               WHEN OTHER
                   STRING 'Invalid Transaction Type: '
                          TRN-TYPE
                     DELIMITED BY SIZE
                     INTO ERR-TEXT
           END-EVALUATE
           .
```

**After:**
```cobol
       2120-CHECK-TRANSACTION-TYPE.
           EVALUATE TRN-TYPE
               WHEN 'BU'
               WHEN 'SL'
               WHEN 'TR'
               WHEN 'FE'
               WHEN 'DV'
               WHEN 'IN'
                   CONTINUE
               WHEN OTHER
                   STRING 'Invalid Transaction Type: '
                          TRN-TYPE
                     DELIMITED BY SIZE
                     INTO ERR-TEXT
           END-EVALUATE
           .
```

---

#### c. `PORTTRAN.cbl` (2200-UPDATE-POSITIONS)

**Before:**
```cobol
       2200-UPDATE-POSITIONS.
           EVALUATE TRN-TYPE
               WHEN 'BU'
                   PERFORM 2210-PROCESS-BUY
               WHEN 'SL'
                   PERFORM 2220-PROCESS-SELL
               WHEN 'TR'
                   PERFORM 2230-PROCESS-TRANSFER
               WHEN 'FE'
                   PERFORM 2240-PROCESS-FEE
           END-EVALUATE
           
           PERFORM 2300-UPDATE-AUDIT-TRAIL
           .
```

**After:**
```cobol
       2200-UPDATE-POSITIONS.
           EVALUATE TRN-TYPE
               WHEN 'BU'
                   PERFORM 2210-PROCESS-BUY
               WHEN 'SL'
                   PERFORM 2220-PROCESS-SELL
               WHEN 'TR'
                   PERFORM 2230-PROCESS-TRANSFER
               WHEN 'FE'
                   PERFORM 2240-PROCESS-FEE
               WHEN 'DV'
                   PERFORM 2250-PROCESS-DIVIDEND
               WHEN 'IN'
                   PERFORM 2260-PROCESS-INTEREST
           END-EVALUATE
           
           PERFORM 2300-UPDATE-AUDIT-TRAIL
           .
```
*Add new paragraphs 2250-PROCESS-DIVIDEND and 2260-PROCESS-INTEREST as needed.*

---

#### d. `RPTPOS00.cbl` (2200-PROCESS-TRANSACTIONS & 2110-FORMAT-POSITION)

**Before (simplified):**
```cobol
       2200-PROCESS-TRANSACTIONS.
           IF TRN-TYPE = 'BU'
               ADD 1 TO WS-BUY-COUNT
           ELSE IF TRN-TYPE = 'SL'
               ADD 1 TO WS-SELL-COUNT
           ...
```

**After:**
```cobol
       2200-PROCESS-TRANSACTIONS.
           EVALUATE TRN-TYPE
               WHEN 'BU'
                   ADD 1 TO WS-BUY-COUNT
               WHEN 'SL'
                   ADD 1 TO WS-SELL-COUNT
               WHEN 'DV'
                   ADD 1 TO WS-DIVIDEND-COUNT
               WHEN 'IN'
                   ADD 1 TO WS-INTEREST-COUNT
               ...
           END-EVALUATE
```
*Update report formatting to display new types in `2110-FORMAT-POSITION`.*

---

#### e. `UTLVAL00.cbl` (2400-CHECK-FORMAT / 2420-CHECK-TRANSACTION-FORMAT)

**Before:**
```cobol
       2420-CHECK-TRANSACTION-FORMAT.
           IF TRN-TYPE NOT = 'BU'
              AND TRN-TYPE NOT = 'SL'
              AND TRN-TYPE NOT = 'TR'
              AND TRN-TYPE NOT = 'FE'
               MOVE 'Invalid Transaction Type' TO WS-ERROR-MESSAGE
               PERFORM 9999-ERROR-HANDLER
           END-IF
```

**After:**
```cobol
       2420-CHECK-TRANSACTION-FORMAT.
           IF TRN-TYPE NOT = 'BU'
              AND TRN-TYPE NOT = 'SL'
              AND TRN-TYPE NOT = 'TR'
              AND TRN-TYPE NOT = 'FE'
              AND TRN-TYPE NOT = 'DV'
              AND TRN-TYPE NOT = 'IN'
               MOVE 'Invalid Transaction Type' TO WS-ERROR-MESSAGE
               PERFORM 9999-ERROR-HANDLER
           END-IF
```

---

#### f. `TSTGEN00.cbl` (2300-GEN-TRANSACTION / 2310-GEN-TRAN-DATA)

**Before:**
```cobol
       2310-GEN-TRAN-DATA.
           MOVE 'BU' TO TRN-TYPE
```

**After:**
```cobol
       2310-GEN-TRAN-DATA.
           EVALUATE WS-TEST-TYPE
               WHEN 'BUY'
                   MOVE 'BU' TO TRN-TYPE
               WHEN 'SELL'
                   MOVE 'SL' TO TRN-TYPE
               WHEN 'DIVIDEND'
                   MOVE 'DV' TO TRN-TYPE
               WHEN 'INTEREST'
                   MOVE 'IN' TO TRN-TYPE
               ...
           END-EVALUATE
```

---

#### g. `TSTVAL00.cbl` (2100-EXECUTE-TEST)

**Before:**
```cobol
       2100-EXECUTE-TEST.
           IF ACTUAL-TRN-TYPE = EXPECTED-TRN-TYPE
               ADD 1 TO WS-PASS-COUNT
           ELSE
               ADD 1 TO WS-FAIL-COUNT
```

**After:**
```cobol
       2100-EXECUTE-TEST.
           IF ACTUAL-TRN-TYPE = EXPECTED-TRN-TYPE
               ADD 1 TO WS-PASS-COUNT
           ELSE
               STRING 'Mismatch Transaction Type: '
                      EXPECTED-TRN-TYPE ' vs ' ACTUAL-TRN-TYPE
                  DELIMITED BY SIZE
                  INTO WS-ERROR-MESSAGE
               ADD 1 TO WS-FAIL-COUNT
```
*Expand test cases to include new types.*

---

## 4. Conclusion  
The proposed changes introduce support for additional transaction types (e.g., DIVIDEND, INTEREST) across all relevant COBOL modules. The transaction record structure is updated, and all processing, reporting, validation, and test routines are enhanced to recognize and handle the new field values. This ensures compliance, improved business analytics, and future extensibility, while maintaining backward compatibility and clear traceability for technical review.

---
