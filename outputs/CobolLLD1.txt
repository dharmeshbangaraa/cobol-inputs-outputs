# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive overview and low-level design for the enhancement of the legacy COBOL application's batch transaction processing and reporting modules. The primary objective is to introduce a new `TRANSACTION-TYPE` field to the transaction record structure, ensuring it is processed and reported throughout the system. This document details the existing logic, the rationale for change, precise code insertion points, and structured diffs to guide implementation.

---

## 2. Existing Logic and Flow  

### 2.1 Overview  
The COBOL application processes batches of financial transactions, updating portfolio positions and generating summary reports. The architecture is modular, with a shared transaction record copybook (`TRNREC.cpy`), a batch processing program (`PORTTRAN.cbl`), and a reporting program (`RPTPOS00.cbl`). The flow is as follows:
- **Initialization:** Load configuration, open files, and prepare data structures.
- **Processing:** Read and validate transactions, update positions, handle different transaction types (buy, sell, transfer, fee), and maintain an audit trail.
- **Reporting:** Summarize and format processed transactions for output.

### 2.2 Detailed Logic  

#### Key Modules and Sections:
- **TRNREC.cpy:** Defines the `TRANSACTION-RECORD` structure, used by both processing and reporting programs.
- **PORTTRAN.cbl:** Main batch processor.
  - `2100-VALIDATE-TRANSACTION`: Validates each transaction.
  - `2120-CHECK-TRANSACTION-TYPE`: Determines transaction type and routes logic.
  - `2200-UPDATE-POSITIONS` through `2240-PROCESS-FEE`: Handle specific transaction types.
  - `2300-UPDATE-AUDIT-TRAIL`: Logs transaction activity.
- **RPTPOS00.cbl:** Reporting module.
  - `2200-PROCESS-TRANSACTIONS`: Reads processed transactions.
  - `2110-FORMAT-POSITION`: Formats transaction data for reporting.
  - `2000-PROCESS-REPORT`: Generates the final report.

#### Flowchart:
```mermaid
flowchart TD
    Start([Start])
    Init([Initialization])
    ReadBatch([Read Transaction Batch])
    Validate([2100-VALIDATE-TRANSACTION])
    CheckType([2120-CHECK-TRANSACTION-TYPE])
    UpdatePos([2200-UPDATE-POSITIONS])
    ProcessBuy([2210-PROCESS-BUY])
    ProcessSell([2220-PROCESS-SELL])
    ProcessTransfer([2230-PROCESS-TRANSFER])
    ProcessFee([2240-PROCESS-FEE])
    Audit([2300-UPDATE-AUDIT-TRAIL])
    Report([RPTPOS00.cbl: Reporting])
    End([End])

    Start --> Init --> ReadBatch --> Validate --> CheckType
    CheckType -->|BUY| ProcessBuy --> UpdatePos
    CheckType -->|SELL| ProcessSell --> UpdatePos
    CheckType -->|TRANSFER| ProcessTransfer --> UpdatePos
    CheckType -->|FEE| ProcessFee --> UpdatePos
    UpdatePos --> Audit --> Report --> End
```

---

## 3. Proposed Changes  

### 3.1 User Story or Analysis Report Summary  
**User Story:**  
_Add Transaction Type Field to Batch Processing and Reporting_  
A new field, `TRANSACTION-TYPE`, must be added to the transaction record structure. All batch processing and reporting logic must be updated to read, validate, process, and report this new field.

---

### 3.2 Proposed Code Changes Summary

#### 3.2.1 Impacted Sections and Files

| File             | Sections/Paragraphs Impacted                                                                                     |
|------------------|-----------------------------------------------------------------------------------------------------------------|
| TRNREC.cpy       | `TRANSACTION-RECORD`                                                                                            |
| PORTTRAN.cbl     | `2100-VALIDATE-TRANSACTION`, `2120-CHECK-TRANSACTION-TYPE`, `2200-UPDATE-POSITIONS`, `2210-PROCESS-BUY`, `2220-PROCESS-SELL`, `2230-PROCESS-TRANSFER`, `2240-PROCESS-FEE`, `2300-UPDATE-AUDIT-TRAIL` |
| RPTPOS00.cbl     | `2200-PROCESS-TRANSACTIONS`, `2110-FORMAT-POSITION`, `2000-PROCESS-REPORT`                                      |

- **Purpose of Changes:**  
  To enable the system to distinguish and process transactions by type, improving data granularity and reporting accuracy.

- **Impact:**  
  - All transaction processing logic will now branch based on the new `TRANSACTION-TYPE` field.
  - Reports will include the transaction type, providing more detailed summaries.
  - All consumers of `TRANSACTION-RECORD` must be recompiled and tested.

---

### 3.3 Insertion Points  

#### TRNREC.cpy
- **Where:** In the `TRANSACTION-RECORD` structure.
- **How:** Add a new field, e.g., `05 TRANSACTION-TYPE    PIC X(4).`, after existing key fields.

#### PORTTRAN.cbl
- **Where:** 
  - In the `2100-VALIDATE-TRANSACTION` paragraph, add validation for the new field.
  - In `2120-CHECK-TRANSACTION-TYPE`, branch logic based on `TRANSACTION-TYPE`.
  - In each transaction processing paragraph (`2210-` to `2240-`), ensure correct handling based on the new type.
  - In `2300-UPDATE-AUDIT-TRAIL`, log the new field.

#### RPTPOS00.cbl
- **Where:** 
  - In `2200-PROCESS-TRANSACTIONS`, read and store the new field.
  - In `2110-FORMAT-POSITION` and `2000-PROCESS-REPORT`, include the field in output.

---

### 3.4 Structured Diffs  

#### **TRNREC.cpy**

**Before:**
```cobol
01 TRANSACTION-RECORD.
   05 TRANSACTION-ID      PIC X(10).
   05 ACCOUNT-NUMBER      PIC X(12).
   05 TRANSACTION-DATE    PIC 9(8).
   05 AMOUNT              PIC S9(9)V99 COMP-3.
   ...
```

**After:**
```cobol
01 TRANSACTION-RECORD.
   05 TRANSACTION-ID      PIC X(10).
   05 ACCOUNT-NUMBER      PIC X(12).
   05 TRANSACTION-DATE    PIC 9(8).
   05 TRANSACTION-TYPE    PIC X(4).
   05 AMOUNT              PIC S9(9)V99 COMP-3.
   ...
```

---

#### **PORTTRAN.cbl**

**Before (2100-VALIDATE-TRANSACTION):**
```cobol
2100-VALIDATE-TRANSACTION.
    IF TRANSACTION-ID = SPACES OR ACCOUNT-NUMBER = SPACES
        MOVE 'E' TO ERROR-CODE
        PERFORM 9999-ERROR-HANDLING
        EXIT PARAGRAPH.
```

**After:**
```cobol
2100-VALIDATE-TRANSACTION.
    IF TRANSACTION-ID = SPACES OR ACCOUNT-NUMBER = SPACES
        MOVE 'E' TO ERROR-CODE
        PERFORM 9999-ERROR-HANDLING
        EXIT PARAGRAPH.
    IF TRANSACTION-TYPE NOT = 'BUY' AND
       TRANSACTION-TYPE NOT = 'SELL' AND
       TRANSACTION-TYPE NOT = 'TRAN' AND
       TRANSACTION-TYPE NOT = 'FEE'
        MOVE 'E' TO ERROR-CODE
        PERFORM 9999-ERROR-HANDLING
        EXIT PARAGRAPH.
```

**Before (2120-CHECK-TRANSACTION-TYPE):**
```cobol
2120-CHECK-TRANSACTION-TYPE.
    EVALUATE TRUE
        WHEN TRANSACTION-AMOUNT > 0
            PERFORM 2210-PROCESS-BUY
        WHEN TRANSACTION-AMOUNT < 0
            PERFORM 2220-PROCESS-SELL
        ...
    END-EVALUATE.
```

**After:**
```cobol
2120-CHECK-TRANSACTION-TYPE.
    EVALUATE TRANSACTION-TYPE
        WHEN 'BUY'
            PERFORM 2210-PROCESS-BUY
        WHEN 'SELL'
            PERFORM 2220-PROCESS-SELL
        WHEN 'TRAN'
            PERFORM 2230-PROCESS-TRANSFER
        WHEN 'FEE'
            PERFORM 2240-PROCESS-FEE
        WHEN OTHER
            MOVE 'E' TO ERROR-CODE
            PERFORM 9999-ERROR-HANDLING
    END-EVALUATE.
```

**Before (2300-UPDATE-AUDIT-TRAIL):**
```cobol
2300-UPDATE-AUDIT-TRAIL.
    MOVE TRANSACTION-ID TO AUDIT-TRAN-ID
    MOVE ACCOUNT-NUMBER TO AUDIT-ACCT-NO
    MOVE AMOUNT TO AUDIT-AMOUNT
    ...
```

**After:**
```cobol
2300-UPDATE-AUDIT-TRAIL.
    MOVE TRANSACTION-ID TO AUDIT-TRAN-ID
    MOVE ACCOUNT-NUMBER TO AUDIT-ACCT-NO
    MOVE TRANSACTION-TYPE TO AUDIT-TRAN-TYPE
    MOVE AMOUNT TO AUDIT-AMOUNT
    ...
```

---

#### **RPTPOS00.cbl**

**Before (2110-FORMAT-POSITION):**
```cobol
2110-FORMAT-POSITION.
    STRING TRANSACTION-ID DELIMITED BY ' '
           ACCOUNT-NUMBER DELIMITED BY ' '
           AMOUNT DELIMITED BY SIZE
      INTO REPORT-LINE
    ...
```

**After:**
```cobol
2110-FORMAT-POSITION.
    STRING TRANSACTION-ID DELIMITED BY ' '
           ACCOUNT-NUMBER DELIMITED BY ' '
           TRANSACTION-TYPE DELIMITED BY ' '
           AMOUNT DELIMITED BY SIZE
      INTO REPORT-LINE
    ...
```

**Before (2000-PROCESS-REPORT):**
```cobol
2000-PROCESS-REPORT.
    DISPLAY 'TRANSACTION REPORT'
    DISPLAY 'ID   ACCOUNT   AMOUNT'
    PERFORM 2200-PROCESS-TRANSACTIONS
    ...
```

**After:**
```cobol
2000-PROCESS-REPORT.
    DISPLAY 'TRANSACTION REPORT'
    DISPLAY 'ID   ACCOUNT   TYPE   AMOUNT'
    PERFORM 2200-PROCESS-TRANSACTIONS
    ...
```

---

## 4. Conclusion  
The addition of the `TRANSACTION-TYPE` field to the transaction record structure and its integration into batch processing and reporting modules will enable the system to process and report transactions with greater specificity. This change impacts core data structures and logic, requiring careful updates and thorough testing. The structured diffs and insertion points provided will facilitate accurate and efficient implementation, ensuring continued reliability of business-critical operations.

---
