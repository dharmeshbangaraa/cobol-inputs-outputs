1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the COBOL legacy application modules impacted by the integration of a real-time market price feed for dynamic portfolio valuation. The document details the existing logic, identifies insertion points for the required changes, and presents structured code diffs to guide implementation and review.

2. Existing Logic and Flow  
2.1 Overview  
The application is a multi-component legacy system responsible for portfolio valuation, price data ingestion, online display, audit/error handling, and historical price storage. The system is composed of batch, DB2, and CICS programs, with shared copybooks for data and audit structures.

2.2 Detailed Logic  

Impacted Components and Their Roles

- HISTLD00.cbl: Batch program for loading historical price data into VSAM and DB2.
- AUDITLOG.cpy: Copybook defining the audit trail record structure, used for logging all significant events, errors, and actions.

Example: HISTLD00.cbl (Batch Historical Loader)

- Initialization (1000-INITIALIZE, lines 81–85):
  - Opens files, connects to DB2, and initializes checkpoints.
- Main Processing (2000-PROCESS, lines 88–95):
  - Reads historical records, loads them into DB2, and manages commit logic.
- Termination (3000-TERMINATE, not shown):
  - Closes files and finalizes the batch process.

Example: AUDITLOG.cpy (Audit Record Structure)

- Defines the structure for audit records, including header, type, action, status, key info, before/after images, and message fields.
- Used by all major programs for consistent audit and error logging.

Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    Init["1000-INITIALIZE
(Open files,
Connect DB2,
Init checkpoints)"]
    Process["2000-PROCESS
(Read history,
Load to DB2,
Check commit)"]
    Terminate["3000-TERMINATE
(Close files,
Finalize)"]
    End(["End"])

    Start --> Init
    Init --> Process
    Process --> Terminate
    Terminate --> End
```

3. Proposed Changes  
3.1 User Story or Analysis Report Summary  
User Story: Integrate real-time market price feed for dynamic portfolio valuation.

- Ingest real-time prices via MQ/REST into DB2.
- Trigger batch valuation on price update.
- Auto-refresh CICS portfolio display within 10 seconds.
- Ensure audit/error logging for feed failures and stale data.
- Store historical prices for analytics/backtesting.

3.2 Proposed Code Changes Summary

3.2.1 Impacted Sections and Files

| File Path                                 | Sections/Paragraphs                |
|-------------------------------------------|------------------------------------|
| src/programs/db2/PRCFEED.cbl              | 0000-MAIN, 1000-INGEST-PRICE, 2000-UPDATE-DB2 |
| src/programs/batch/POSVAL00.cbl           | 0000-MAIN, 2000-REVALUE-POSITIONS, 2100-CALC-PNL |
| src/programs/cics/PORTDISP.cbl            | 1000-REFRESH-SCREEN, 2000-DISPLAY-PORT |
| src/copybook/db2/PRICEDATA.cpy            | PRICEDATA                          |
| src/copybook/common/AUDITLOG.cpy          | AUDIT-ENTRY, AUDIT-ERROR           |
| src/programs/batch/HISTLD00.cbl           | 1000-LOAD-HIST, 2000-STORE-VSAM    |

- Purpose of Changes:  
  To enable dynamic, real-time portfolio valuation by integrating a live market price feed, updating DB2, recalculating positions and P&L, refreshing online displays, and ensuring robust audit/error handling and historical storage.

- Impact:  
  - Enables real-time valuation and display.
  - Increases system complexity and inter-component dependencies.
  - Requires robust error/audit handling for operational resilience.

3.3 Insertion Points  

Note: Due to the absence of the main program code in the repository for most impacted files, only the available sections are detailed below.

src/programs/batch/HISTLD00.cbl

- 1000-INITIALIZE (lines 81–85):  
  Insert logic to initialize new real-time price feed connection if historical backfill is required from the live feed.

- 2000-PROCESS (lines 88–95):  
  Insert logic to process and store real-time price ticks into VSAM/DB2, and to call audit/error logging routines from AUDITLOG.cpy on failure.

src/copybook/common/AUDITLOG.cpy

- AUDIT-ENTRY, AUDIT-ERROR (lines 7–36):  
  Extend the structure if needed to capture new error types or feed metadata.

3.4 Structured Diffs  

src/programs/batch/HISTLD00.cbl

Before:  
```cobol
81       1000-INITIALIZE.
82           PERFORM 1100-OPEN-FILES
83           PERFORM 1200-CONNECT-DB2
84           PERFORM 1300-INIT-CHECKPOINTS
85           .
...
88       2000-PROCESS.
89           PERFORM 2100-READ-HISTORY
90           
91           IF MORE-RECORDS
92               PERFORM 2200-LOAD-TO-DB2
93               PERFORM 2300-CHECK-COMMIT
94           END-IF
95           .
```

After:  
```cobol
81       1000-INITIALIZE.
82           PERFORM 1100-OPEN-FILES
83           PERFORM 1200-CONNECT-DB2
84           PERFORM 1300-INIT-CHECKPOINTS
84A          * Initialize real-time price feed connection if backfill required
84B          PERFORM 1400-INIT-REALTIME-FEED
85           .
...
88       2000-PROCESS.
89           PERFORM 2100-READ-HISTORY
89A          * Ingest real-time price ticks if available
89B          PERFORM 2150-INGEST-REALTIME-PRICE
90           
91           IF MORE-RECORDS
92               PERFORM 2200-LOAD-TO-DB2
92A              * Store price tick in VSAM/DB2
92B              PERFORM 2250-STORE-PRICE-TICK
92C              * Audit success/failure
92D              PERFORM 2500-AUDIT-PRICE-LOAD
93               PERFORM 2300-CHECK-COMMIT
94           END-IF
95           .
```

src/copybook/common/AUDITLOG.cpy

Before:  
```cobol
 7       01  AUDIT-RECORD.
 8           05  AUD-HEADER.
 9               10  AUD-TIMESTAMP     PIC X(26).
10               10  AUD-SYSTEM-ID     PIC X(8).
11               10  AUD-USER-ID       PIC X(8).
12               10  AUD-PROGRAM       PIC X(8).
13               10  AUD-TERMINAL      PIC X(8).
14           05  AUD-TYPE             PIC X(4).
...
36           05  AUD-MESSAGE          PIC X(100).
```

After:  
```cobol
 7       01  AUDIT-RECORD.
 8           05  AUD-HEADER.
 9               10  AUD-TIMESTAMP     PIC X(26).
10               10  AUD-SYSTEM-ID     PIC X(8).
11               10  AUD-USER-ID       PIC X(8).
12               10  AUD-PROGRAM       PIC X(8).
13               10  AUD-TERMINAL      PIC X(8).
14           05  AUD-TYPE             PIC X(4).
15               88  AUD-TRANSACTION     VALUE 'TRAN'.
16               88  AUD-USER-ACTION     VALUE 'USER'.
17               88  AUD-SYSTEM-EVENT    VALUE 'SYST'.
17A              88  AUD-PRICE-FEED      VALUE 'FEED'.
...
36           05  AUD-MESSAGE          PIC X(100).
36A          05  AUD-FEED-METADATA    PIC X(100).
```

Note: For other files (PRCFEED.cbl, POSVAL00.cbl, PORTDISP.cbl, PRICEDATA.cpy), code was not available in the repository, so structured diffs cannot be provided. The above illustrates the approach for available files.

4. Conclusion  
The proposed changes enable the integration of a real-time market price feed, supporting dynamic portfolio valuation, timely online display updates, and robust audit/error handling. The LLD and structured diffs provide clear guidance for implementing and reviewing the changes, ensuring maintainability and operational resilience in the legacy COBOL environment.
