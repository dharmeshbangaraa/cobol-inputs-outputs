Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the COBOL application's transaction processing components. The focus is on the impact and implementation of the user story: **Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting**. The document details the existing logic, the rationale for change, and the precise code modifications required to support the new field across all relevant modules.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes business-critical transaction data in batch and utility modes. The transaction record structure is defined centrally in a copybook (`TRNREC.cpy`), which is included by all programs that read or write transaction files. Two key programs are impacted:
- **RPTPOS00.cbl**: Batch reporting program that reads transaction files and generates reports.
- **UTLVAL00.cbl**: Utility program that validates transaction file formats and contents.

### 2.2 Detailed Logic  

#### Transaction Record Structure (`src/copybook/common/TRNREC.cpy`)
- Defines the layout of each transaction record.
- All fields are fixed-length and used by all transaction-processing programs.

#### Batch Reporting Program (`src/programs/batch/RPTPOS00.cbl`)
- **1100-OPEN-FILES**: Opens transaction input files and report output files.
- **2200-PROCESS-TRANSACTIONS**: Reads each transaction record, processes data, and writes to the report.

#### Utility Validation Program (`src/programs/utility/UTLVAL00.cbl`)
- **1100-OPEN-FILES**: Opens transaction files for reading/writing.
- **2400-CHECK-FORMAT**: Validates the structure and content of each transaction record.

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    Init["Initialization:
Open Files"]
    ReadRec["Read
Transaction Record"]
    Validate["Validate
Record Format"]
    Process["Process
Transaction"]
    Report["Write
Report/Output"]
    End(["End"])

    Start --> Init
    Init --> ReadRec
    ReadRec --> Validate
    Validate --> Process
    Process --> Report
    Report --> End
```

#### Code References (Pre-Change)
- **TRNREC.cpy**: Defines fields such as TRANSACTION-ID, DATE, AMOUNT, etc.
- **RPTPOS00.cbl**: 
  - 1100-OPEN-FILES (lines 100-150): File open logic.
  - 2200-PROCESS-TRANSACTIONS (lines 200-350): Main processing loop.
- **UTLVAL00.cbl**:
  - 1100-OPEN-FILES (lines 100-150): File open logic.
  - 2400-CHECK-FORMAT (lines 400-500): Validation logic.

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add a `CHANNEL-CODE` field to the transaction file to enable channel identification in batch processing and reporting. This field will be used for downstream analytics and operational reporting.

### 3.2 Proposed Code Changes Summary:
#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy** (copybook structure)
- **src/programs/batch/RPTPOS00.cbl** (1100-OPEN-FILES, 2200-PROCESS-TRANSACTIONS)
- **src/programs/utility/UTLVAL00.cbl** (1100-OPEN-FILES, 2400-CHECK-FORMAT)

  - **Purpose of Changes:**  
    To introduce a new field, `CHANNEL-CODE`, in the transaction record layout and ensure all programs that read/write transaction records are updated to handle this field. This enables accurate channel-based reporting and validation.

  - **Impact:**  
    - All transaction-processing programs will now expect and handle the new field.
    - File layouts, record lengths, and validation logic must be updated.
    - Downstream reporting and analytics will have access to channel information.

### 3.3 Insertion Points  
- **TRNREC.cpy**: Add `CHANNEL-CODE` at the appropriate position in the record layout.
- **RPTPOS00.cbl**: Update file definitions and processing logic to include `CHANNEL-CODE`.
- **UTLVAL00.cbl**: Update file definitions, record length, and validation logic for the new field.

### 3.4 Structured Diffs  

#### src/copybook/common/TRNREC.cpy

**Before:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID        PIC X(10).
           05  TRANSACTION-DATE      PIC 9(8).
           05  TRANSACTION-AMOUNT    PIC 9(9)V99.
           05  ACCOUNT-NUMBER        PIC X(12).
           05  TRANSACTION-TYPE      PIC X(2).
           05  STATUS-CODE           PIC X(1).
```

**After:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID        PIC X(10).
           05  TRANSACTION-DATE      PIC 9(8).
           05  TRANSACTION-AMOUNT    PIC 9(9)V99.
           05  ACCOUNT-NUMBER        PIC X(12).
           05  TRANSACTION-TYPE      PIC X(2).
           05  STATUS-CODE           PIC X(1).
           05  CHANNEL-CODE          PIC X(4).
```

#### src/programs/batch/RPTPOS00.cbl

**Before (File Section):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 42 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       01  TRANSACTION-RECORD.
           COPY 'src/copybook/common/TRNREC.cpy'.
```

**After (File Section):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 46 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       01  TRANSACTION-RECORD.
           COPY 'src/copybook/common/TRNREC.cpy'.
```

**Before (2200-PROCESS-TRANSACTIONS, excerpt):**
```cobol
       IF TRANSACTION-TYPE = '01'
           ADD TRANSACTION-AMOUNT TO TOTAL-AMOUNT
           PERFORM WRITE-REPORT-RECORD.
```

**After (2200-PROCESS-TRANSACTIONS, excerpt):**
```cobol
       IF TRANSACTION-TYPE = '01'
           ADD TRANSACTION-AMOUNT TO TOTAL-AMOUNT
           DISPLAY 'CHANNEL: ' CHANNEL-CODE
           PERFORM WRITE-REPORT-RECORD.
```

#### src/programs/utility/UTLVAL00.cbl

**Before (File Section):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 42 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       01  TRANSACTION-RECORD.
           COPY 'src/copybook/common/TRNREC.cpy'.
```

**After (File Section):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 46 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       01  TRANSACTION-RECORD.
           COPY 'src/copybook/common/TRNREC.cpy'.
```

**Before (2400-CHECK-FORMAT, excerpt):**
```cobol
       IF TRANSACTION-TYPE NOT = '01' AND NOT = '02'
           DISPLAY 'INVALID TRANSACTION TYPE'
           MOVE 'E' TO STATUS-CODE.
```

**After (2400-CHECK-FORMAT, excerpt):**
```cobol
       IF TRANSACTION-TYPE NOT = '01' AND NOT = '02'
           DISPLAY 'INVALID TRANSACTION TYPE'
           MOVE 'E' TO STATUS-CODE.

       IF CHANNEL-CODE = SPACES OR CHANNEL-CODE = LOW-VALUES
           DISPLAY 'MISSING CHANNEL CODE'
           MOVE 'E' TO STATUS-CODE.
```

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to the transaction record structure and all related programs ensures that channel identification is consistently captured and available for batch processing, validation, and reporting. This change enhances the system's ability to support channel-based analytics and operational reporting, while maintaining data integrity and compliance with COBOL best practices.
