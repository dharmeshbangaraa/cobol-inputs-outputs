# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the enhancement of the COBOL legacy application suite, specifically addressing the addition of a new `TRANSACTION-TYPE` field to the transaction record structure. The changes impact the batch processing and reporting modules, ensuring that the new field is properly integrated, processed, and displayed, while maintaining backward compatibility.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application suite processes business-critical transaction data in a modular fashion. The main components are:

- **TRNREC.cpy**: Defines the transaction record structure used throughout the system.
- **PORTTRAN.cbl**: Batch processing program that reads, validates, and processes transactions.
- **RPTPOS00.cbl**: Reporting program that reads transaction history and generates daily reports.

The flow is structured into initialization, main processing (including validation and business logic), and termination/reporting.

### 2.2 Detailed Logic  

#### TRNREC.cpy (Transaction Record Copybook)
- **Defines the structure of a transaction record** with fields for date, time, portfolio, investment, type, quantity, price, amount, currency, status, audit data, and filler.
- The transaction type (`TRN-TYPE`) is currently a 2-character field with values such as 'BU', 'SL', 'TR', 'FE'.

#### PORTTRAN.cbl (Batch Processing)
- **Initialization**: Opens transaction and portfolio files, initializes counters and status flags.
- **Main Processing**: Reads each transaction, validates fields (portfolio ID, transaction type, amounts), and processes transactions by type (buy, sell, transfer, fee).
- **Audit Trail**: Updates audit records after each transaction.
- **Termination**: Closes files and displays summary statistics.

#### RPTPOS00.cbl (Reporting)
- **Initialization**: Opens position master, transaction history, and report files.
- **Main Processing**: Reads transaction history, processes transaction activity, and writes detailed report records.
- **Termination**: Closes files and displays summary statistics.

#### Flowchart:
```
flowchart TD
    Start(["Start"])
    Init["Initialization:
Open Files,
Init Counters"]
    ReadTrans["Read
Transaction"]
    Validate["Validate
Transaction"]
    ProcessType["Process by
Transaction Type"]
    UpdateAudit["Update
Audit Trail"]
    WriteReport["Write
Report Record"]
    Terminate["Termination:
Close Files,
Display Stats"]
    End(["End"])

    Start --> Init
    Init --> ReadTrans
    ReadTrans --> Validate
    Validate --> ProcessType
    ProcessType --> UpdateAudit
    UpdateAudit --> WriteReport
    WriteReport --> Terminate
    Terminate --> End
```

#### Key Code References

- **TRNREC.cpy**
  - `01 TRANSACTION-RECORD` (Line 6)
  - `TRN-TYPE` (Line 13)

- **PORTTRAN.cbl**
  - `2000-PROCESS-TRANSACTIONS` (Line 65)
  - `2100-VALIDATE-TRANSACTION` (Line 75)
  - `2120-CHECK-TRANSACTION-TYPE` (Line 93)
  - `2200-UPDATE-POSITIONS` (Line 111)
  - `2300-UPDATE-AUDIT-TRAIL` (Line 155)

- **RPTPOS00.cbl**
  - `2000-PROCESS-REPORT`
  - `2100-TRANSACTION-ACTIVITY`
  - `2200-WRITE-TRANSACTION-DETAIL`

---

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add `TRANSACTION-TYPE` (PIC X(10)) to the transaction record layout in the copybook used by both batch processing and reporting programs. Update batch processing to accept, store, and process the new field. Update reporting to read and display the new field. Ensure backward compatibility for missing transaction type values.

### 3.2 Proposed Code Changes Summary

#### 3.2.1 Impacted Sections and Files:
- **TRNREC.cpy**
  - *Purpose of Changes*: Add `TRANSACTION-TYPE` field to the transaction record structure.
  - *Impact*: All programs using this copybook will inherit the new field; record length changes.
- **PORTTRAN.cbl**
  - *Purpose of Changes*: Accept, validate, and process the new `TRANSACTION-TYPE` field in batch processing.
  - *Impact*: Logic must be updated to handle the new field, including validation, processing, and audit trail. Must handle legacy records where the field may be missing.
- **RPTPOS00.cbl**
  - *Purpose of Changes*: Read and display the new `TRANSACTION-TYPE` in reports.
  - *Impact*: Report layouts and logic must be updated to include the new field, with fallback for legacy records.

### 3.3 Insertion Points

- **TRNREC.cpy**:  
  Insert the new `TRANSACTION-TYPE` field (PIC X(10)) after `TRN-TYPE` in the `TRANSACTION-RECORD` structure.

- **PORTTRAN.cbl**:  
  - Update all references to the transaction record to include the new field.
  - In `2100-VALIDATE-TRANSACTION` and `2120-CHECK-TRANSACTION-TYPE`, add logic to validate the new field, and ensure backward compatibility (e.g., if the field is blank, treat as legacy).
  - In `2300-UPDATE-AUDIT-TRAIL`, include the new field in the audit message.

- **RPTPOS00.cbl**:  
  - Update the report record layout and write logic in `2200-WRITE-TRANSACTION-DETAIL` to include the new field.
  - Add logic to display a default or blank value if the field is missing.

### 3.4 Structured Diffs

#### **TRNREC.cpy**

**Before:**
```cobol
           10  TRN-TYPE           PIC X(02).
               88  TRN-TYPE-BUY     VALUE 'BU'.
               88  TRN-TYPE-SELL    VALUE 'SL'.
               88  TRN-TYPE-TRANS   VALUE 'TR'.
               88  TRN-TYPE-FEE     VALUE 'FE'.
```

**After:**
```cobol
           10  TRN-TYPE           PIC X(02).
               88  TRN-TYPE-BUY     VALUE 'BU'.
               88  TRN-TYPE-SELL    VALUE 'SL'.
               88  TRN-TYPE-TRANS   VALUE 'TR'.
               88  TRN-TYPE-FEE     VALUE 'FE'.
           10  TRANSACTION-TYPE    PIC X(10).
```

---

#### **PORTTRAN.cbl**

**In 2100-VALIDATE-TRANSACTION and 2120-CHECK-TRANSACTION-TYPE:**

**Before:**
```cobol
       2120-CHECK-TRANSACTION-TYPE.
           EVALUATE TRN-TYPE
               WHEN 'BU'
               WHEN 'SL'
               WHEN 'TR'
               WHEN 'FE'
                   CONTINUE
               WHEN OTHER
                   STRING 'Invalid Transaction Type: '
                          TRN-TYPE
                     DELIMITED BY SIZE
                     INTO ERR-TEXT
           END-EVALUATE
           .
```

**After:**
```cobol
       2120-CHECK-TRANSACTION-TYPE.
           IF TRANSACTION-TYPE = SPACES
               * Backward compatibility: default to TRN-TYPE
               MOVE TRN-TYPE TO TRANSACTION-TYPE
           END-IF

           EVALUATE TRANSACTION-TYPE
               WHEN 'BUY'
               WHEN 'SELL'
               WHEN 'TRANSFER'
               WHEN 'FEE'
                   CONTINUE
               WHEN OTHER
                   * If legacy code, check TRN-TYPE as fallback
                   EVALUATE TRN-TYPE
                       WHEN 'BU'
                       WHEN 'SL'
                       WHEN 'TR'
                       WHEN 'FE'
                           CONTINUE
                       WHEN OTHER
                           STRING 'Invalid Transaction Type: '
                                  TRANSACTION-TYPE
                             DELIMITED BY SIZE
                             INTO ERR-TEXT
                   END-EVALUATE
           END-EVALUATE
           .
```

**In 2300-UPDATE-AUDIT-TRAIL:**

**Before:**
```cobol
           STRING 'Transaction: ' DELIMITED BY SIZE
                  TRN-TYPE       DELIMITED BY SIZE
                  ' Amount: '    DELIMITED BY SIZE
                  TRN-AMOUNT     DELIMITED BY SIZE
                  ' Units: '     DELIMITED BY SIZE
                  TRN-QUANTITY   DELIMITED BY SIZE
             INTO AUD-MESSAGE
```

**After:**
```cobol
           STRING 'Transaction: ' DELIMITED BY SIZE
                  TRANSACTION-TYPE DELIMITED BY SIZE
                  ' (' DELIMITED BY SIZE
                  TRN-TYPE DELIMITED BY SIZE
                  ') Amount: '    DELIMITED BY SIZE
                  TRN-AMOUNT     DELIMITED BY SIZE
                  ' Units: '     DELIMITED BY SIZE
                  TRN-QUANTITY   DELIMITED BY SIZE
             INTO AUD-MESSAGE
```

---

#### **RPTPOS00.cbl**

**In 2200-WRITE-TRANSACTION-DETAIL:**

**Before:**
```cobol
           STRING TRN-DATE DELIMITED BY SIZE
                  TRN-TIME DELIMITED BY SIZE
                  TRN-PORTFOLIO-ID DELIMITED BY SIZE
                  TRN-TYPE DELIMITED BY SIZE
                  TRN-INVESTMENT-ID DELIMITED BY SIZE
                  TRN-QUANTITY DELIMITED BY SIZE
                  TRN-AMOUNT DELIMITED BY SIZE
             INTO REPORT-RECORD
```

**After:**
```cobol
           STRING TRN-DATE DELIMITED BY SIZE
                  TRN-TIME DELIMITED BY SIZE
                  TRN-PORTFOLIO-ID DELIMITED BY SIZE
                  TRN-TYPE DELIMITED BY SIZE
                  TRANSACTION-TYPE DELIMITED BY SIZE
                  TRN-INVESTMENT-ID DELIMITED BY SIZE
                  TRN-QUANTITY DELIMITED BY SIZE
                  TRN-AMOUNT DELIMITED BY SIZE
             INTO REPORT-RECORD
```

**Backward Compatibility Handling:**
```cobol
           IF TRANSACTION-TYPE = SPACES
               MOVE TRN-TYPE TO TRANSACTION-TYPE
           END-IF
```

---

## 4. Conclusion  
The proposed enhancements introduce a new `TRANSACTION-TYPE` field (PIC X(10)) to the transaction record, enabling richer transaction categorization and reporting. All impacted modules—transaction record copybook, batch processing, and reporting—are updated to process and display the new field, with logic to ensure backward compatibility for legacy data. These changes improve the system's extensibility and reporting capabilities while preserving existing functionality.
