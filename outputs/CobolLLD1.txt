## Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the enhancement of the COBOL legacy application to enable Real-Time Market Price Feed Integration for Dynamic Portfolio Updates. The document details the existing logic, identifies impacted modules, and outlines the proposed changes, including structured code diffs and insertion points, to support seamless integration and maintainability.

---

## 2. Existing Logic and Flow  

### 2.1 Overview  
The COBOL application manages portfolio records, processes updates, and maintains audit logs. The main modules involved are:

- **PORTUPDT.cbl**: Handles portfolio updates, including initialization, processing, and applying updates.
- **PORTFLIO.cpy**: Defines the portfolio master record structure.
- **RPTAUD00.cbl**: Generates audit reports and handles error logging.
- **AUDITLOG.cpy**: Defines the audit trail record structure.

### 2.2 Detailed Logic  

#### **PORTUPDT.cbl**

- **1000-INITIALIZE** (Lines ~61-74):  
  Initializes working storage, opens portfolio and update files, and checks for file open errors.
- **2000-PROCESS** (Lines ~76-83):  
  Reads update records and triggers processing or sets end-of-file.
- **2100-PROCESS-UPDATE** (Lines ~85-95):  
  Locates the portfolio record to update; if found, proceeds to apply the update.
- **2200-APPLY-UPDATE** (Lines ~97-112):  
  Applies the update to the portfolio record based on the update type and rewrites the record.

#### **PORTFLIO.cpy**

Defines the structure of a portfolio record, including key, client, portfolio, financial, and audit information.

#### **RPTAUD00.cbl**

- **1000-INITIALIZE** (Lines ~56-68):  
  Opens all required files and writes report headers.
- **2000-PROCESS-REPORT** (Lines ~70-80):  
  Main report processing logic, including audit trail, error log, and summary writing.
- **9999-ERROR-HANDLER** (Lines ~98-102):  
  Handles errors by displaying a message and setting the return code.

#### **AUDITLOG.cpy**

Defines the structure of an audit log record, including header, type, action, status, key info, before/after images, and message.

---

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    Init["1000-INITIALIZE
(Open files, init WS)"]
    ReadUpdate["2000-PROCESS
(Read update record)"]
    EOFCheck["End of Update File?"]
    ProcessUpdate["2100-PROCESS-UPDATE
(Locate portfolio record)"]
    ApplyUpdate["2200-APPLY-UPDATE
(Apply update, rewrite)"]
    AuditLog["RPTAUD00
(Audit/Error Logging)"]
    End(["End"])

    Start --> Init
    Init --> ReadUpdate
    ReadUpdate --> EOFCheck
    EOFCheck -- No --> ProcessUpdate
    ProcessUpdate --> ApplyUpdate
    ApplyUpdate --> AuditLog
    AuditLog --> ReadUpdate
    EOFCheck -- Yes --> End
```

---

## 3. Proposed Changes  

### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Enable Real-Time Market Price Feed Integration for Dynamic Portfolio Updates.

**Summary:**  
- Integrate real-time price feed ingestion.
- Update portfolio valuations dynamically.
- Enhance error handling and audit logging for real-time updates.
- Update data structures to support new fields (e.g., last price, timestamp).

---

### 3.2 Proposed Code Changes Summary

#### 3.2.1 Impacted Sections and Files

| File Path                                 | Sections/Paragraphs Impacted                |
|-------------------------------------------|---------------------------------------------|
| `src/programs/portfolio/PORTUPDT.cbl`     | 1000-INITIALIZE, 2000-PROCESS, 2100-PROCESS-UPDATE, 2200-APPLY-UPDATE |
| `src/copybook/common/PORTFLIO.cpy`        | Entire file                                |
| `src/programs/batch/RPTAUD00.cbl`         | 1000-INITIALIZE, 2000-PROCESS-REPORT, 9999-ERROR-HANDLER |
| `src/copybook/common/AUDITLOG.cpy`        | Entire file                                |

- **Purpose of Changes:**  
  To enable ingestion and application of real-time market price feeds, recalculate portfolio valuations, and ensure robust audit and error logging for compliance and traceability.

- **Impact:**  
  - Portfolio records will reflect up-to-date market values.
  - Audit logs will capture all price update events and errors.
  - Data structures will support new fields for real-time integration.
  - Enhanced error handling and reporting.

---

### 3.3 Insertion Points  

- **PORTUPDT.cbl**
  - **1000-INITIALIZE**: Add initialization for real-time feed connection/status.
  - **2000-PROCESS**: Insert logic to poll/receive real-time price updates.
  - **2100-PROCESS-UPDATE**: Enhance to process real-time price data.
  - **2200-APPLY-UPDATE**: Update logic to recalculate valuations and store new price/timestamp.

- **PORTFLIO.cpy**
  - Add fields for LAST-PRICE, LAST-PRICE-TIMESTAMP, and PRICE-STATUS.

- **RPTAUD00.cbl**
  - **1000-INITIALIZE**: Prepare for new audit log fields.
  - **2000-PROCESS-REPORT**: Report on real-time price update events.
  - **9999-ERROR-HANDLER**: Enhance error messages for real-time integration.

- **AUDITLOG.cpy**
  - Add fields for price update details (e.g., NEW-PRICE, FEED-TIMESTAMP).

---

### 3.4 Structured Diffs  

#### **PORTFLIO.cpy**

**Before:**
```cobol
     05  PORT-FINANCIAL-INFO.
         10  PORT-TOTAL-VALUE    PIC S9(13)V99 COMP-3.
         10  PORT-CASH-BALANCE   PIC S9(13)V99 COMP-3.
```

**After:**
```cobol
     05  PORT-FINANCIAL-INFO.
         10  PORT-TOTAL-VALUE        PIC S9(13)V99 COMP-3.
         10  PORT-CASH-BALANCE       PIC S9(13)V99 COMP-3.
         10  PORT-LAST-PRICE         PIC S9(9)V99 COMP-3.
         10  PORT-LAST-PRICE-TIMESTAMP PIC 9(14).
         10  PORT-PRICE-STATUS       PIC X(1).
             88  PORT-PRICE-OK       VALUE 'O'.
             88  PORT-PRICE-STALE    VALUE 'S'.
             88  PORT-PRICE-ERROR    VALUE 'E'.
```

---

#### **PORTUPDT.cbl**

**Before (1000-INITIALIZE):**
```cobol
1000-INITIALIZE.
    INITIALIZE WS-WORK-AREAS

    OPEN I-O   PORTFOLIO-FILE
    OPEN INPUT UPDATE-FILE

    IF NOT WS-SUCCESS-STATUS OR 
       NOT WS-UPDT-SUCCESS
       DISPLAY 'Error opening files: ' 
               'PORT=' WS-FILE-STATUS
               'UPDT=' WS-UPDT-STATUS
       MOVE WS-ERROR TO WS-RETURN-CODE
       PERFORM 3000-TERMINATE
    END-IF
    .
```

**After (1000-INITIALIZE):**
```cobol
1000-INITIALIZE.
    INITIALIZE WS-WORK-AREAS

    OPEN I-O   PORTFOLIO-FILE
    OPEN INPUT UPDATE-FILE

    * Initialize real-time price feed connection
    PERFORM 1050-INIT-REALTIME-FEED

    IF NOT WS-SUCCESS-STATUS OR 
       NOT WS-UPDT-SUCCESS
       DISPLAY 'Error opening files: ' 
               'PORT=' WS-FILE-STATUS
               'UPDT=' WS-UPDT-STATUS
       MOVE WS-ERROR TO WS-RETURN-CODE
       PERFORM 3000-TERMINATE
    END-IF
    .
```

---

**Before (2000-PROCESS):**
```cobol
2000-PROCESS.
    READ UPDATE-FILE
        AT END
            SET END-OF-FILE TO TRUE
        NOT AT END
            PERFORM 2100-PROCESS-UPDATE
    END-READ
    .
```

**After (2000-PROCESS):**
```cobol
2000-PROCESS.
    * Poll or receive real-time price feed
    PERFORM 2050-RECEIVE-REALTIME-PRICE

    READ UPDATE-FILE
        AT END
            SET END-OF-FILE TO TRUE
        NOT AT END
            PERFORM 2100-PROCESS-UPDATE
    END-READ
    .
```

---

**Before (2100-PROCESS-UPDATE):**
```cobol
2100-PROCESS-UPDATE.
    MOVE UPDT-KEY TO PORT-KEY

    READ PORTFOLIO-FILE

    IF WS-SUCCESS-STATUS
        PERFORM 2200-APPLY-UPDATE
    ELSE
        ADD 1 TO WS-ERROR-COUNT
        DISPLAY 'Record not found: ' PORT-KEY
    END-IF
    .
```

**After (2100-PROCESS-UPDATE):**
```cobol
2100-PROCESS-UPDATE.
    MOVE UPDT-KEY TO PORT-KEY

    READ PORTFOLIO-FILE

    IF WS-SUCCESS-STATUS
        * If real-time price update available, update fields
        IF WS-REALTIME-PRICE-AVAILABLE
            MOVE WS-REALTIME-PRICE TO PORT-LAST-PRICE
            MOVE WS-REALTIME-TIMESTAMP TO PORT-LAST-PRICE-TIMESTAMP
            MOVE 'O' TO PORT-PRICE-STATUS
        END-IF
        PERFORM 2200-APPLY-UPDATE
    ELSE
        ADD 1 TO WS-ERROR-COUNT
        DISPLAY 'Record not found: ' PORT-KEY
    END-IF
    .
```

---

**Before (2200-APPLY-UPDATE):**
```cobol
2200-APPLY-UPDATE.
    EVALUATE TRUE
        WHEN UPDT-STATUS
            MOVE UPDT-NEW-VALUE TO PORT-STATUS
        WHEN UPDT-NAME
            MOVE UPDT-NEW-VALUE TO PORT-CLIENT-NAME
        WHEN UPDT-VALUE
            MOVE UPDT-NEW-VALUE TO WS-NUMERIC-WORK
            MOVE WS-NUMERIC-WORK TO PORT-TOTAL-VALUE
    END-EVALUATE

    REWRITE PORT-RECORD

    IF WS-SUCCESS-STATUS
        ADD 1 TO WS-UPDATE-COUNT
    ELSE
        ADD 1 TO WS-ERROR-COUNT
        DISPLAY 'Update failed for: ' PORT-KEY
    END-IF
    .
```

**After (2200-APPLY-UPDATE):**
```cobol
2200-APPLY-UPDATE.
    EVALUATE TRUE
        WHEN UPDT-STATUS
            MOVE UPDT-NEW-VALUE TO PORT-STATUS
        WHEN UPDT-NAME
            MOVE UPDT-NEW-VALUE TO PORT-CLIENT-NAME
        WHEN UPDT-VALUE
            MOVE UPDT-NEW-VALUE TO WS-NUMERIC-WORK
            MOVE WS-NUMERIC-WORK TO PORT-TOTAL-VALUE
    END-EVALUATE

    * If real-time price present, recalculate portfolio value
    IF WS-REALTIME-PRICE-AVAILABLE
        COMPUTE PORT-TOTAL-VALUE = WS-REALTIME-PRICE * WS-PORTFOLIO_UNITS
        MOVE 'O' TO PORT-PRICE-STATUS
    END-IF

    REWRITE PORT-RECORD

    IF WS-SUCCESS-STATUS
        ADD 1 TO WS-UPDATE-COUNT
        * Log audit for real-time price update
        PERFORM 2500-LOG-REALTIME-AUDIT
    ELSE
        ADD 1 TO WS-ERROR-COUNT
        DISPLAY 'Update failed for: ' PORT-KEY
    END-IF
    .
```

---

#### **AUDITLOG.cpy**

**Before:**
```cobol
     05  AUD-BEFORE-IMAGE     PIC X(100).
     05  AUD-AFTER-IMAGE      PIC X(100).
     05  AUD-MESSAGE          PIC X(100).
```

**After:**
```cobol
     05  AUD-BEFORE-IMAGE     PIC X(100).
     05  AUD-AFTER-IMAGE      PIC X(100).
     05  AUD-NEW-PRICE        PIC S9(9)V99 COMP-3.
     05  AUD-FEED-TIMESTAMP   PIC 9(14).
     05  AUD-MESSAGE          PIC X(100).
```

---

#### **RPTAUD00.cbl**

**Before (9999-ERROR-HANDLER):**
```cobol
9999-ERROR-HANDLER.
    DISPLAY WS-ERROR-MESSAGE
    MOVE 12 TO RETURN-CODE
    GOBACK.
```

**After (9999-ERROR-HANDLER):**
```cobol
9999-ERROR-HANDLER.
    DISPLAY WS-ERROR-MESSAGE
    * Log error event for real-time price feed
    IF WS-REALTIME-ERROR
        MOVE WS-REALTIME-ERROR-MSG TO AUD-MESSAGE
        PERFORM 2500-LOG-REALTIME-AUDIT
    END-IF
    MOVE 12 TO RETURN-CODE
    GOBACK.
```

---

## 4. Conclusion  
The proposed changes enable the COBOL application to ingest and process real-time market price feeds, dynamically update portfolio valuations, and provide robust audit and error logging. The enhancements ensure that the system remains compliant, traceable, and responsive to market changes, supporting business-critical operations with improved accuracy and transparency.
