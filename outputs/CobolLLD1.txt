# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical and low-level design for the enhancement of the COBOL legacy portfolio system. The enhancement introduces a new `TRANSACTION-TYPE` field to the transaction record, updates the batch processing program to handle this field, and modifies the reporting program to display it. The goal is to enable portfolio operations analysts to track, analyze, and report on different types of portfolio transactions for compliance and business insights.

---

## 2. Existing Logic and Flow  

### 2.1 Overview  
The legacy portfolio system processes and reports on portfolio transactions. The system is comprised of:
- A **transaction record copybook** (`TRNREC.cpy`) that defines the canonical structure of a transaction.
- A **batch transaction processing program** (`PORTTRAN.cbl`) that reads, validates, and processes transactions, updating portfolio positions and audit trails.
- A **reporting program** (`RPTPOS00.cbl`) that generates daily position and transaction activity reports.

### 2.2 Detailed Logic  

#### 2.2.1 Transaction Record Layout (`TRNREC.cpy`)
```cobol
01  TRANSACTION-RECORD.
    05  TRN-KEY.
        10  TRN-DATE           PIC X(08).
        10  TRN-TIME           PIC X(06).
        10  TRN-PORTFOLIO-ID   PIC X(08).
        10  TRN-SEQUENCE-NO    PIC X(06).
    05  TRN-DATA.
        10  TRN-INVESTMENT-ID  PIC X(10).
        10  TRN-TYPE           PIC X(02).
            88  TRN-TYPE-BUY     VALUE 'BU'.
            88  TRN-TYPE-SELL    VALUE 'SL'.
            88  TRN-TYPE-TRANS   VALUE 'TR'.
            88  TRN-TYPE-FEE     VALUE 'FE'.
        10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
        10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
        10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
        10  TRN-CURRENCY      PIC X(03).
        10  TRN-STATUS        PIC X(01).
            88  TRN-STATUS-PEND   VALUE 'P'.
            88  TRN-STATUS-DONE   VALUE 'D'.
            88  TRN-STATUS-FAIL   VALUE 'F'.
            88  TRN-STATUS-REV    VALUE 'R'.
    05  TRN-AUDIT.
        10  TRN-PROCESS-DATE  PIC X(26).
        10  TRN-PROCESS-USER  PIC X(08).
    05  TRN-FILLER           PIC X(50).
```
- **Key fields:** Date, Time, Portfolio ID, Investment ID, Type, Quantity, Price, Amount, Currency, Status, Audit info.

---

#### 2.2.2 Batch Transaction Processing (`PORTTRAN.cbl`)

- **Initialization (`1000-INITIALIZE`):**
  - Opens transaction and portfolio files.
  - Initializes counters and file status flags.

- **Main Processing (`2000-PROCESS-TRANSACTIONS`):**
  - Reads each transaction record.
  - Validates portfolio ID, transaction type, and amounts.
  - Updates portfolio positions based on transaction type (BUY, SELL, TRANSFER, FEE).
  - Writes audit trail for each transaction.

- **Validation (`2100-VALIDATE-TRANSACTION`):**
  - Ensures portfolio exists.
  - Checks transaction type is one of 'BU', 'SL', 'TR', 'FE'.
  - Validates quantity, price, and amount.

- **Update Positions (`2200-UPDATE-POSITIONS`):**
  - Routes to specific logic for BUY, SELL, TRANSFER, FEE.
  - Updates portfolio records accordingly.

- **Audit Trail (`2300-UPDATE-AUDIT-TRAIL`):**
  - Logs transaction details, including type, amount, and quantity.

- **Termination (`3000-TERMINATE`):**
  - Closes files and displays summary statistics.

**Transaction Record Handling:**
- **Read:** `READ TRANSACTION-FILE`
- **Portfolio Update:** `REWRITE PORTFOLIO-RECORD`
- **Audit:** Calls `AUDPROC` to write audit record.

---

#### 2.2.3 Reporting (`RPTPOS00.cbl`)

- **Initialization:**
  - Opens position master, transaction history, and report files.
  - Writes report headers.

- **Main Processing:**
  - Reads transaction history.
  - For each transaction, extracts key fields (date, time, portfolio, type, etc.).
  - Writes transaction details to the report.

- **Termination:**
  - Closes all files.

**Transaction Record Handling:**
- **Read:** `READ TRANSACTION-HISTORY`
- **Report Write:** Writes formatted transaction details to `REPORT-FILE`.

---

#### Flowchart

```mermaid
flowchart TD
    Start([Start])
    Init([Initialization])
    ReadTrans([Read Transaction Record])
    Validate([Validate Transaction])
    Update([Update Portfolio Positions])
    Audit([Update Audit Trail])
    NextTrans{More Records?}
    Term([Termination])
    ReportStart([Start Report])
    ReadHist([Read Transaction History])
    WriteDetail([Write Transaction Detail])
    NextHist{More History?}
    End([End])

    Start --> Init
    Init --> ReadTrans
    ReadTrans --> Validate
    Validate --> Update
    Update --> Audit
    Audit --> NextTrans
    NextTrans -- Yes --> ReadTrans
    NextTrans -- No --> Term
    Term --> ReportStart
    ReportStart --> ReadHist
    ReadHist --> WriteDetail
    WriteDetail --> NextHist
    NextHist -- Yes --> ReadHist
    NextHist -- No --> End
```

---

## 3. Proposed Changes  

### 3.1 User Story or Analysis Report Summary  
**User Story:**  
As a Portfolio operations analyst, I want to record and display the type of each transaction (e.g., BUY, SELL, DIVIDEND) in both processing and reporting programs so that I can track, analyze, and report on different types of portfolio transactions for compliance and business insights.

**Acceptance Criteria:**
- Add a new field, `TRANSACTION-TYPE (PIC X(10))`, to the transaction record layout in the relevant copybook.
- Update batch processing to accept, store, and process the new field.
- Update reporting to read and display the new field.
- Handle missing transaction type gracefully (display as blank or "UNKNOWN").

---

### 3.2 Proposed Code Changes Summary

#### 3.2.1 Impacted Sections and Files

| File/Section         | Purpose of Changes                                                                                      | Impact                                      |
|----------------------|--------------------------------------------------------------------------------------------------------|---------------------------------------------|
| `TRNREC.cpy`         | Add `TRANSACTION-TYPE` field to transaction record layout                                              | All programs using this copybook            |
| `PORTTRAN.cbl`       | Accept, store, and process the new transaction type field                                              | Transaction validation, processing, audit   |
| `RPTPOS00.cbl`       | Read and display transaction type in the generated summary report                                      | Transaction detail reporting                |

---

### 3.3 Insertion Points

#### `TRNREC.cpy`
- **Where:** After `TRN-TYPE` in the `TRANSACTION-RECORD` layout.
- **How:** Add a new field `TRANSACTION-TYPE` (PIC X(10)).

#### `PORTTRAN.cbl`
- **Where:** 
  - In the `FILE SECTION` and all references to transaction record.
  - In `2100-VALIDATE-TRANSACTION` and `2120-CHECK-TRANSACTION-TYPE` to handle the new field.
  - In `2300-UPDATE-AUDIT-TRAIL` to log the new field.

- **How:** 
  - Accept and process the new field when reading/writing transaction records.
  - If missing, set to spaces or "UNKNOWN".

#### `RPTPOS00.cbl`
- **Where:** 
  - In the transaction detail section of the report (`2100-TRANSACTION-DETAIL`, `2200-WRITE-TRANSACTION-DETAIL`).
- **How:** 
  - Read and display the new field.
  - If missing, display as blank or "UNKNOWN".

---

### 3.4 Structured Diffs

#### `TRNREC.cpy`

**Before:**
```cobol
10  TRN-TYPE           PIC X(02).
    88  TRN-TYPE-BUY     VALUE 'BU'.
    88  TRN-TYPE-SELL    VALUE 'SL'.
    88  TRN-TYPE-TRANS   VALUE 'TR'.
    88  TRN-TYPE-FEE     VALUE 'FE'.
```

**After:**
```cobol
10  TRN-TYPE           PIC X(02).
    88  TRN-TYPE-BUY     VALUE 'BU'.
    88  TRN-TYPE-SELL    VALUE 'SL'.
    88  TRN-TYPE-TRANS   VALUE 'TR'.
    88  TRN-TYPE-FEE     VALUE 'FE'.
10  TRANSACTION-TYPE    PIC X(10).
```

---

#### `PORTTRAN.cbl`

**Before:**
```cobol
FD  TRANSACTION-FILE
    RECORDING MODE IS F
    BLOCK CONTAINS 0 RECORDS.
COPY TRNREC.
```
**After:**
```cobol
FD  TRANSACTION-FILE
    RECORDING MODE IS F
    BLOCK CONTAINS 0 RECORDS.
COPY TRNREC.
* TRANSACTION-TYPE (PIC X(10)) now available in TRANSACTION-RECORD
```

**Before (Validation):**
```cobol
PERFORM 2120-CHECK-TRANSACTION-TYPE
...
2120-CHECK-TRANSACTION-TYPE.
    EVALUATE TRN-TYPE
        WHEN 'BU'
        WHEN 'SL'
        WHEN 'TR'
        WHEN 'FE'
            CONTINUE
        WHEN OTHER
            STRING 'Invalid Transaction Type: '
                   TRN-TYPE
               DELIMITED BY SIZE
               INTO ERR-TEXT
    END-EVALUATE
.
```
**After (Validation):**
```cobol
PERFORM 2120-CHECK-TRANSACTION-TYPE
...
2120-CHECK-TRANSACTION-TYPE.
    IF TRANSACTION-TYPE = SPACES OR TRANSACTION-TYPE = LOW-VALUES
        MOVE 'UNKNOWN' TO TRANSACTION-TYPE
    END-IF
    EVALUATE TRN-TYPE
        WHEN 'BU'
        WHEN 'SL'
        WHEN 'TR'
        WHEN 'FE'
            CONTINUE
        WHEN OTHER
            STRING 'Invalid Transaction Type: '
                   TRN-TYPE
               DELIMITED BY SIZE
               INTO ERR-TEXT
    END-EVALUATE
.
```

**Before (Audit Trail):**
```cobol
STRING 'Transaction: ' DELIMITED BY SIZE
       TRN-TYPE       DELIMITED BY SIZE
       ' Amount: '    DELIMITED BY SIZE
       TRN-AMOUNT     DELIMITED BY SIZE
       ' Units: '     DELIMITED BY SIZE
       TRN-QUANTITY   DELIMITED BY SIZE
  INTO AUD-MESSAGE
```
**After (Audit Trail):**
```cobol
STRING 'Transaction: ' DELIMITED BY SIZE
       TRN-TYPE       DELIMITED BY SIZE
       ' ('           DELIMITED BY SIZE
       TRANSACTION-TYPE DELIMITED BY SIZE
       ') Amount: '   DELIMITED BY SIZE
       TRN-AMOUNT     DELIMITED BY SIZE
       ' Units: '     DELIMITED BY SIZE
       TRN-QUANTITY   DELIMITED BY SIZE
  INTO AUD-MESSAGE
```

---

#### `RPTPOS00.cbl`

**Before (Transaction Detail Write):**
```cobol
WRITE REPORT-RECORD FROM
    (TRN-DATE, TRN-TIME, TRN-PORTFOLIO-ID, TRN-INVESTMENT-ID, TRN-TYPE, TRN-QUANTITY, TRN-AMOUNT, ...)
```
**After (Transaction Detail Write):**
```cobol
IF TRANSACTION-TYPE = SPACES OR TRANSACTION-TYPE = LOW-VALUES
    MOVE 'UNKNOWN' TO TRANSACTION-TYPE
END-IF
WRITE REPORT-RECORD FROM
    (TRN-DATE, TRN-TIME, TRN-PORTFOLIO-ID, TRN-INVESTMENT-ID, TRN-TYPE, TRANSACTION-TYPE, TRN-QUANTITY, TRN-AMOUNT, ...)
```

**Before (Report Header):**
```
DATE     TIME     PORTFOLIO  INVESTMENT  TYPE  QUANTITY  AMOUNT  ...
```
**After (Report Header):**
```
DATE     TIME     PORTFOLIO  INVESTMENT  TYPE  TRANSACTION-TYPE  QUANTITY  AMOUNT  ...
```

---

## 4. Conclusion  
The proposed changes introduce a new `TRANSACTION-TYPE` field to the transaction record, update the batch processing program to handle and store this field, and enhance the reporting program to display it. These changes enable more granular tracking and reporting of transaction types, supporting compliance and business analytics. The modifications are backward compatible, ensuring legacy records are handled gracefully by displaying a blank or "UNKNOWN" transaction type where data is missing.

---
