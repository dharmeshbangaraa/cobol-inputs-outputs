# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a detailed technical overview and Low-Level Design (LLD) for the enhancement of the COBOL legacy application suite, specifically to add a `CHANNEL-CODE` field to the transaction file structure. This change enables channel identification in batch processing and reporting, improving traceability and reporting granularity across all transaction-processing modules.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes financial transactions in batch and utility modes. The core transaction record structure is defined in a central copybook (`TRNREC.cpy`), which is included by all programs that read or write transaction data. Batch programs (e.g., `RPTPOS00.cbl`) generate reports from transaction files, while utility programs (e.g., `UTLVAL00.cbl`) validate transaction data formats and integrity.

### 2.2 Detailed Logic  

#### 2.2.1 Transaction Record Structure (`src/copybook/common/TRNREC.cpy`)
- Defines the layout for each transaction, including keys (date, time, portfolio, sequence), transaction data (investment ID, type, quantity, price, amount, currency, status), audit fields, and filler.
- All transaction-processing programs use this copybook to ensure consistent data structure.

#### 2.2.2 Batch Reporting Program (`src/programs/batch/RPTPOS00.cbl`)
- **1100-OPEN-FILES (Lines 54–70):** Opens POSITION-MASTER, TRANSACTION-HISTORY, and REPORT-FILE. Handles file open errors.
- **2200-PROCESS-TRANSACTIONS (Lines 108–111):** Orchestrates transaction processing by reading transactions and summarizing activity.

#### 2.2.3 Utility Validation Program (`src/programs/utility/UTLVAL00.cbl`)
- **1100-OPEN-FILES (Lines 54–74):** Opens VALIDATION-CONTROL, POSITION-MASTER, TRANSACTION-HISTORY, and ERROR-REPORT. Handles file open errors.
- **2400-CHECK-FORMAT (Lines 120–123):** Triggers format validation for position and transaction records.

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    OpenFiles["1100-OPEN-FILES:
Open all required files"]
    ProcessBatch["2200-PROCESS-TRANSACTIONS:
Read and summarize transactions"]
    ValidateFormat["2400-CHECK-FORMAT:
Check format of records"]
    End(["End"])

    Start --> OpenFiles
    OpenFiles --> ProcessBatch
    OpenFiles --> ValidateFormat
    ProcessBatch --> End
    ValidateFormat --> End
```

---

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting.

**Summary:**  
The `CHANNEL-CODE` field will be added to the transaction record structure and propagated to all programs that read or write transaction data. This enables downstream systems and reports to identify the channel (e.g., online, branch, mobile) through which each transaction was processed.

---

### 3.2 Proposed Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy** (copybook structure)
- **src/programs/batch/RPTPOS00.cbl** (1100-OPEN-FILES, 2200-PROCESS-TRANSACTIONS)
- **src/programs/utility/UTLVAL00.cbl** (1100-OPEN-FILES, 2400-CHECK-FORMAT)

**Purpose of Changes:**  
To introduce the `CHANNEL-CODE` field into the transaction record, update all file layouts, and ensure all batch and utility programs can read, write, and validate the new field.

**Impact:**  
- All transaction-processing programs will recognize and handle the new field.
- File layouts and LRECL may change; downstream systems and JCL may require updates.
- Reporting and validation logic can now include channel-based filtering and checks.

---

### 3.3 Insertion Points  

- **TRNREC.cpy:**  
  - Insert `CHANNEL-CODE` field in the transaction record structure, ideally after `TRN-CURRENCY` for logical grouping.
- **RPTPOS00.cbl:**  
  - Update file SELECT/FD definitions to include the new field.
  - Update any logic that reads, writes, or displays transaction records to handle `CHANNEL-CODE`.
- **UTLVAL00.cbl:**  
  - Update file SELECT/FD definitions to include the new field.
  - Update validation logic in 2400-CHECK-FORMAT (and sub-paragraphs) to check for valid `CHANNEL-CODE` values.

---

### 3.4 Structured Diffs  

#### **A. src/copybook/common/TRNREC.cpy**

**Before:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRN-KEY.
               10  TRN-DATE           PIC X(08).
               10  TRN-TIME           PIC X(06).
               10  TRN-PORTFOLIO-ID   PIC X(08).
               10  TRN-SEQUENCE-NO    PIC X(06).
           05  TRN-DATA.
               10  TRN-INVESTMENT-ID  PIC X(10).
               10  TRN-TYPE           PIC X(02).
                   88  TRN-TYPE-BUY     VALUE 'BU'.
                   88  TRN-TYPE-SELL    VALUE 'SL'.
                   88  TRN-TYPE-TRANS   VALUE 'TR'.
                   88  TRN-TYPE-FEE     VALUE 'FE'.
               10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
               10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
               10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
               10  TRN-CURRENCY      PIC X(03).
               10  TRN-STATUS        PIC X(01).
                   88  TRN-STATUS-PEND   VALUE 'P'.
                   88  TRN-STATUS-DONE   VALUE 'D'.
                   88  TRN-STATUS-FAIL   VALUE 'F'.
                   88  TRN-STATUS-REV    VALUE 'R'.
           05  TRN-AUDIT.
               10  TRN-PROCESS-DATE  PIC X(26).
               10  TRN-PROCESS-USER  PIC X(08).
           05  TRN-FILLER           PIC X(50).
```

**After:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRN-KEY.
               10  TRN-DATE           PIC X(08).
               10  TRN-TIME           PIC X(06).
               10  TRN-PORTFOLIO-ID   PIC X(08).
               10  TRN-SEQUENCE-NO    PIC X(06).
           05  TRN-DATA.
               10  TRN-INVESTMENT-ID  PIC X(10).
               10  TRN-TYPE           PIC X(02).
                   88  TRN-TYPE-BUY     VALUE 'BU'.
                   88  TRN-TYPE-SELL    VALUE 'SL'.
                   88  TRN-TYPE-TRANS   VALUE 'TR'.
                   88  TRN-TYPE-FEE     VALUE 'FE'.
               10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
               10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
               10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
               10  TRN-CURRENCY      PIC X(03).
               10  TRN-CHANNEL-CODE  PIC X(04).   *> NEW FIELD: Channel identifier
               10  TRN-STATUS        PIC X(01).
                   88  TRN-STATUS-PEND   VALUE 'P'.
                   88  TRN-STATUS-DONE   VALUE 'D'.
                   88  TRN-STATUS-FAIL   VALUE 'F'.
                   88  TRN-STATUS-REV    VALUE 'R'.
           05  TRN-AUDIT.
               10  TRN-PROCESS-DATE  PIC X(26).
               10  TRN-PROCESS-USER  PIC X(08).
           05  TRN-FILLER           PIC X(46).   *> Adjusted for new field
```

---

#### **B. src/programs/batch/RPTPOS00.cbl**

**Before (FD Example):**
```cobol
       FD  TRANSACTION-HISTORY
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.
```

**After:**
```cobol
       FD  TRANSACTION-HISTORY
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.
           *> TRANSACTION-RECORD now includes TRN-CHANNEL-CODE (PIC X(04))
```

**Before (Sample usage in 2200-PROCESS-TRANSACTIONS or report output):**
```cobol
           DISPLAY 'TYPE: ' TRN-TYPE ' QTY: ' TRN-QUANTITY ' CUR: ' TRN-CURRENCY
```

**After:**
```cobol
           DISPLAY 'TYPE: ' TRN-TYPE ' QTY: ' TRN-QUANTITY ' CUR: ' TRN-CURRENCY
                   ' CHN: ' TRN-CHANNEL-CODE
```

---

#### **C. src/programs/utility/UTLVAL00.cbl**

**Before (FD Example):**
```cobol
       FD  TRANSACTION-HISTORY
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.
```

**After:**
```cobol
       FD  TRANSACTION-HISTORY
           RECORDING MODE IS F
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.
           *> TRANSACTION-RECORD now includes TRN-CHANNEL-CODE (PIC X(04))
```

**Before (Sample validation in 2420-CHECK-TRANSACTION-FORMAT):**
```cobol
           IF TRN-TYPE NOT = 'BU' AND
              TRN-TYPE NOT = 'SL' AND
              TRN-TYPE NOT = 'TR' AND
              TRN-TYPE NOT = 'FE'
               MOVE 'INVALID TRANSACTION TYPE' TO WS-ERROR-MESSAGE
               PERFORM 9999-ERROR-HANDLER
           END-IF
```

**After:**
```cobol
           IF TRN-TYPE NOT = 'BU' AND
              TRN-TYPE NOT = 'SL' AND
              TRN-TYPE NOT = 'TR' AND
              TRN-TYPE NOT = 'FE'
               MOVE 'INVALID TRANSACTION TYPE' TO WS-ERROR-MESSAGE
               PERFORM 9999-ERROR-HANDLER
           END-IF

           IF TRN-CHANNEL-CODE NOT = 'ONLN' AND
              TRN-CHANNEL-CODE NOT = 'BRCH' AND
              TRN-CHANNEL-CODE NOT = 'MOBL'
               MOVE 'INVALID CHANNEL CODE' TO WS-ERROR-MESSAGE
               PERFORM 9999-ERROR-HANDLER
           END-IF
```

---

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to the transaction record structure and all related programs enhances the system's ability to track and report on the origin of each transaction. This change is fully backward-compatible for programs updated to use the new copybook and will enable more granular reporting and validation. All impacted programs and copybooks must be recompiled and tested to ensure correct handling of the new field.
