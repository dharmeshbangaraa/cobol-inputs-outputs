Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the COBOL legacy application suite, focusing on the enhancement to add a `CHANNEL-CODE` field to the transaction file. The document details the existing logic, the rationale and scope of the required changes, and provides structured diffs and guidance for seamless integration. This is intended for developers, testers, and architects involved in the modernization and maintenance of the system.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes business-critical transaction data through a modular structure, with a central transaction record copybook (`TRNREC.cpy`) referenced by all batch, utility, and test programs. The main flow involves reading transaction files, processing or validating records, and generating reports or test data.

### 2.2 Detailed Logic  
- **Initialization:**  
  - Open transaction files for input/output (e.g., `1100-OPEN-FILES` in each program).
  - Set up working storage and file section layouts using the `TRNREC.cpy` copybook.
- **Processing:**  
  - Batch/reporting programs (e.g., `RPTPOS00.cbl`) read transaction records, apply business rules, and generate reports.
  - Utility programs (e.g., `UTLVAL00.cbl`) validate transaction file formats and data integrity.
  - Test programs (e.g., `TSTGEN00.cbl`, `TSTVAL00.cbl`) generate and validate test transaction files.
- **Termination:**  
  - Close files and output results.

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    OpenFiles["Open
Transaction Files"]
    ReadRecord["Read
Transaction Record"]
    ProcessOrValidate["Process/
Validate Record"]
    WriteOrReport["Write Output/
Generate Report"]
    End(["End"])

    Start --> OpenFiles
    OpenFiles --> ReadRecord
    ReadRecord --> ProcessOrValidate
    ProcessOrValidate --> WriteOrReport
    WriteOrReport --> End
```

**Key Code References:**
- `src/copybook/common/TRNREC.cpy`: Defines the transaction record structure.
- `src/programs/batch/RPTPOS00.cbl`: 
  - `1100-OPEN-FILES`: Opens files and sets up FD.
  - `2200-PROCESS-TRANSACTIONS`: Reads and processes transactions for reporting.
- `src/programs/utility/UTLVAL00.cbl`: 
  - `1100-OPEN-FILES`: Opens files.
  - `2400-CHECK-FORMAT`: Validates transaction record format.
- `src/programs/test/TSTGEN00.cbl`: 
  - `2300-GEN-TRANSACTION`: Generates transaction data.
  - `2320-WRITE-TRAN-RECORD`: Writes generated records.
- `src/programs/test/TSTVAL00.cbl`: 
  - `1100-OPEN-FILES`: Opens files.
  - `2100-EXECUTE-TEST`: Validates test transaction records.

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting.

- The `CHANNEL-CODE` field will allow identification of the transaction's originating channel (e.g., POS, Online, Mobile) in all batch, reporting, and test processes.

### 3.2 Proposed Code Changes Summary:
#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy**  
  - *Purpose of Changes:* Add `CHANNEL-CODE` field to the transaction record definition.
  - *Impact:* All programs referencing this copybook must be updated to handle the new field.
- **src/programs/batch/RPTPOS00.cbl**  
  - *Purpose of Changes:* Update FD and processing logic to read and report `CHANNEL-CODE`.
  - *Impact:* Reports will now include channel information.
- **src/programs/utility/UTLVAL00.cbl**  
  - *Purpose of Changes:* Validate presence and format of `CHANNEL-CODE`.
  - *Impact:* Ensures data integrity for the new field.
- **src/programs/test/TSTGEN00.cbl**  
  - *Purpose of Changes:* Generate test data with valid `CHANNEL-CODE` values.
  - *Impact:* Test files will reflect the new structure.
- **src/programs/test/TSTVAL00.cbl**  
  - *Purpose of Changes:* Validate `CHANNEL-CODE` in test transaction files.
  - *Impact:* Test validation logic will ensure correctness of the new field.

### 3.3 Insertion Points  
- **TRNREC.cpy:**  
  - Add `CHANNEL-CODE` field at the appropriate position in the transaction record layout.
- **RPTPOS00.cbl:**  
  - Update FD section to include `CHANNEL-CODE`.
  - Update `1100-OPEN-FILES` and `2200-PROCESS-TRANSACTIONS` to process and report the new field.
- **UTLVAL00.cbl:**  
  - Update FD and validation logic in `1100-OPEN-FILES` and `2400-CHECK-FORMAT`.
- **TSTGEN00.cbl:**  
  - Update record generation and writing logic in `2300-GEN-TRANSACTION` and `2320-WRITE-TRAN-RECORD`.
- **TSTVAL00.cbl:**  
  - Update FD and validation logic in `1100-OPEN-FILES` and `2100-EXECUTE-TEST`.

### 3.4 Structured Diffs  

#### **src/copybook/common/TRNREC.cpy**
**Before:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID         PIC X(12).
           05  TRANSACTION-DATE       PIC 9(8).
           05  AMOUNT                 PIC 9(9)V99.
           05  CUSTOMER-ID            PIC X(10).
           ...
```
**After:**
```cobol
       01  TRANSACTION-RECORD.
           05  TRANSACTION-ID         PIC X(12).
           05  TRANSACTION-DATE       PIC 9(8).
           05  AMOUNT                 PIC 9(9)V99.
           05  CUSTOMER-ID            PIC X(10).
           05  CHANNEL-CODE           PIC X(4).
           ...
```

#### **src/programs/batch/RPTPOS00.cbl**
**Before (FD and 1100-OPEN-FILES):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 50 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**After:**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 54 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**Before (2200-PROCESS-TRANSACTIONS):**
```cobol
       2200-PROCESS-TRANSACTIONS.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   GO TO 2999-EXIT.
           DISPLAY TRANSACTION-ID TRANSACTION-DATE AMOUNT CUSTOMER-ID.
           ...
```
**After:**
```cobol
       2200-PROCESS-TRANSACTIONS.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   GO TO 2999-EXIT.
           DISPLAY TRANSACTION-ID TRANSACTION-DATE AMOUNT CUSTOMER-ID CHANNEL-CODE.
           ...
```

#### **src/programs/utility/UTLVAL00.cbl**
**Before (FD and 1100-OPEN-FILES):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 50 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**After:**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 54 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**Before (2400-CHECK-FORMAT):**
```cobol
       2400-CHECK-FORMAT.
           IF TRANSACTION-ID = SPACES OR AMOUNT = ZEROES
               DISPLAY "INVALID RECORD".
           ...
```
**After:**
```cobol
       2400-CHECK-FORMAT.
           IF TRANSACTION-ID = SPACES OR AMOUNT = ZEROES OR CHANNEL-CODE = SPACES
               DISPLAY "INVALID RECORD".
           ...
```

#### **src/programs/test/TSTGEN00.cbl**
**Before (2300-GEN-TRANSACTION, 2320-WRITE-TRAN-RECORD):**
```cobol
       2300-GEN-TRANSACTION.
           MOVE "TST123456789" TO TRANSACTION-ID.
           MOVE 20230101 TO TRANSACTION-DATE.
           MOVE 10000 TO AMOUNT.
           MOVE "CUST000001" TO CUSTOMER-ID.
           ...

       2320-WRITE-TRAN-RECORD.
           WRITE TRANSACTION-RECORD.
```
**After:**
```cobol
       2300-GEN-TRANSACTION.
           MOVE "TST123456789" TO TRANSACTION-ID.
           MOVE 20230101 TO TRANSACTION-DATE.
           MOVE 10000 TO AMOUNT.
           MOVE "CUST000001" TO CUSTOMER-ID.
           MOVE "POS1" TO CHANNEL-CODE.
           ...

       2320-WRITE-TRAN-RECORD.
           WRITE TRANSACTION-RECORD.
```

#### **src/programs/test/TSTVAL00.cbl**
**Before (FD and 1100-OPEN-FILES):**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 50 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**After:**
```cobol
       FD  TRANSACTION-FILE
           RECORD CONTAINS 54 CHARACTERS
           BLOCK CONTAINS 0 RECORDS
           DATA RECORD IS TRANSACTION-RECORD.

       1100-OPEN-FILES.
           OPEN INPUT TRANSACTION-FILE.
```
**Before (2100-EXECUTE-TEST):**
```cobol
       2100-EXECUTE-TEST.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   GO TO 2999-EXIT.
           IF TRANSACTION-ID = SPACES OR AMOUNT = ZEROES
               DISPLAY "TEST FAILED".
           ...
```
**After:**
```cobol
       2100-EXECUTE-TEST.
           READ TRANSACTION-FILE INTO TRANSACTION-RECORD
               AT END
                   GO TO 2999-EXIT.
           IF TRANSACTION-ID = SPACES OR AMOUNT = ZEROES OR CHANNEL-CODE = SPACES
               DISPLAY "TEST FAILED".
           ...
```

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to the transaction record and all related processing, reporting, and test programs enhances the system's ability to track and report the origin of transactions. This change is critical for improved reporting, auditing, and future extensibility. All impacted modules have been updated to ensure data integrity and seamless operation, with clear guidance provided for implementation and review.
