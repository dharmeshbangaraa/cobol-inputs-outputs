Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document provides a comprehensive technical overview and Low-Level Design (LLD) for the COBOL application modules impacted by the initiative to enable Real-Time Market Price Feed Integration for Dynamic Portfolio Updates. The document details the existing logic, identifies insertion points for the required changes, and presents structured diffs to guide implementation. The goal is to ensure seamless integration of real-time data ingestion, dynamic portfolio valuation, robust error handling, and enhanced audit logging, in alignment with business-critical requirements.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes portfolio updates and generates audit reports as part of a legacy financial system. The main modules involved are:

- **PORTUPDT.cbl**: Handles portfolio updates, including initialization, processing, and applying updates.
- **PORTFLIO.cpy**: Defines the portfolio data structure shared across modules.
- **RPTAUD00.cbl**: Generates audit logs and reports, including error and update event logging.
- **AUDITLOG.cpy**: Defines the audit log record structure.

### 2.2 Detailed Logic  

#### PORTUPDT.cbl  
- **1000-INITIALIZE**: Sets up environment, reads initial portfolio data, and prepares for processing.
- **2000-PROCESS**: Main processing loop for portfolio updates.
- **2100-PROCESS-UPDATE**: Applies business rules and updates portfolio values.
- **2200-APPLY-UPDATE**: Commits updates to persistent storage.

#### PORTFLIO.cpy  
- Defines fields for portfolio ID, asset list, current value, and other attributes.

#### RPTAUD00.cbl  
- **1000-INITIALIZE**: Prepares audit reporting environment.
- **2000-PROCESS-REPORT**: Processes and logs audit events.
- **3000-CLEANUP**: Finalizes and closes audit reporting.

#### AUDITLOG.cpy  
- Defines fields for audit event type, timestamp, user, and event details.

#### Flowchart:  
```mermaid
flowchart TD
    Start(["Start"])
    Init["1000-INITIALIZE
(Setup, Read Portfolio)"]
    Process["2000-PROCESS
(Main Loop)"]
    ProcUpdate["2100-PROCESS-UPDATE
(Business Rules, Update)"]
    ApplyUpdate["2200-APPLY-UPDATE
(Commit Updates)"]
    AuditInit["1000-INITIALIZE
(Audit Setup)"]
    AuditProc["2000-PROCESS-REPORT
(Log Events)"]
    AuditCleanup["3000-CLEANUP
(Close Audit)"]
    End(["End"])

    Start --> Init
    Init --> Process
    Process --> ProcUpdate
    ProcUpdate --> ApplyUpdate
    ApplyUpdate --> AuditInit
    AuditInit --> AuditProc
    AuditProc --> AuditCleanup
    AuditCleanup --> End
```

## 3. Proposed Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Enable Real-Time Market Price Feed Integration for Dynamic Portfolio Updates.

**Summary:**  
Integrate real-time market price feeds into the portfolio update process, dynamically recalculate portfolio valuations, handle feed errors robustly, and enhance audit logging to capture all update and error events.

### 3.2 Proposed Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/programs/portfolio/PORTUPDT.cbl**
  - **Purpose of Changes:** Integrate real-time price ingestion, trigger dynamic recalculation, and update portfolio values.
  - **Impact:** Core update logic will now respond to real-time data, requiring new error handling and update triggers.
- **src/copybook/common/PORTFLIO.cpy**
  - **Purpose of Changes:** Extend portfolio structure to store latest price, timestamp, and possibly historical prices.
  - **Impact:** Enables accurate, timestamped valuations and supports audit/compliance needs.
- **src/programs/batch/RPTAUD00.cbl**
  - **Purpose of Changes:** Log price feed errors, outdated prices, and update events.
  - **Impact:** Enhanced audit trail and compliance reporting.
- **src/copybook/common/AUDITLOG.cpy**
  - **Purpose of Changes:** Extend audit log structure for new event types.
  - **Impact:** Supports richer audit data for monitoring and compliance.

### 3.3 Insertion Points  
- **PORTUPDT.cbl**
  - Insert real-time price ingestion logic at the start of **2000-PROCESS**.
  - Add error handling for price feed failures in **2100-PROCESS-UPDATE**.
  - Update portfolio value calculation in **2200-APPLY-UPDATE** to use latest price.
- **PORTFLIO.cpy**
  - Add fields for `LAST-PRICE`, `PRICE-TIMESTAMP`, and `PRICE-HISTORY`.
- **RPTAUD00.cbl**
  - Insert new audit event logging in **2000-PROCESS-REPORT** for price feed errors and update events.
- **AUDITLOG.cpy**
  - Add fields for `EVENT-TYPE`, `PRICE-FEED-ERROR`, and `UPDATE-DETAILS`.

### 3.4 Structured Diffs  

#### src/programs/portfolio/PORTUPDT.cbl

**Before:**  
```cobol
1000-INITIALIZE.
    PERFORM READ-PORTFOLIO-DATA.
    PERFORM SETUP-ENVIRONMENT.

2000-PROCESS.
    PERFORM UNTIL END-OF-DATA
        PERFORM 2100-PROCESS-UPDATE
    END-PERFORM.

2100-PROCESS-UPDATE.
    PERFORM APPLY-BUSINESS-RULES.
    PERFORM UPDATE-PORTFOLIO-VALUES.

2200-APPLY-UPDATE.
    PERFORM COMMIT-UPDATES.
```

**After:**  
```cobol
1000-INITIALIZE.
    PERFORM READ-PORTFOLIO-DATA.
    PERFORM SETUP-ENVIRONMENT.

2000-PROCESS.
    PERFORM INGEST-REALTIME-PRICE-FEED.
    PERFORM UNTIL END-OF-DATA
        PERFORM 2100-PROCESS-UPDATE
    END-PERFORM.

2100-PROCESS-UPDATE.
    PERFORM APPLY-BUSINESS-RULES.
    IF PRICE-FEED-ERROR
        PERFORM LOG-PRICE-FEED-ERROR
        GO TO 2200-APPLY-UPDATE
    END-IF
    PERFORM UPDATE-PORTFOLIO-VALUES.

2200-APPLY-UPDATE.
    PERFORM RECALCULATE-PORTFOLIO-VALUATION
        USING LAST-PRICE PRICE-TIMESTAMP.
    PERFORM COMMIT-UPDATES.
```

#### src/copybook/common/PORTFLIO.cpy

**Before:**  
```cobol
       01 PORTFOLIO-RECORD.
           05 PORTFOLIO-ID         PIC X(10).
           05 ASSET-LIST           OCCURS 10 TIMES.
               10 ASSET-ID         PIC X(12).
               10 ASSET-VALUE      PIC 9(9)V99.
           05 PORTFOLIO-VALUE      PIC 9(11)V99.
```

**After:**  
```cobol
       01 PORTFOLIO-RECORD.
           05 PORTFOLIO-ID         PIC X(10).
           05 ASSET-LIST           OCCURS 10 TIMES.
               10 ASSET-ID         PIC X(12).
               10 ASSET-VALUE      PIC 9(9)V99.
               10 LAST-PRICE       PIC 9(9)V99.
               10 PRICE-TIMESTAMP  PIC 9(8).
               10 PRICE-HISTORY    OCCURS 5 TIMES.
                   15 HIST-PRICE   PIC 9(9)V99.
                   15 HIST-TIME    PIC 9(8).
           05 PORTFOLIO-VALUE      PIC 9(11)V99.
```

#### src/programs/batch/RPTAUD00.cbl

**Before:**  
```cobol
1000-INITIALIZE.
    PERFORM OPEN-AUDIT-LOG.

2000-PROCESS-REPORT.
    PERFORM READ-AUDIT-EVENTS.
    PERFORM WRITE-AUDIT-REPORT.

3000-CLEANUP.
    PERFORM CLOSE-AUDIT-LOG.
```

**After:**  
```cobol
1000-INITIALIZE.
    PERFORM OPEN-AUDIT-LOG.

2000-PROCESS-REPORT.
    PERFORM READ-AUDIT-EVENTS.
    PERFORM WRITE-AUDIT-REPORT.
    IF PRICE-FEED-ERROR
        PERFORM LOG-PRICE-FEED-ERROR-DETAILS
    END-IF
    IF PORTFOLIO-UPDATE-EVENT
        PERFORM LOG-PORTFOLIO-UPDATE-DETAILS
    END-IF

3000-CLEANUP.
    PERFORM CLOSE-AUDIT-LOG.
```

#### src/copybook/common/AUDITLOG.cpy

**Before:**  
```cobol
       01 AUDIT-LOG-RECORD.
           05 EVENT-TYPE           PIC X(10).
           05 EVENT-TIMESTAMP      PIC 9(8).
           05 USER-ID              PIC X(8).
           05 EVENT-DETAILS        PIC X(50).
```

**After:**  
```cobol
       01 AUDIT-LOG-RECORD.
           05 EVENT-TYPE           PIC X(20).
           05 EVENT-TIMESTAMP      PIC 9(8).
           05 USER-ID              PIC X(8).
           05 EVENT-DETAILS        PIC X(100).
           05 PRICE-FEED-ERROR     PIC X(1).
           05 UPDATE-DETAILS       PIC X(100).
```

## 4. Conclusion  
The proposed changes enable seamless integration of real-time market price feeds into the portfolio update process, ensuring dynamic and accurate portfolio valuations. Enhanced error handling and audit logging provide robust compliance and monitoring capabilities. The structured diffs and insertion points outlined above will guide developers in implementing the changes efficiently while preserving existing functionality.
