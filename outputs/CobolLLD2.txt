# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the enhancement of the COBOL-based transaction processing system. The primary objective is to introduce a new `CHANNEL-CODE` field to the transaction file structure, enabling channel identification for improved batch processing and reporting. This document outlines the existing logic, the impacted changes, insertion points, structured diffs, and the rationale behind the modifications.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The application suite processes financial transactions through batch and utility programs. The core flow involves reading transaction records, performing business logic (such as reporting and validation), and writing outputs or reports. The transaction record structure is centrally defined in a copybook and is included in all relevant programs.

### 2.2 Detailed Logic  
- **Transaction Record Structure:** Defined in `TRNREC.cpy`, used by all transaction-processing programs (Lines 1-40).
- **Batch Reporting (`RPTPOS00.cbl`):** Reads transaction records, summarizes activity, and generates daily position reports (Key sections: 1100-OPEN-FILES, 2200-PROCESS-TRANSACTIONS).
- **Validation Utility (`UTLVAL00.cbl`):** Validates transaction data for integrity, format, and cross-references (Key sections: 1100-OPEN-FILES, 2400-CHECK-FORMAT).

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    ReadTrans["Read
Transaction
Records"]
    ProcessBatch["Batch
Processing/
Reporting"]
    ValidateData["Validate
Transaction
Data"]
    WriteOutput["Write
Reports/
Error Logs"]
    End(["End"])

    Start --> ReadTrans
    ReadTrans --> ProcessBatch
    ReadTrans --> ValidateData
    ProcessBatch --> WriteOutput
    ValidateData --> WriteOutput
    WriteOutput --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy**  
  - *Purpose of Changes:* Add `TRN-CHANNEL-CODE` field to the transaction record structure to support channel identification.
  - *Impact:* All programs using this copybook will now have access to the new field, enabling downstream logic for channel-based processing and reporting.

- **src/programs/batch/RPTPOS00.cbl**  
  - *Purpose of Changes:* Update batch reporting logic to extract and utilize the new `CHANNEL-CODE` field for traceability and reporting.
  - *Impact:* Enhances reporting granularity and enables channel-based summaries or logs.

- **src/programs/utility/UTLVAL00.cbl**  
  - *Purpose of Changes:* Update validation logic to check the presence and format of the new `CHANNEL-CODE` field in transaction records.
  - *Impact:* Ensures data integrity by validating that the channel code is present and correctly formatted in all transaction records.

### 3.3 Insertion Points  
- **TRNREC.cpy:**  
  - *Insertion Point:* After `TRN-SEQUENCE-NO` in the transaction key structure.
  - *Description:* The new field `TRN-CHANNEL-CODE PIC X(04)` is inserted to store the channel identifier.

- **RPTPOS00.cbl:**  
  - *Insertion Points:*  
    - WORKING-STORAGE SECTION: Add `WS-TRAN-CHANNEL-CODE` for temporary storage.
    - 2210-READ-TRANSACTIONS: Move `TRN-CHANNEL-CODE` to `WS-TRAN-CHANNEL-CODE`.
    - 2220-SUMMARIZE-ACTIVITY: Display or utilize `CHANNEL-CODE` in reporting logic.
  - *Description:* These changes allow the program to extract, store, and use the channel code for reporting and traceability.

- **UTLVAL00.cbl:**  
  - *Insertion Points:*  
    - WORKING-STORAGE SECTION: Add `WS-TRAN-CHANNEL-CODE` for validation.
    - 2420-CHECK-TRANSACTION-FORMAT: Move `TRN-CHANNEL-CODE` to `WS-TRAN-CHANNEL-CODE` and validate its presence.
  - *Description:* These changes ensure that every transaction record includes a valid channel code, with errors logged if missing.

### 3.4 Structured Diffs  

#### **TRNREC.cpy**  
**Before:**  
```cobol
     10  TRN-SEQUENCE-NO    PIC X(06).
```
**After:**  
```cobol
     10  TRN-SEQUENCE-NO    PIC X(06).
*-- Change: Added CHANNEL-CODE field for channel identification in batch processing and reporting
     10  TRN-CHANNEL-CODE   PIC X(04).
```

#### **RPTPOS00.cbl**  
**Before (WORKING-STORAGE SECTION):**  
```cobol
* ... other working-storage fields ...
```
**After:**  
```cobol
*-- Change: Added working-storage for new CHANNEL-CODE field for reporting
 01  WS-TRAN-CHANNEL-CODE     PIC X(04).
```

**Before (2210-READ-TRANSACTIONS):**  
```cobol
     READ TRANSACTION-HISTORY
         AT END
             SET END-OF-TRANSACTIONS TO TRUE
         NOT AT END
             CONTINUE
         END-READ.
```
**After:**  
```cobol
     READ TRANSACTION-HISTORY
         AT END
             SET END-OF-TRANSACTIONS TO TRUE
         NOT AT END
*-- Change: Store CHANNEL-CODE from transaction record
             MOVE TRN-CHANNEL-CODE TO WS-TRAN-CHANNEL-CODE
         END-READ.
```

**Before (2220-SUMMARIZE-ACTIVITY):**  
```cobol
     * ... existing logic ...
```
**After:**  
```cobol
*-- Change: Example usage of CHANNEL-CODE in reporting (add to summary or log as needed)
     IF WS-TRAN-CHANNEL-CODE NOT = SPACES
         DISPLAY 'CHANNEL-CODE: ' WS-TRAN-CHANNEL-CODE
     END-IF.
```

#### **UTLVAL00.cbl**  
**Before (WORKING-STORAGE SECTION):**  
```cobol
* ... other working-storage fields ...
```
**After:**  
```cobol
*-- Change: Added working-storage for CHANNEL-CODE validation
 01  WS-TRAN-CHANNEL-CODE     PIC X(04).
```

**Before (2420-CHECK-TRANSACTION-FORMAT):**  
```cobol
     READ TRANSACTION-HISTORY
         AT END
             SET END-OF-TRANSACTIONS TO TRUE
         NOT AT END
             CONTINUE
         END-READ.
```
**After:**  
```cobol
     READ TRANSACTION-HISTORY
         AT END
             SET END-OF-TRANSACTIONS TO TRUE
         NOT AT END
*-- Change: Store CHANNEL-CODE from transaction record
             MOVE TRN-CHANNEL-CODE TO WS-TRAN-CHANNEL-CODE
*-- Change: Validate CHANNEL-CODE is not spaces (basic check, can be extended)
             IF WS-TRAN-CHANNEL-CODE = SPACES
                 MOVE 'CHANNEL-CODE MISSING' TO WS-ERR-DESC
                 WRITE ERROR-RECORD FROM WS-ERROR-LINE
             END-IF
         END-READ.
```

## 4. Conclusion  
The introduction of the `CHANNEL-CODE` field to the transaction record structure enables robust channel identification across all transaction-processing programs. The changes propagate through the core copybook and are integrated into both batch reporting and validation utilities. This enhancement supports improved traceability, reporting granularity, and data integrity, laying the foundation for future channel-based analytics and operational controls.
