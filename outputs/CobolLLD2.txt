
# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the COBOL portfolio management and batch processing suite, focusing on the integration of real-time price feeds, enhanced audit logging, and error event reporting. The changes span across portfolio update, recovery, and audit reporting modules, ensuring improved data accuracy, traceability, and operational transparency.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The application suite manages portfolio records, processes batch recoveries, and generates audit reports. Key modules include:
- **PORTUPDT**: Updates portfolio records based on incoming updates.
- **RCVPRC00**: Handles batch process recovery and now ingests real-time market data.
- **RPTAUD00**: Generates audit and error summary reports.
- **AUDITLOG**: Defines the audit record structure.

### 2.2 Detailed Logic  
#### PORTUPDT.cbl  
- **Initialization**: Opens portfolio, update, and (now) price feed files.  
- **Processing**: For each update record, fetches the corresponding portfolio record, integrates real-time price data, applies the update, and logs the action.
- **Termination**: Closes all files and displays summary counts.

#### RCVPRC00.cbl  
- **Initialization**: Opens control, process sequence, and (now) market price feed files.
- **Recovery Processing**: Depending on the recovery mode, processes recovery actions and ingests market data, logging each event.
- **Termination**: Closes all files and updates final status.

#### RPTAUD00.cbl  
- **Initialization**: Opens audit, error, and report files.
- **Processing**: Reads audit and error logs, now including price feed and error event records, and writes formatted reports.
- **Cleanup**: Closes all files.

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    Init["Initialize
Files"]
    ProcessUpdate["Process
Portfolio Updates"]
    RealTimePrice["Integrate
Real-Time Price Feed"]
    ApplyUpdate["Apply
Update"]
    AuditLog["Write
Audit Log"]
    BatchRecovery["Batch
Recovery Handler"]
    IngestMarketData["Ingest
Market Data"]
    AuditReport["Generate
Audit Report"]
    End(["End"])

    Start --> Init
    Init --> ProcessUpdate
    ProcessUpdate --> RealTimePrice
    RealTimePrice --> ApplyUpdate
    ApplyUpdate --> AuditLog
    AuditLog --> BatchRecovery
    BatchRecovery --> IngestMarketData
    IngestMarketData --> AuditReport
    AuditReport --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
- Integrate real-time price feed ingestion into portfolio and batch recovery processes.
- Enhance audit logging to capture price feed and error events.
- Update audit reporting to include new event types.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/programs/portfolio/PORTUPDT.cbl**
- **src/programs/batch/RCVPRC00.cbl**
- **src/copybook/common/AUDITLOG.cpy**
- **src/programs/batch/RPTAUD00.cbl**

  - **Purpose of Changes:**  
    - Enable real-time price integration for accurate portfolio valuation.
    - Ensure all price feed and error events are logged for auditability.
    - Provide comprehensive reporting on new event types.

  - **Impact:**  
    - Improved data accuracy and transparency.
    - Enhanced traceability for regulatory and operational needs.
    - Broader audit coverage for price and error events.

### 3.3 Insertion Points  
- **PORTUPDT.cbl**
  - *File Section*: Add FD and record for PRICE-FEED-FILE.
  - *Working-Storage*: Add WS-REALTIME-PRICE, WS-PRICE-FOUND, and audit log area.
  - *1000-INITIALIZE*: Open PRICE-FEED-FILE.
  - *2100-PROCESS-UPDATE*: Insert call to 2150-APPLY-REALTIME-PRICE-FEED before applying update.
  - *2150-APPLY-REALTIME-PRICE-FEED*: New paragraph for price feed integration and audit logging.
  - *3000-TERMINATE*: Close PRICE-FEED-FILE.

- **RCVPRC00.cbl**
  - *File Section*: Add FD and record for MARKET-PRICE-FILE.
  - *Working-Storage*: Add WS-MKTFEED-STATUS, WS-MARKET-DATA-COUNT, and audit log area.
  - *1000-INITIALIZE-RECOVERY*: Open MARKET-PRICE-FILE.
  - *0000-MAIN*: Call 2050-INGEST-MARKET-DATA during FUNC-RECV.
  - *2050-INGEST-MARKET-DATA*: New paragraph for market data ingestion and audit logging.
  - *3000-TERMINATE-RECOVERY*: Close MARKET-PRICE-FILE.

- **AUDITLOG.cpy**
  - *AUD-TYPE*: Add 88-levels for 'PRCF' (price feed) and 'ERRR' (error event).
  - *AUD-ACTION*: Add 88-levels for 'PRCUPDT ' (price update) and 'FDERROR ' (feed error).

- **RPTAUD00.cbl**
  - *2110-READ-AUDIT-RECORDS*: Add logic to report on 'PRCF' and 'ERRR' audit records.

### 3.4 Structured Diffs  

#### **PORTUPDT.cbl**

**Before:**
```cobol
       FILE-CONTROL.
           SELECT PORTFOLIO-FILE
               ASSIGN TO PORTFILE
               ORGANIZATION IS INDEXED
               ACCESS MODE IS RANDOM
               RECORD KEY IS PORT-KEY
               FILE STATUS IS WS-FILE-STATUS.
           
           SELECT UPDATE-FILE
               ASSIGN TO UPDTFILE
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-UPDT-STATUS.
```
**After:**
```cobol
       FILE-CONTROL.
           SELECT PORTFOLIO-FILE
               ASSIGN TO PORTFILE
               ORGANIZATION IS INDEXED
               ACCESS MODE IS RANDOM
               RECORD KEY IS PORT-KEY
               FILE STATUS IS WS-FILE-STATUS.
           
           SELECT UPDATE-FILE
               ASSIGN TO UPDTFILE
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-UPDT-STATUS.

*-- Change: Add real-time price feed file for integration
           SELECT PRICE-FEED-FILE
               ASSIGN TO PRCFEED
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-PRCFEED-STATUS.
```

**Before:**
```cobol
       1000-INITIALIZE.
           INITIALIZE WS-WORK-AREAS
           
           OPEN I-O   PORTFOLIO-FILE
           OPEN INPUT UPDATE-FILE
```
**After:**
```cobol
       1000-INITIALIZE.
           INITIALIZE WS-WORK-AREAS
           
           OPEN I-O   PORTFOLIO-FILE
           OPEN INPUT UPDATE-FILE

*-- Change: Open price feed file for real-time integration
           OPEN INPUT PRICE-FEED-FILE
```

**Before:**
```cobol
       2100-PROCESS-UPDATE.
           MOVE UPDT-KEY TO PORT-KEY
           
           READ PORTFOLIO-FILE
           
           IF WS-SUCCESS-STATUS
               PERFORM 2200-APPLY-UPDATE
           ELSE
               ADD 1 TO WS-ERROR-COUNT
               DISPLAY 'Record not found: ' PORT-KEY
           END-IF
           .
```
**After:**
```cobol
       2100-PROCESS-UPDATE.
           MOVE UPDT-KEY TO PORT-KEY
           
           READ PORTFOLIO-FILE
           
           IF WS-SUCCESS-STATUS
*-- Change: Integrate real-time price feed before applying update
               PERFORM 2150-APPLY-REALTIME-PRICE-FEED
               PERFORM 2200-APPLY-UPDATE
           ELSE
               ADD 1 TO WS-ERROR-COUNT
               DISPLAY 'Record not found: ' PORT-KEY
           END-IF
           .
```

**New Paragraph:**
```cobol
*-- Change: New paragraph for real-time price feed integration
       2150-APPLY-REALTIME-PRICE-FEED.
           MOVE 'N' TO WS-PRICE-FOUND
           REWRITE-PRICE-FEED.
               READ PRICE-FEED-FILE NEXT
                   AT END
                       MOVE 'Y' TO WS-PRCFEED-EOF
                   NOT AT END
                       IF PF-PORTFOLIO-ID = PORT-KEY
                           MOVE PF-PRICE TO WS-REALTIME-PRICE
                           MOVE 'Y' TO WS-PRICE-FOUND
                       END-IF
               END-READ
               IF PRICE-NOT-FOUND AND NOT WS-PRCFEED-EOF
                   GO TO REWRITE-PRICE-FEED
               END-IF
           IF PRICE-FOUND
               MOVE WS-REALTIME-PRICE TO PORT-TOTAL-VALUE
*-- Change: Audit log for real-time price update
               MOVE FUNCTION CURRENT-DATE TO AUD-TIMESTAMP
               MOVE WS-PROGRAM-NAME TO AUD-PROGRAM
               MOVE 'PRCF' TO AUD-TYPE
               MOVE 'UPDATE' TO AUD-ACTION
               MOVE 'SUCC' TO AUD-STATUS
               MOVE PORT-KEY TO AUD-PORTFOLIO-ID
               MOVE PORT-CLIENT-NAME TO AUD-BEFORE-IMAGE
               MOVE WS-REALTIME-PRICE TO AUD-AFTER-IMAGE
               MOVE 'Real-time price update applied' TO AUD-MESSAGE
               *-- Change: Write audit log record here (implementation depends on audit log mechanism)
           END-IF
           .
```

#### **RCVPRC00.cbl**

**Before:**
```cobol
       FILE-CONTROL.
           SELECT BATCH-CONTROL-FILE
               ASSIGN TO BCHCTL
               ORGANIZATION IS INDEXED
               ACCESS MODE IS DYNAMIC
               RECORD KEY IS BCT-KEY
               FILE STATUS IS WS-BCT-STATUS.
               
           SELECT PROCESS-SEQ-FILE
               ASSIGN TO PRCSEQ
               ORGANIZATION IS INDEXED
               ACCESS MODE IS DYNAMIC
               RECORD KEY IS PSR-KEY
               FILE STATUS IS WS-PSR-STATUS.
```
**After:**
```cobol
       FILE-CONTROL.
           SELECT BATCH-CONTROL-FILE
               ASSIGN TO BCHCTL
               ORGANIZATION IS INDEXED
               ACCESS MODE IS DYNAMIC
               RECORD KEY IS BCT-KEY
               FILE STATUS IS WS-BCT-STATUS.
               
           SELECT PROCESS-SEQ-FILE
               ASSIGN TO PRCSEQ
               ORGANIZATION IS INDEXED
               ACCESS MODE IS DYNAMIC
               RECORD KEY IS PSR-KEY
               FILE STATUS IS WS-PSR-STATUS.

*-- Change: Add real-time market price feed file
           SELECT MARKET-PRICE-FILE
               ASSIGN TO MKTFEED
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-MKTFEED-STATUS.
```

**Before:**
```cobol
       1000-INITIALIZE-RECOVERY.
           PERFORM 1100-OPEN-FILES
           PERFORM 1200-VALIDATE-REQUEST
           PERFORM 1300-SET-RECOVERY-MODE
           .
```
**After:**
```cobol
       1000-INITIALIZE-RECOVERY.
           PERFORM 1100-OPEN-FILES
           PERFORM 1200-VALIDATE-REQUEST
           PERFORM 1300-SET-RECOVERY-MODE
*-- Change: Open market price feed file
           OPEN INPUT MARKET-PRICE-FILE
           IF WS-MKTFEED-STATUS NOT = '00'
               MOVE 'Error opening market price feed file' TO ERR-TEXT
               PERFORM 9000-ERROR-ROUTINE
           END-IF
           .
```

**Before:**
```cobol
       0000-MAIN.
           EVALUATE TRUE
               WHEN FUNC-INIT
                   PERFORM 1000-INITIALIZE-RECOVERY
               WHEN FUNC-RECV
                   PERFORM 2000-PROCESS-RECOVERY
               WHEN FUNC-TERM
                   PERFORM 3000-TERMINATE-RECOVERY
               WHEN OTHER
                   MOVE 'Invalid function code' TO ERR-TEXT
                   PERFORM 9000-ERROR-ROUTINE
           END-EVALUATE
           
           MOVE LS-RETURN-CODE TO RETURN-CODE
           GOBACK
           .
```
**After:**
```cobol
       0000-MAIN.
           EVALUATE TRUE
               WHEN FUNC-INIT
                   PERFORM 1000-INITIALIZE-RECOVERY
               WHEN FUNC-RECV
                   PERFORM 2000-PROCESS-RECOVERY
*-- Change: Add real-time market data ingestion on recovery
                   PERFORM 2050-INGEST-MARKET-DATA
               WHEN FUNC-TERM
                   PERFORM 3000-TERMINATE-RECOVERY
               WHEN OTHER
                   MOVE 'Invalid function code' TO ERR-TEXT
                   PERFORM 9000-ERROR-ROUTINE
           END-EVALUATE
           
           MOVE LS-RETURN-CODE TO RETURN-CODE
           GOBACK
           .
```

**New Paragraph:**
```cobol
*-- Change: New paragraph for real-time market data ingestion and error handling
       2050-INGEST-MARKET-DATA.
           PERFORM UNTIL WS-MKTFEED-STATUS = '10'
               READ MARKET-PRICE-FILE NEXT
                   AT END
                       MOVE '10' TO WS-MKTFEED-STATUS
                   NOT AT END
                       ADD 1 TO WS-MARKET-DATA-COUNT
*-- Change: Audit log for each price feed record
                       MOVE FUNCTION CURRENT-DATE TO AUD-TIMESTAMP
                       MOVE 'RCVPRC00' TO AUD-PROGRAM
                       MOVE 'PRCF' TO AUD-TYPE
                       MOVE 'UPDATE' TO AUD-ACTION
                       MOVE 'SUCC' TO AUD-STATUS
                       MOVE MP-SECURITY-ID TO AUD-PORTFOLIO-ID
                       MOVE MP-PRICE TO AUD-AFTER-IMAGE
                       MOVE 'Market price feed ingested' TO AUD-MESSAGE
                       *-- Change: Write audit log record here (implementation depends on audit log mechanism)
                   END-READ
           END-PERFORM
           IF WS-MARKET-DATA-COUNT = 0
               ADD 1 TO WS-MARKET-DATA-ERRORS
               MOVE 'No market data ingested' TO ERR-TEXT
               PERFORM 9000-ERROR-ROUTINE
           END-IF
           .
```

#### **AUDITLOG.cpy**

**Before:**
```cobol
           05  AUD-TYPE             PIC X(4).
               88  AUD-TRANSACTION     VALUE 'TRAN'.
               88  AUD-USER-ACTION     VALUE 'USER'.
               88  AUD-SYSTEM-EVENT    VALUE 'SYST'.
           05  AUD-ACTION           PIC X(8).
               88  AUD-CREATE         VALUE 'CREATE  '.
               88  AUD-UPDATE         VALUE 'UPDATE  '.
               88  AUD-DELETE         VALUE 'DELETE  '.
               88  AUD-INQUIRE        VALUE 'INQUIRE '.
               88  AUD-LOGIN          VALUE 'LOGIN   '.
               88  AUD-LOGOUT         VALUE 'LOGOUT  '.
               88  AUD-STARTUP        VALUE 'STARTUP '.
               88  AUD-SHUTDOWN       VALUE 'SHUTDOWN'.
           05  AUD-STATUS           PIC X(4).
               88  AUD-SUCCESS        VALUE 'SUCC'.
               88  AUD-FAILURE        VALUE 'FAIL'.
               88  AUD-WARNING        VALUE 'WARN'.
```
**After:**
```cobol
           05  AUD-TYPE             PIC X(4).
               88  AUD-TRANSACTION     VALUE 'TRAN'.
               88  AUD-USER-ACTION     VALUE 'USER'.
               88  AUD-SYSTEM-EVENT    VALUE 'SYST'.
*-- Change: Add price feed and error event types
               88  AUD-PRICE-FEED      VALUE 'PRCF'.
               88  AUD-ERROR-EVENT     VALUE 'ERRR'.
           05  AUD-ACTION           PIC X(8).
               88  AUD-CREATE         VALUE 'CREATE  '.
               88  AUD-UPDATE         VALUE 'UPDATE  '.
               88  AUD-DELETE         VALUE 'DELETE  '.
               88  AUD-INQUIRE        VALUE 'INQUIRE '.
               88  AUD-LOGIN          VALUE 'LOGIN   '.
               88  AUD-LOGOUT         VALUE 'LOGOUT  '.
               88  AUD-STARTUP        VALUE 'STARTUP '.
               88  AUD-SHUTDOWN       VALUE 'SHUTDOWN'.
*-- Change: Add price update and error actions
               88  AUD-PRICE-UPDATE   VALUE 'PRCUPDT '.
               88  AUD-FEED-ERROR     VALUE 'FDERROR '.
           05  AUD-STATUS           PIC X(4).
               88  AUD-SUCCESS        VALUE 'SUCC'.
               88  AUD-FAILURE        VALUE 'FAIL'.
               88  AUD-WARNING        VALUE 'WARN'.
```

#### **RPTAUD00.cbl**

**Before:**
```cobol
       2110-READ-AUDIT-RECORDS.
           PERFORM UNTIL WS-AUDIT-STATUS = '10'
               READ AUDIT-FILE NEXT
                   AT END
                       MOVE '10' TO WS-AUDIT-STATUS
                   NOT AT END
                       CONTINUE
               END-READ
           END-PERFORM.
```
**After:**
```cobol
       2110-READ-AUDIT-RECORDS.
           PERFORM UNTIL WS-AUDIT-STATUS = '10'
               READ AUDIT-FILE NEXT
                   AT END
                       MOVE '10' TO WS-AUDIT-STATUS
                   NOT AT END
                       IF AUD-TYPE = 'PRCF'
                           MOVE AUD-TIMESTAMP TO WS-AUD-TIMESTAMP
                           MOVE AUD-PROGRAM TO WS-AUD-PROGRAM
                           MOVE 'PRICE FEED' TO WS-AUD-TYPE
                           MOVE AUD-MESSAGE TO WS-AUD-MESSAGE
                           WRITE REPORT-RECORD FROM WS-AUDIT-DETAIL
                       ELSE IF AUD-TYPE = 'ERRR'
                           MOVE AUD-TIMESTAMP TO WS-AUD-TIMESTAMP
                           MOVE AUD-PROGRAM TO WS-AUD-PROGRAM
                           MOVE 'FEED ERROR' TO WS-AUD-TYPE
                           MOVE AUD-MESSAGE TO WS-AUD-MESSAGE
                           WRITE REPORT-RECORD FROM WS-AUDIT-DETAIL
                       ELSE
                           CONTINUE
                       END-IF
               END-READ
           END-PERFORM.
```

## 4. Conclusion  
The implemented changes enable real-time price feed integration and comprehensive audit logging across portfolio and batch recovery modules. The audit reporting module now provides visibility into price feed and error events, supporting operational transparency and regulatory compliance. These enhancements improve data accuracy, traceability, and system robustness, aligning the application with modern financial data management standards.
