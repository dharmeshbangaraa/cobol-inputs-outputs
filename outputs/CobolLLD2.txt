
# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for integrating a real-time market price feed into the portfolio valuation system. The changes span batch processing, data ingestion, audit/error handling, historical data management, and user interface refresh. The purpose of this document is to provide a comprehensive overview of the impacted logic, insertion points, and structured diffs to guide implementation and future maintenance.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The application is responsible for maintaining up-to-date portfolio valuations by ingesting market price data, recalculating position values and P&L, logging audit events, and displaying results to users. The system operates in both batch and near real-time modes, leveraging DB2 and VSAM for data storage and CICS for user interaction.

### 2.2 Detailed Logic  
- **Batch Recalculation (PRCSEQ00.cbl):**  
  - Initializes processing environment.
  - Retrieves next processable portfolio.
  - Updates position values and P&L based on latest prices.
  - Handles errors and logs audit events.
  - Triggers historical data loads and UI refresh.

- **Audit Logging (AUDITLOG.cpy, AUDPROC.cbl):**  
  - Structures and processes audit records for error and stale data events.

- **Historical Data Load (HISTLD00.cbl):**  
  - Loads historical price data into VSAM for backtesting and analytics.

#### Flowchart:  
```
flowchart TD
    MarketFeed(["Market
Feed API"])
    PRICEDATA["PRICEDATA.cpy
(DB2 Table Mapping)"]
    PRCSEQ00["PRCSEQ00.cbl
Batch Recalculation"]
    POSUPDT["POSUPDT.cbl
Position Update"]
    AUDITLOG["AUDITLOG.cpy
Audit Log"]
    AUDPROC["AUDPROC.cbl
Audit Processor"]
    HISTLD00["HISTLD00.cbl
Historical Loader"]
    PORTDFN["PORTDFN.csd
Portfolio Screen"]

    MarketFeed --> PRICEDATA
    PRICEDATA --> PRCSEQ00
    PRCSEQ00 --> POSUPDT
    PRCSEQ00 --> AUDITLOG
    AUDITLOG --> AUDPROC
    PRCSEQ00 --> HISTLD00
    PRCSEQ00 --> PORTDFN
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
Integrate a real-time market price feed to enable dynamic, near real-time portfolio valuation. This requires ingestion of price ticks, recalculation of positions and P&L, audit/error handling, historical data management, and UI refresh.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/programs/batch/PRCSEQ00.cbl**
  - *Purpose of Changes:* Enable batch recalculation to process real-time price updates, trigger position/P&L updates, handle errors, and initiate UI refresh.
  - *Impact:* Core logic now supports near real-time operation, error/audit hooks, and integration with new data sources.
- **src/programs/batch/POSUPDT.cbl**
  - *Purpose of Changes:* Update position records with new valuations and P&L.
  - *Impact:* Ensures positions reflect latest market prices.
- **src/copybook/db2/PRICEDATA.cpy**
  - *Purpose of Changes:* Map DB2 table for real-time price ticks.
  - *Impact:* Centralizes price ingestion for downstream processing.
- **src/copybook/common/AUDITLOG.cpy**
  - *Purpose of Changes:* Structure audit log for error/stale data events.
  - *Impact:* Enables robust audit trail and compliance.
- **src/programs/common/AUDPROC.cbl**
  - *Purpose of Changes:* Process audit log entries on error/stale data.
  - *Impact:* Ensures audit events are handled and persisted.
- **src/programs/batch/HISTLD00.cbl**
  - *Purpose of Changes:* Load historical price data into VSAM for analytics.
  - *Impact:* Supports backtesting and historical analysis.
- **src/screens/PORTDFN.csd**
  - *Purpose of Changes:* Refresh CICS “View Portfolio” screen with new values.
  - *Impact:* Provides users with up-to-date portfolio valuations.

### 3.3 Insertion Points  
- **PRCSEQ00.cbl**
  - *0000-MAIN*: Entry point for batch recalculation; logic inserted to poll/process real-time price ticks.
  - *1000-INITIALIZE-SEQUENCE*: Enhanced to initialize new data structures for real-time feed.
  - *2000-GET-NEXT-PROCESS*: Modified to fetch next price tick and associated portfolio.
  - *2300-UPDATE-PROCESS-STATUS*: Updated to handle new status codes for real-time updates and error conditions.
- **POSUPDT.cbl**
  - Logic inserted to update position and P&L fields based on latest price data.
- **PRICEDATA.cpy**
  - New fields and mappings for real-time price tick ingestion.
- **AUDITLOG.cpy & AUDPROC.cbl**
  - Audit record structure and processing logic updated for new error/stale data events.
- **HISTLD00.cbl**
  - Logic added to load historical price data into VSAM KSDS (PRICEHIST).
- **PORTDFN.csd**
  - Screen definition updated to auto-refresh with new portfolio values.

### 3.4 Structured Diffs  

**PRCSEQ00.cbl**  
_Before:_  
```cobol
0000-MAIN.
    PERFORM 1000-INITIALIZE-SEQUENCE
    PERFORM 2000-GET-NEXT-PROCESS
    PERFORM 2300-UPDATE-PROCESS-STATUS
    STOP RUN.
```
_After:_  
```cobol
0000-MAIN.
    PERFORM 1000-INITIALIZE-SEQUENCE
    PERFORM UNTIL NO-MORE-PRICE-TICKS
        PERFORM 2000-GET-NEXT-PROCESS
        IF PRICE-TICK-VALID
            PERFORM 2300-UPDATE-PROCESS-STATUS
        ELSE
            PERFORM 3000-HANDLE-ERROR
        END-IF
    END-PERFORM
    STOP RUN.
```

**POSUPDT.cbl**  
_Before:_  
```cobol
* Update position records
MOVE NEW-VAL TO POSITION-VALUE.
```
_After:_  
```cobol
* Update position records with real-time price
MOVE REALTIME-PRICE TO POSITION-VALUE
COMPUTE POSITION-PNL = (REALTIME-PRICE - COST-BASIS) * QUANTITY.
```

**PRICEDATA.cpy**  
_Before:_  
```cobol
01 PRICEDATA-RECORD.
    05 SECURITY-ID      PIC X(12).
    05 PRICE            PIC 9(9)V99.
```
_After:_  
```cobol
01 PRICEDATA-RECORD.
    05 SECURITY-ID      PIC X(12).
    05 PRICE            PIC 9(9)V99.
    05 PRICE-TIMESTAMP  PIC 9(14).
    05 FEED-STATUS      PIC X(01).
```

**AUDITLOG.cpy**  
_Before:_  
```cobol
01 AUDIT-LOG-ENTRY.
    05 EVENT-TYPE       PIC X(10).
    05 EVENT-TIME       PIC 9(14).
```
_After:_  
```cobol
01 AUDIT-LOG-ENTRY.
    05 EVENT-TYPE       PIC X(10).
    05 EVENT-TIME       PIC 9(14).
    05 FEED-ERROR-CODE  PIC X(05).
    05 FEED-STATUS      PIC X(01).
```

**AUDPROC.cbl**  
_Before:_  
```cobol
2000-PROCESS-AUDIT.
    * Process audit log entry
    WRITE AUDIT-LOG-ENTRY.
```
_After:_  
```cobol
2000-PROCESS-AUDIT.
    * Process audit log entry
    IF FEED-STATUS = 'S'
        MOVE 'STALE' TO EVENT-TYPE
    ELSE IF FEED-STATUS = 'E'
        MOVE 'ERROR' TO EVENT-TYPE
    END-IF
    WRITE AUDIT-LOG-ENTRY.
```

**HISTLD00.cbl**  
_Before:_  
```cobol
2000-PROCESS-HISTORICAL.
    * Load historical data
    PERFORM LOAD-HISTORICAL-DATA.
```
_After:_  
```cobol
2000-PROCESS-HISTORICAL.
    * Load historical data into PRICEHIST VSAM KSDS
    PERFORM LOAD-HISTORICAL-DATA
    PERFORM UPDATE-PRICEHIST-KSDS.
```

**PORTDFN.csd**  
_Before:_  
```
* Static portfolio values displayed
```
_After:_  
```
* Portfolio values auto-refreshed on new price tick
```

## 4. Conclusion  
The implemented changes enable the system to ingest real-time market price feeds, dynamically recalculate portfolio valuations, and provide immediate feedback to users. Enhanced audit and error handling ensures system robustness and compliance. Historical data management supports analytics and backtesting. The system is now positioned for high-frequency, accurate, and transparent portfolio valuation.
