# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the integration of real-time price feed functionality into the COBOL portfolio management application. The changes span multiple modules, including the main portfolio update program (`PORTUPDT.cbl`), portfolio master record layout (`PORTFLIO.cpy`), audit report generator (`RPTAUD00.cbl`), and audit trail record definitions (`AUDITLOG.cpy`).  
The purpose of this document is to provide a comprehensive overview of the modifications, their rationale, and their impact on the system, ensuring traceability and clarity for future maintenance and enhancements.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The portfolio management application is responsible for updating portfolio records based on incoming update files, maintaining audit trails, and generating audit reports. The core workflow involves reading update records, applying changes to portfolio data, and logging all significant events for audit and compliance purposes.

### 2.2 Detailed Logic  
- **Initialization:**  
  - Opens portfolio, update, and (now) price feed files.  
  - Initializes working storage and status flags.  
- **Processing:**  
  - Ingests real-time price feed records and updates portfolio values accordingly.  
  - Processes update records to apply status, name, or value changes.  
  - Logs audit events for traceability.  
- **Termination:**  
  - Closes all files and displays summary statistics.

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    Init["1000-INITIALIZE:
Open files
Initialize work areas"]
    IngestPriceFeed["1500-INGEST-PRICEFEED:
Read price feed
Update portfolio
Audit log"]
    ProcessUpdates["2000-PROCESS:
Read update file
Apply updates"]
    Terminate["3000-TERMINATE:
Close files
Display stats"]
    End(["End"])

    Start --> Init
    Init --> IngestPriceFeed
    IngestPriceFeed --> ProcessUpdates
    ProcessUpdates --> Terminate
    Terminate --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
Integrate real-time price feed ingestion into the portfolio update process. Update portfolio records with the latest price and timestamp, and ensure all price feed events are logged for audit and reporting purposes.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/programs/portfolio/PORTUPDT.cbl**  
  - Purpose of Changes: Integrate real-time price feed ingestion, update portfolio values and timestamps, and add audit logging for price feed events.
  - Impact: Enables the system to reflect up-to-date portfolio valuations and maintain traceability for regulatory and business reporting.

- **src/copybook/common/PORTFLIO.cpy**  
  - Purpose of Changes: Add fields to store real-time price and timestamp in the portfolio master record.
  - Impact: Supports storage and retrieval of real-time price data for each portfolio.

- **src/programs/batch/RPTAUD00.cbl**  
  - Purpose of Changes: Extend audit reporting to include price feed event logging and summarization.
  - Impact: Enhances audit capabilities to cover new real-time price feed events.

- **src/copybook/common/AUDITLOG.cpy**  
  - Purpose of Changes: Add event types, actions, and timestamp fields for price feed integration in audit records.
  - Impact: Enables detailed audit trail for price feed-related activities.

### 3.3 Insertion Points  
- **PORTUPDT.cbl**
  - File Control Section: Added `PRICEFEED-FILE` definition.
  - Working-Storage Section: Added status flags and work areas for price feed processing and audit logging.
  - 1000-INITIALIZE: Open `PRICEFEED-FILE` and check status.
  - 1500-INGEST-PRICEFEED: New paragraph to read price feed records, update portfolio, and log audit events.
  - 3000-TERMINATE: Close `PRICEFEED-FILE`.
- **PORTFLIO.cpy**
  - `PORT-PORTFOLIO-INFO`: Added `PORT-REALTIME-PRICE` and `PORT-REALTIME-TIME`.
- **RPTAUD00.cbl**
  - Working-Storage: Added `WS-PRICEFEED-DETAIL`.
  - 0000-MAIN: Added call to process price feed events.
  - New paragraphs: `2010-PROCESS-PRICEFEED-EVENTS`, `2011-READ-PRICEFEED-RECORDS`, `2012-SUMMARIZE-PRICEFEED-EVENTS`.
- **AUDITLOG.cpy**
  - `AUD-TYPE`: Added `AUD-PRICEFEED-EVENT`.
  - `AUD-ACTION`: Added `AUD-PRICEFEED`.
  - Added `AUD-PRICEFEED-TIME` field.

### 3.4 Structured Diffs  

#### **PORTUPDT.cbl**  
**Before:**  
```cobol
       FILE-CONTROL.
           SELECT PORTFOLIO-FILE
               ASSIGN TO PORTFILE
               ORGANIZATION IS INDEXED
               ACCESS MODE IS RANDOM
               RECORD KEY IS PORT-KEY
               FILE STATUS IS WS-FILE-STATUS.
           
           SELECT UPDATE-FILE
               ASSIGN TO UPDTFILE
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-UPDT-STATUS.
```
**After:**  
```cobol
       FILE-CONTROL.
           SELECT PORTFOLIO-FILE
               ASSIGN TO PORTFILE
               ORGANIZATION IS INDEXED
               ACCESS MODE IS RANDOM
               RECORD KEY IS PORT-KEY
               FILE STATUS IS WS-FILE-STATUS.
           
           SELECT UPDATE-FILE
               ASSIGN TO UPDTFILE
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-UPDT-STATUS.
      *-- Change: Added real-time price feed file for integration
           SELECT PRICEFEED-FILE
               ASSIGN TO PRICEFEED
               ORGANIZATION IS SEQUENTIAL
               FILE STATUS IS WS-PRICEFEED-STATUS.
```

**Before:**  
```cobol
       WORKING-STORAGE SECTION.
       01  WS-CONSTANTS.
           05  WS-PROGRAM-NAME     PIC X(08) VALUE 'PORTUPDT '.
           05  WS-SUCCESS          PIC S9(4) VALUE +0.
           05  WS-ERROR            PIC S9(4) VALUE +8.
```
**After:**  
```cobol
       WORKING-STORAGE SECTION.
       01  WS-CONSTANTS.
           05  WS-PROGRAM-NAME     PIC X(08) VALUE 'PORTUPDT '.
           05  WS-SUCCESS          PIC S9(4) VALUE +0.
           05  WS-ERROR            PIC S9(4) VALUE +8.
      *-- Change: Add price feed file status
           05  WS-PRICEFEED-STATUS PIC X(02).
               88  WS-PRICEFEED-SUCCESS VALUE '00'.
               88  WS-PRICEFEED-EOF     VALUE '10'.
      *-- Change: Add end of price feed switch
           05  WS-END-OF-PRICEFEED PIC X VALUE 'N'.
               88  END-OF-PRICEFEED VALUE 'Y'.
               88  NOT-END-OF-PRICEFEED VALUE 'N'.
```

**Before:**  
```cobol
       0000-MAIN.
           PERFORM 1000-INITIALIZE
           PERFORM 2000-PROCESS
              UNTIL END-OF-FILE
           PERFORM 3000-TERMINATE
           GOBACK.
```
**After:**  
```cobol
       0000-MAIN.
           PERFORM 1000-INITIALIZE
      *-- Change: Ingest real-time price feed before processing updates
           PERFORM 1500-INGEST-PRICEFEED
           PERFORM 2000-PROCESS
              UNTIL END-OF-FILE
           PERFORM 3000-TERMINATE
           GOBACK.
```

**Before:**  
```cobol
       1000-INITIALIZE.
           INITIALIZE WS-WORK-AREAS
           
           OPEN I-O   PORTFOLIO-FILE
           OPEN INPUT UPDATE-FILE
           
           IF NOT WS-SUCCESS-STATUS OR 
              NOT WS-UPDT-SUCCESS
              DISPLAY 'Error opening files: ' 
                      'PORT=' WS-FILE-STATUS
                      'UPDT=' WS-UPDT-STATUS
              MOVE WS-ERROR TO WS-RETURN-CODE
              PERFORM 3000-TERMINATE
           END-IF
           .
```
**After:**  
```cobol
       1000-INITIALIZE.
           INITIALIZE WS-WORK-AREAS
           
           OPEN I-O   PORTFOLIO-FILE
           OPEN INPUT UPDATE-FILE
      *-- Change: Open price feed file
           OPEN INPUT PRICEFEED-FILE
           
           IF NOT WS-SUCCESS-STATUS OR 
              NOT WS-UPDT-SUCCESS OR
              NOT WS-PRICEFEED-SUCCESS
              DISPLAY 'Error opening files: ' 
                      'PORT=' WS-FILE-STATUS
                      'UPDT=' WS-UPDT-STATUS
                      'PRICEFEED=' WS-PRICEFEED-STATUS
              MOVE WS-ERROR TO WS-RETURN-CODE
              PERFORM 3000-TERMINATE
           END-IF
           .
```

**Insertion (New Paragraph):**  
```cobol
      *-- Change: New paragraph for price feed ingestion
       1500-INGEST-PRICEFEED.
           PERFORM UNTIL END-OF-PRICEFEED
               READ PRICEFEED-FILE
                   AT END
                       SET END-OF-PRICEFEED TO TRUE
                   NOT AT END
                       MOVE PF-PORTFOLIO-ID TO WS-PRICEFEED-PORTID
                       MOVE PF-PRICE TO WS-PRICEFEED-PRICE
                       MOVE PF-TIMESTAMP TO WS-PRICEFEED-TIME
      *-- Change: Update portfolio record with real-time price
                       MOVE WS-PRICEFEED-PORTID TO PORT-KEY
                       READ PORTFOLIO-FILE
                           INVALID KEY
                               DISPLAY 'Portfolio not found for price feed: ' WS-PRICEFEED-PORTID
                           NOT INVALID KEY
                               MOVE WS-PRICEFEED-PRICE TO PORT-TOTAL-VALUE
                               MOVE WS-PRICEFEED-TIME TO PORT-LAST-MAINT
      *-- Change: Audit log for price feed update
                               MOVE 'PRICEFEED' TO WS-AUDIT-EVENT
                               DISPLAY 'Audit: Real-time price update for ' WS-PRICEFEED-PORTID
                               REWRITE PORT-RECORD
                       END-READ
               END-READ
           END-PERFORM
           .
```

**Before:**  
```cobol
       3000-TERMINATE.
           CLOSE PORTFOLIO-FILE
                 UPDATE-FILE
           
           DISPLAY 'Updates processed: ' WS-UPDATE-COUNT
           DISPLAY 'Errors occurred:  ' WS-ERROR-COUNT
           
           MOVE WS-RETURN-CODE TO RETURN-CODE
           .
```
**After:**  
```cobol
       3000-TERMINATE.
           CLOSE PORTFOLIO-FILE
                 UPDATE-FILE
      *-- Change: Close price feed file
                 PRICEFEED-FILE
           
           DISPLAY 'Updates processed: ' WS-UPDATE-COUNT
           DISPLAY 'Errors occurred:  ' WS-ERROR-COUNT
           
           MOVE WS-RETURN-CODE TO RETURN-CODE
           .
```

#### **PORTFLIO.cpy**  
**Before:**  
```cobol
           05  PORT-PORTFOLIO-INFO.
               10  PORT-CREATE-DATE    PIC 9(8).
               10  PORT-LAST-MAINT     PIC 9(8).
               10  PORT-STATUS         PIC X(1).
                   88  PORT-ACTIVE       VALUE 'A'.
                   88  PORT-CLOSED       VALUE 'C'.
                   88  PORT-SUSPENDED    VALUE 'S'.
```
**After:**  
```cobol
           05  PORT-PORTFOLIO-INFO.
               10  PORT-CREATE-DATE    PIC 9(8).
               10  PORT-LAST-MAINT     PIC 9(8).
               10  PORT-STATUS         PIC X(1).
                   88  PORT-ACTIVE       VALUE 'A'.
                   88  PORT-CLOSED       VALUE 'C'.
                   88  PORT-SUSPENDED    VALUE 'S'.
      *-- Change: Add real-time price and timestamp fields
               10  PORT-REALTIME-PRICE PIC S9(13)V99 COMP-3.
               10  PORT-REALTIME-TIME  PIC 9(14).
```

#### **RPTAUD00.cbl**  
**Before:**  
```cobol
       01  WS-AUDIT-DETAIL.
           05  WS-AUD-TIMESTAMP     PIC X(26).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-PROGRAM       PIC X(8).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-TYPE          PIC X(10).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-MESSAGE       PIC X(80).
```
**After:**  
```cobol
       01  WS-AUDIT-DETAIL.
           05  WS-AUD-TIMESTAMP     PIC X(26).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-PROGRAM       PIC X(8).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-TYPE          PIC X(10).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-AUD-MESSAGE       PIC X(80).
      *-- Change: Add work area for price feed event
       01  WS-PRICEFEED-DETAIL.
           05  WS-PF-TIMESTAMP      PIC X(26).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-PF-PORTFOLIO      PIC X(8).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-PF-PRICE          PIC S9(13)V99 COMP-3.
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-PF-EVENT-TYPE     PIC X(10).
           05  FILLER               PIC X(2) VALUE SPACES.
           05  WS-PF-MESSAGE        PIC X(80).
```

**Before:**  
```cobol
       0000-MAIN.
           PERFORM 1000-INITIALIZE
           PERFORM 2000-PROCESS-REPORT
           PERFORM 3000-CLEANUP
           GOBACK.
```
**After:**  
```cobol
       0000-MAIN.
           PERFORM 1000-INITIALIZE
           PERFORM 2000-PROCESS-REPORT
      *-- Change: Add price feed event processing
           PERFORM 2010-PROCESS-PRICEFEED-EVENTS
           PERFORM 3000-CLEANUP
           GOBACK.
```

**Insertion (New Paragraphs):**  
```cobol
      *-- Change: New paragraph for price feed event processing
       2010-PROCESS-PRICEFEED-EVENTS.
           PERFORM 2011-READ-PRICEFEED-RECORDS
           PERFORM 2012-SUMMARIZE-PRICEFEED-EVENTS.

      *-- Change: Stub for price feed event reading
       2011-READ-PRICEFEED-RECORDS.
           DISPLAY 'Reading price feed events for audit report.'.

      *-- Change: Stub for price feed event summary
       2012-SUMMARIZE-PRICEFEED-EVENTS.
           DISPLAY 'Summarizing price feed events for audit report.'.
```

#### **AUDITLOG.cpy**  
**Before:**  
```cobol
           05  AUD-TYPE             PIC X(4).
               88  AUD-TRANSACTION     VALUE 'TRAN'.
               88  AUD-USER-ACTION     VALUE 'USER'.
               88  AUD-SYSTEM-EVENT    VALUE 'SYST'.
           05  AUD-ACTION           PIC X(8).
               88  AUD-CREATE         VALUE 'CREATE  '.
               88  AUD-UPDATE         VALUE 'UPDATE  '.
               88  AUD-DELETE         VALUE 'DELETE  '.
               88  AUD-INQUIRE        VALUE 'INQUIRE '.
               88  AUD-LOGIN          VALUE 'LOGIN   '.
               88  AUD-LOGOUT         VALUE 'LOGOUT  '.
               88  AUD-STARTUP        VALUE 'STARTUP '.
               88  AUD-SHUTDOWN       VALUE 'SHUTDOWN'.
```
**After:**  
```cobol
           05  AUD-TYPE             PIC X(4).
               88  AUD-TRANSACTION     VALUE 'TRAN'.
               88  AUD-USER-ACTION     VALUE 'USER'.
               88  AUD-SYSTEM-EVENT    VALUE 'SYST'.
      *-- Change: Add price feed event type
               88  AUD-PRICEFEED-EVENT VALUE 'PRCF'.
           05  AUD-ACTION           PIC X(8).
               88  AUD-CREATE         VALUE 'CREATE  '.
               88  AUD-UPDATE         VALUE 'UPDATE  '.
               88  AUD-DELETE         VALUE 'DELETE  '.
               88  AUD-INQUIRE        VALUE 'INQUIRE '.
               88  AUD-LOGIN          VALUE 'LOGIN   '.
               88  AUD-LOGOUT         VALUE 'LOGOUT  '.
               88  AUD-STARTUP        VALUE 'STARTUP '.
               88  AUD-SHUTDOWN       VALUE 'SHUTDOWN'.
      *-- Change: Add price feed action
               88  AUD-PRICEFEED      VALUE 'PRICEFD '.
```

**Insertion:**  
```cobol
      *-- Change: Add price feed timestamp
           05  AUD-PRICEFEED-TIME   PIC 9(14).
```

## 4. Conclusion  
The integration of real-time price feed functionality enhances the portfolio management system by ensuring portfolio valuations are always current and auditable. The changes provide robust support for regulatory compliance, operational transparency, and future extensibility. All modifications are clearly marked and documented for ease of maintenance and further development.
