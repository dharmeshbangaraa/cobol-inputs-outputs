** Technical Document and Low-Level Design (LLD)**

## 1. Introduction  
This document provides a comprehensive technical overview and low-level design (LLD) for recent enhancements to the COBOL-based portfolio transaction processing system. The primary focus is the addition and integration of a new `TRANSACTION-TYPE` field within the transaction record structure and its validation and processing throughout the application. The document details the changes, their rationale, and the expected impact on the system.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The portfolio transaction processing system manages and processes financial transactions for investment portfolios. It reads transaction records, validates their contents, updates portfolio positions, and maintains an audit trail. The system ensures data integrity and compliance with business rules by performing rigorous validation and structured processing.

### 2.2 Detailed Logic  

#### Prior Logic (Before Enhancement)
- **Transaction Record Structure**: Defined in `TRNREC.cpy`, containing fields such as date, time, portfolio ID, transaction type, quantity, price, amount, currency, and status.
- **Processing Flow**:  
  - **Initialization**: Opens files, initializes counters and status flags.
  - **Transaction Processing**: Reads and validates each transaction, checks portfolio existence, validates transaction type, and processes amounts.
  - **Position Update**: Updates portfolio records based on transaction type (buy, sell, transfer, fee).
  - **Audit Trail**: Records processing details for each transaction.
  - **Error Handling**: Captures and logs errors, increments error counters.

#### Enhanced Logic (With TRANSACTION-TYPE)
- **New Field**: `TRANSACTION-TYPE` (PIC X(04)) added to transaction record for batch processing/reporting.
- **Validation**: New and extended validation logic for `TRANSACTION-TYPE` in transaction validation and type-checking routines.
- **Processing**: `TRANSACTION-TYPE` is now available for use in business logic, audit trails, and optional logging.
- **Filler Adjustment**: Filler in the record structure reduced by 4 bytes to accommodate the new field.

#### Flowchart:  
```
flowchart TD
    Start([Start])
    Init([1000-INITIALIZE])
    OpenFiles([Open Files])
    CheckStatus([Check File Status])
    ProcessLoop([2000-PROCESS-TRANSACTIONS])
    ReadTrans([Read Transaction])
    Validate([2100-VALIDATE-TRANSACTION])
    CheckPortfolio([2110-CHECK-PORTFOLIO])
    CheckType([2120-CHECK-TRANSACTION-TYPE])
    CheckAmounts([2130-CHECK-AMOUNTS])
    UpdatePositions([2200-UPDATE-POSITIONS])
    AuditTrail([2300-UPDATE-AUDIT-TRAIL])
    Terminate([3000-TERMINATE])
    End([End])

    Start --> Init
    Init --> OpenFiles
    OpenFiles --> CheckStatus
    CheckStatus --> ProcessLoop
    ProcessLoop --> ReadTrans
    ReadTrans --> Validate
    Validate --> CheckPortfolio
    CheckPortfolio --> CheckType
    CheckType --> CheckAmounts
    CheckAmounts --> UpdatePositions
    UpdatePositions --> AuditTrail
    AuditTrail --> ProcessLoop
    ProcessLoop --> Terminate
    Terminate --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
As a batch processing/reporting user, I need the ability to specify and validate an extended transaction type (`TRANSACTION-TYPE`) for each transaction, so that downstream processes and reports can distinguish between regular, reversal, adjustment, and fee transactions.

### 3.2 Impacted Code Changes Summary

#### 3.2.1 Impacted Sections and Files:  
- **src/copybook/common/TRNREC.cpy**  
  - Purpose of Changes: Added `TRANSACTION-TYPE` field to the transaction record structure for enhanced reporting and batch processing.
  - Impact: All programs using this copybook now have access to the new field; record length and filler adjusted.

- **src/programs/portfolio/PORTTRAN.cbl**  
  - Purpose of Changes: Integrated `TRANSACTION-TYPE` into transaction validation, processing, and audit routines.
  - Impact: Ensures that all transactions include a valid `TRANSACTION-TYPE`, and this information is used in processing and audit trails.

### 3.3 Insertion Points  
- **TRNREC.cpy**:  
  - Inserted new field `TRANSACTION-TYPE` (PIC X(04)) after `TRN-STATUS` in the `TRANSACTION-RECORD` structure.
  - Adjusted `TRN-FILLER` size to maintain record length.

- **PORTTRAN.cbl**:  
  - **WORKING-STORAGE SECTION**:  
    - Added `WS-TRANSACTION-TYPE-VLD` for validation.
  - **2100-VALIDATE-TRANSACTION**:  
    - Inserted validation logic to ensure `TRANSACTION-TYPE` is present and valid.
  - **2120-CHECK-TRANSACTION-TYPE**:  
    - Enhanced to validate both `TRN-TYPE` and `TRANSACTION-TYPE` values.
  - **2200-UPDATE-POSITIONS**:  
    - Made `TRANSACTION-TYPE` available for processing logic.
  - **2210-PROCESS-BUY, 2220-PROCESS-SELL, 2230-PROCESS-TRANSFER, 2240-PROCESS-FEE**:  
    - Optionally log or process `TRANSACTION-TYPE`.
  - **2300-UPDATE-AUDIT-TRAIL**:  
    - Included `TRANSACTION-TYPE` in audit messages.

### 3.4 Structured Diffs  

#### **TRNREC.cpy**  
**Before:**  
```cobol
05  TRN-DATA.
    10  TRN-INVESTMENT-ID  PIC X(10).
    10  TRN-TYPE           PIC X(02).
        88  TRN-TYPE-BUY     VALUE 'BU'.
        88  TRN-TYPE-SELL    VALUE 'SL'.
        88  TRN-TYPE-TRANS   VALUE 'TR'.
        88  TRN-TYPE-FEE     VALUE 'FE'.
    10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
    10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
    10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
    10  TRN-CURRENCY      PIC X(03).
    10  TRN-STATUS        PIC X(01).
        88  TRN-STATUS-PEND   VALUE 'P'.
        88  TRN-STATUS-DONE   VALUE 'D'.
        88  TRN-STATUS-FAIL   VALUE 'F'.
        88  TRN-STATUS-REV    VALUE 'R'.
05  TRN-AUDIT.
    10  TRN-PROCESS-DATE  PIC X(26).
    10  TRN-PROCESS-USER  PIC X(08).
05  TRN-FILLER           PIC X(50).
```

**After:**  
```cobol
05  TRN-DATA.
    10  TRN-INVESTMENT-ID  PIC X(10).
    10  TRN-TYPE           PIC X(02).
        88  TRN-TYPE-BUY     VALUE 'BU'.
        88  TRN-TYPE-SELL    VALUE 'SL'.
        88  TRN-TYPE-TRANS   VALUE 'TR'.
        88  TRN-TYPE-FEE     VALUE 'FE'.
    10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
    10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
    10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
    10  TRN-CURRENCY      PIC X(03).
    10  TRN-STATUS        PIC X(01).
        88  TRN-STATUS-PEND   VALUE 'P'.
        88  TRN-STATUS-DONE   VALUE 'D'.
        88  TRN-STATUS-FAIL   VALUE 'F'.
        88  TRN-STATUS-REV    VALUE 'R'.
    10  TRANSACTION-TYPE   PIC X(04).
*   Added TRANSACTION-TYPE field for batch processing/reporting (2024-06)
05  TRN-AUDIT.
    10  TRN-PROCESS-DATE  PIC X(26).
    10  TRN-PROCESS-USER  PIC X(08).
05  TRN-FILLER           PIC X(46).
*   Reduced filler by 4 bytes for TRANSACTION-TYPE addition
```

#### **PORTTRAN.cbl**  
**Before (Excerpt from 2100-VALIDATE-TRANSACTION):**  
```cobol
2100-VALIDATE-TRANSACTION.
    MOVE SPACES TO ERR-TEXT
    PERFORM 2110-CHECK-PORTFOLIO
    IF ERR-TEXT = SPACES
        PERFORM 2120-CHECK-TRANSACTION-TYPE
    END-IF
    IF ERR-TEXT = SPACES
        PERFORM 2130-CHECK-AMOUNTS
    END-IF
    IF ERR-TEXT = SPACES
        ADD 1 TO WS-PROCESS-COUNT
    ELSE
        PERFORM 9000-ERROR-ROUTINE
    END-IF
.
```

**After:**  
```cobol
2100-VALIDATE-TRANSACTION.
    MOVE SPACES TO ERR-TEXT

*-- Begin Enhancement: Validate new TRANSACTION-TYPE field
    IF TRANSACTION-TYPE = SPACES
        MOVE 'TRANSACTION-TYPE is required' TO ERR-TEXT
        PERFORM 9000-ERROR-ROUTINE
        EXIT PARAGRAPH
    END-IF
    MOVE TRANSACTION-TYPE TO WS-TRANSACTION-TYPE-VLD
*-- End Enhancement

    PERFORM 2110-CHECK-PORTFOLIO
    IF ERR-TEXT = SPACES
        PERFORM 2120-CHECK-TRANSACTION-TYPE
    END-IF
    IF ERR-TEXT = SPACES
        PERFORM 2130-CHECK-AMOUNTS
    END-IF
    IF ERR-TEXT = SPACES
        ADD 1 TO WS-PROCESS-COUNT
    ELSE
        PERFORM 9000-ERROR-ROUTINE
    END-IF
.
```

**Before (Excerpt from 2120-CHECK-TRANSACTION-TYPE):**  
```cobol
2120-CHECK-TRANSACTION-TYPE.
    EVALUATE TRN-TYPE
        WHEN 'BU'
        WHEN 'SL'
        WHEN 'TR'
        WHEN 'FE'
            CONTINUE
        WHEN OTHER
            STRING 'Invalid Transaction Type: '
                   TRN-TYPE
               DELIMITED BY SIZE
               INTO ERR-TEXT
    END-EVALUATE
.
```

**After:**  
```cobol
2120-CHECK-TRANSACTION-TYPE.
*-- Begin Enhancement: Validate both TRN-TYPE and TRANSACTION-TYPE
    EVALUATE TRN-TYPE
        WHEN 'BU'
        WHEN 'SL'
        WHEN 'TR'
        WHEN 'FE'
            CONTINUE
        WHEN OTHER
            STRING 'Invalid Transaction Type: '
                   TRN-TYPE
               DELIMITED BY SIZE
               INTO ERR-TEXT
    END-EVALUATE

    IF ERR-TEXT = SPACES
        EVALUATE TRANSACTION-TYPE
            WHEN 'REG'
            WHEN 'REV'
            WHEN 'ADJ'
            WHEN 'FEE'
                CONTINUE
            WHEN OTHER
                STRING 'Invalid TRANSACTION-TYPE: '
                       TRANSACTION-TYPE
                   DELIMITED BY SIZE
                   INTO ERR-TEXT
        END-EVALUATE
    END-IF
*-- End Enhancement
.
```

**Before (Excerpt from 2300-UPDATE-AUDIT-TRAIL):**  
```cobol
2300-UPDATE-AUDIT-TRAIL.
    INITIALIZE AUDIT-RECORD
    ...
    STRING 'Transaction: ' DELIMITED BY SIZE
           TRN-TYPE       DELIMITED BY SIZE
           ' Amount: '    DELIMITED BY SIZE
           TRN-AMOUNT     DELIMITED BY SIZE
           ' Units: '     DELIMITED BY SIZE
           TRN-QUANTITY   DELIMITED BY SIZE
       INTO AUD-MESSAGE
.
```

**After:**  
```cobol
2300-UPDATE-AUDIT-TRAIL.
    INITIALIZE AUDIT-RECORD
    ...
*-- Begin Enhancement: Include TRANSACTION-TYPE in audit message
    IF TRANSACTION-TYPE NOT = SPACES
        STRING AUD-MESSAGE DELIMITED BY SIZE
               ' [TYPE:' TRANSACTION-TYPE ']' DELIMITED BY SIZE
           INTO AUD-MESSAGE
    END-IF
*-- End Enhancement

    STRING 'Transaction: ' DELIMITED BY SIZE
           TRN-TYPE       DELIMITED BY SIZE
           ' Amount: '    DELIMITED BY SIZE
           TRN-AMOUNT     DELIMITED BY SIZE
           ' Units: '     DELIMITED BY SIZE
           TRN-QUANTITY   DELIMITED BY SIZE
           ' Type: '      DELIMITED BY SIZE
           TRANSACTION-TYPE DELIMITED BY SIZE
       INTO AUD-MESSAGE
*-- End Enhancement: TRANSACTION-TYPE included in audit message
.
```

## 4. Conclusion  
The enhancements introduce a new `TRANSACTION-TYPE` field to the transaction record structure and integrate its validation and processing into the portfolio transaction application. These changes enable more granular transaction categorization for batch processing and reporting, improve data quality through validation, and enhance audit trails. The modifications are backward-compatible and clearly marked for maintainability. The system is now better equipped to support extended transaction types and future business requirements.
