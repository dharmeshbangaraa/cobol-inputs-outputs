# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the COBOL batch program `HISTLD00`, which is responsible for loading position history data into DB2 and, as per recent enhancements, storing historical price information in a new VSAM file. The purpose of this document is to provide a comprehensive overview of the modifications, their rationale, and the expected impact on the application.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The `HISTLD00` program processes transaction history records in batch mode. It reads records from an input file, loads them into a DB2 table, manages batch control and checkpointing, and outputs processing statistics. The new enhancement introduces the storage of historical price data into a dedicated VSAM file.

### 2.2 Detailed Logic  
- **Initialization:**  
  - Opens all required files (transaction history, batch control, and the new historical price file).  
  - Connects to DB2 and initializes checkpoints.  
- **Processing Loop:**  
  - Reads transaction history records sequentially.  
  - For each record, loads data into the DB2 table.  
  - Commits work at defined intervals and updates checkpoints.  
  - **New:** Stores historical price data in the new VSAM file for each record processed.  
- **Termination:**  
  - Final commit, closes all files, disconnects from DB2, and displays processing statistics, including the new historical price count.

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    Init["1000-INITIALIZE:
Open Files
Connect DB2
Init Checkpoints"]
    ProcessLoop["2000-PROCESS:
Read History
If More Records"]
    LoadDB2["2200-LOAD-TO-DB2:
Load to DB2"]
    CheckCommit["2300-CHECK-COMMIT:
Commit & Update Checkpoint"]
    StorePriceHist["2100-STORE-PRICEHIST:
Store Historical Price
in VSAM"]
    Terminate["3000-TERMINATE:
Final Commit
Close Files
Disconnect DB2
Display Stats"]
    End(["End"])

    Start --> Init
    Init --> ProcessLoop
    ProcessLoop -->|Yes| LoadDB2
    LoadDB2 --> CheckCommit
    CheckCommit --> StorePriceHist
    StorePriceHist --> ProcessLoop
    ProcessLoop -->|No| Terminate
    Terminate --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
As per the impact analysis, the application must now store historical price data for each transaction in a new VSAM file (`PRICEHIST-FILE`). This ensures that historical pricing information is available for downstream processes and audit requirements.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:  
- **File:** `src/programs/batch/HISTLD00.cbl`
  - **Sections Impacted:**
    - FILE-CONTROL and FILE SECTION: Added new VSAM file definition.
    - WORKING-STORAGE SECTION: Added file status and counter for historical prices.
    - 1000-INITIALIZE/1100-OPEN-FILES: Open new file.
    - 2000-PROCESS: Call new logic for each record.
    - 2100-STORE-PRICEHIST: New paragraph for writing to VSAM.
    - 3200-CLOSE-FILES: Close new file.
    - 3400-DISPLAY-STATS: Display new counter.

  - **Purpose of Changes:**  
    To enable the application to persist historical price data for each transaction processed, as required by business and audit needs.

  - **Impact:**  
    - Ensures historical price data is captured and available for future reference.
    - Minimal impact on existing logic; changes are modular and traceable.
    - Additional statistics and error handling for the new file.

### 3.3 Insertion Points  
- **FILE-CONTROL Section:**  
  - Inserted new `SELECT PRICEHIST-FILE` entry for the VSAM file.
- **FILE SECTION:**  
  - Added FD for `PRICEHIST-FILE`.
- **WORKING-STORAGE SECTION:**  
  - Added `WS-PHIST-STATUS` and `WS-HIST-PRICE-WRITTEN`.
- **1100-OPEN-FILES Paragraph:**  
  - Opened `PRICEHIST-FILE` for output and added error handling.
- **2000-PROCESS Paragraph:**  
  - After loading to DB2 and checkpointing, inserted call to `2100-STORE-PRICEHIST`.
- **2100-STORE-PRICEHIST Paragraph:**  
  - New logic to write historical price data to VSAM, with error handling and counter increment.
- **3200-CLOSE-FILES Paragraph:**  
  - Added `PRICEHIST-FILE` to the CLOSE statement.
- **3400-DISPLAY-STATS Paragraph:**  
  - Displays the count of historical prices written.

### 3.4 Structured Diffs  

**FILE-CONTROL Section**  
_Before:_
```cobol
     SELECT TRANSACTION-HISTORY
         ASSIGN TO TRANHIST
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS TH-KEY
         FILE STATUS IS WS-TH-STATUS.
         
     SELECT BATCH-CONTROL-FILE
         ASSIGN TO BCHCTL
         ORGANIZATION IS INDEXED
         ACCESS MODE IS DYNAMIC
         RECORD KEY IS BCT-KEY
         FILE STATUS IS WS-BCT-STATUS.
```
_After:_
```cobol
     SELECT TRANSACTION-HISTORY
         ASSIGN TO TRANHIST
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS TH-KEY
         FILE STATUS IS WS-TH-STATUS.
         
     SELECT BATCH-CONTROL-FILE
         ASSIGN TO BCHCTL
         ORGANIZATION IS INDEXED
         ACCESS MODE IS DYNAMIC
         RECORD KEY IS BCT-KEY
         FILE STATUS IS WS-BCT-STATUS.

*-- Change: Added new VSAM file for historical price storage as per impact analysis
     SELECT PRICEHIST-FILE
         ASSIGN TO PRICEHIST
         ORGANIZATION IS INDEXED
         ACCESS MODE IS DYNAMIC
         RECORD KEY IS PHIST-KEY
         FILE STATUS IS WS-PHIST-STATUS.
```

**FILE SECTION**  
_Before:_
```cobol
 FD  TRANSACTION-HISTORY.
     COPY HISTREC.

 FD  BATCH-CONTROL-FILE.
     COPY BCHCTL.
```
_After:_
```cobol
 FD  TRANSACTION-HISTORY.
     COPY HISTREC.

 FD  BATCH-CONTROL-FILE.
     COPY BCHCTL.

*-- Change: Added FD for new PRICEHIST KSDS file
 FD  PRICEHIST-FILE.
     COPY PRICEHIST.
```

**WORKING-STORAGE SECTION**  
_Before:_
```cobol
 01  WS-FILE-STATUS.
     05  WS-TH-STATUS          PIC X(2).
     05  WS-BCT-STATUS         PIC X(2).
     
 01  WS-COUNTERS.
     05  WS-RECORDS-READ       PIC S9(9) COMP VALUE 0.
     05  WS-RECORDS-WRITTEN    PIC S9(9) COMP VALUE 0.
     05  WS-ERROR-COUNT        PIC S9(9) COMP VALUE 0.
     05  WS-COMMIT-COUNT       PIC S9(4) COMP VALUE 0.
```
_After:_
```cobol
 01  WS-FILE-STATUS.
     05  WS-TH-STATUS          PIC X(2).
     05  WS-BCT-STATUS         PIC X(2).
*-- Change: Added file status for PRICEHIST
     05  WS-PHIST-STATUS       PIC X(2).
     
 01  WS-COUNTERS.
     05  WS-RECORDS-READ       PIC S9(9) COMP VALUE 0.
     05  WS-RECORDS-WRITTEN    PIC S9(9) COMP VALUE 0.
     05  WS-ERROR-COUNT        PIC S9(9) COMP VALUE 0.
     05  WS-COMMIT-COUNT       PIC S9(4) COMP VALUE 0.
*-- Change: Counter for historical prices written
     05  WS-HIST-PRICE-WRITTEN PIC S9(9) COMP VALUE 0.
```

**1100-OPEN-FILES Paragraph**  
_Before:_
```cobol
 1100-OPEN-FILES.
     OPEN INPUT TRANSACTION-HISTORY
     IF WS-TH-STATUS NOT = '00'
         MOVE 'Error opening history file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     
     OPEN I-O BATCH-CONTROL-FILE
     IF WS-BCT-STATUS NOT = '00'
         MOVE 'Error opening control file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     .
```
_After:_
```cobol
 1100-OPEN-FILES.
     OPEN INPUT TRANSACTION-HISTORY
     IF WS-TH-STATUS NOT = '00'
         MOVE 'Error opening history file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     
     OPEN I-O BATCH-CONTROL-FILE
     IF WS-BCT-STATUS NOT = '00'
         MOVE 'Error opening control file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
*-- Change: Open PRICEHIST file for output
     OPEN OUTPUT PRICEHIST-FILE
     IF WS-PHIST-STATUS NOT = '00'
         MOVE 'Error opening PRICEHIST file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     .
```

**2000-PROCESS Paragraph**  
_Before:_
```cobol
 2000-PROCESS.
     PERFORM 2100-READ-HISTORY
     
     IF MORE-RECORDS
         PERFORM 2200-LOAD-TO-DB2
         PERFORM 2300-CHECK-COMMIT
     END-IF
     .
```
_After:_
```cobol
 2000-PROCESS.
     PERFORM 2100-READ-HISTORY
     
     IF MORE-RECORDS
         PERFORM 2200-LOAD-TO-DB2
         PERFORM 2300-CHECK-COMMIT
*-- Change: Call new logic to store historical price in VSAM
         PERFORM 2100-STORE-PRICEHIST
     END-IF
     .
```

**2100-STORE-PRICEHIST Paragraph (New)**  
```cobol
*-- Change: New paragraph for storing historical price in PRICEHIST VSAM
 2100-STORE-PRICEHIST.
     INITIALIZE PRICEHIST-REC
     MOVE TH-ACCOUNT-NO    TO PHIST-ACCOUNT-NO
     MOVE TH-PORTFOLIO-ID  TO PHIST-PORTFOLIO-ID
     MOVE TH-TRANS-DATE    TO PHIST-TRANS-DATE
     MOVE TH-TRANS-TIME    TO PHIST-TRANS-TIME
     MOVE TH-SECURITY-ID   TO PHIST-SECURITY-ID
     MOVE TH-PRICE         TO PHIST-PRICE
     MOVE TH-AMOUNT        TO PHIST-AMOUNT
     MOVE TH-TOTAL-AMOUNT  TO PHIST-TOTAL-AMOUNT
     MOVE TH-GAIN-LOSS     TO PHIST-GAIN-LOSS
     MOVE TH-PRICE-SOURCE  TO PHIST-PRICE-SOURCE
     MOVE TH-PRICE-TIMESTAMP TO PHIST-PRICE-TIMESTAMP
     WRITE PRICEHIST-REC
         INVALID KEY
             ADD 1 TO WS-ERROR-COUNT
             MOVE 'PRICEHIST write error' TO ERR-TEXT
             PERFORM 9000-ERROR-ROUTINE
         NOT INVALID KEY
             ADD 1 TO WS-HIST-PRICE-WRITTEN
     .
```

**3200-CLOSE-FILES Paragraph**  
_Before:_
```cobol
 3200-CLOSE-FILES.
     CLOSE TRANSACTION-HISTORY
           BATCH-CONTROL-FILE
     .
```
_After:_
```cobol
 3200-CLOSE-FILES.
     CLOSE TRANSACTION-HISTORY
           BATCH-CONTROL-FILE
*-- Change: Close PRICEHIST file
           PRICEHIST-FILE
     .
```

**3400-DISPLAY-STATS Paragraph**  
_Before:_
```cobol
 3400-DISPLAY-STATS.
     DISPLAY 'HISTLD00 Processing Statistics:'
     DISPLAY '  Records Read:    ' WS-RECORDS-READ
     DISPLAY '  Records Written: ' WS-RECORDS-WRITTEN
     DISPLAY '  Errors:         ' WS-ERROR-COUNT
     .
```
_After:_
```cobol
 3400-DISPLAY-STATS.
     DISPLAY 'HISTLD00 Processing Statistics:'
     DISPLAY '  Records Read:    ' WS-RECORDS-READ
     DISPLAY '  Records Written: ' WS-RECORDS-WRITTEN
     DISPLAY '  Errors:         ' WS-ERROR-COUNT
*-- Change: Display count of historical prices written
     DISPLAY '  Hist Prices:     ' WS-HIST-PRICE-WRITTEN
     .
```

## 4. Conclusion  
The implemented changes in `HISTLD00` introduce a robust mechanism for capturing and storing historical price data in a new VSAM file, as required by business and audit processes. The enhancements are modular, maintainable, and minimally invasive, ensuring continued reliability of the batch load process while extending its functionality to meet new requirements.
```
