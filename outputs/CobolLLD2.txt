# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design updates made to the COBOL portfolio transaction processing system. The primary enhancement involves introducing a new transaction type field (`TRN-TRANSACTION-TYPE`) to the transaction record structure and updating all relevant logic to support this new field throughout the application. This enhancement improves transaction categorization, reporting, and future extensibility.

## 2. Existing Logic and Flow  

### 2.1 Overview  
The portfolio transaction processing system manages the ingestion, validation, and processing of financial transactions related to investment portfolios. The system reads transaction records, validates their contents, updates portfolio positions, and logs audit trails for each processed transaction.

### 2.2 Detailed Logic  

- **Initialization:**  
  - Opens transaction and portfolio files.
  - Initializes counters and status flags.
  - Prepares working storage for transaction processing.

- **Transaction Processing:**  
  - Reads each transaction record sequentially.
  - Validates the portfolio ID, transaction type, and transaction amounts.
  - Processes the transaction based on its type (buy, sell, transfer, fee).
  - Updates portfolio positions accordingly.
  - Writes audit trail entries for each transaction.

- **Termination:**  
  - Closes all files.
  - Displays summary statistics.

#### Flowchart:  
```mermaid
flowchart TD
    Start([Start])
    Init([1000-INITIALIZE])
    ReadTrans([READ TRANSACTION-FILE])
    Validate([2100-VALIDATE-TRANSACTION])
    CheckPortfolio([2110-CHECK-PORTFOLIO])
    CheckTrnType([2120-CHECK-TRANSACTION-TYPE])
    CheckAmounts([2130-CHECK-AMOUNTS])
    CheckNewType([2140-CHECK-TRANSACTION-TYPE-FIELD])
    Update([2200-UPDATE-POSITIONS])
    Audit([2300-UPDATE-AUDIT-TRAIL])
    Next([Next Transaction?])
    End([End])

    Start --> Init
    Init --> ReadTrans
    ReadTrans --> Validate
    Validate --> CheckPortfolio
    CheckPortfolio --> CheckTrnType
    CheckTrnType --> CheckAmounts
    CheckAmounts --> CheckNewType
    CheckNewType --> Update
    Update --> Audit
    Audit --> Next
    Next -- Yes --> ReadTrans
    Next -- No --> End
```

## 3. Impacted Changes  

### 3.1 User Story or Analysis Report Summary  
Enhance the transaction processing system to support a new, explicit transaction type field (`TRN-TRANSACTION-TYPE`) in addition to the legacy `TRN-TYPE` field. Ensure all validation, processing, and audit logic utilizes the new field when present, with fallback to the legacy field for backward compatibility.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy**  
  - Purpose of Changes: Add new field `TRN-TRANSACTION-TYPE` to the transaction record structure for improved transaction categorization.
  - Impact: All programs using this copybook can now store and process a 4-character alphanumeric transaction type.

- **src/programs/portfolio/PORTTRAN.cbl**  
  - Purpose of Changes: Update transaction validation, processing, and audit logic to utilize the new transaction type field.
  - Impact: Enables more granular transaction processing and reporting. Maintains backward compatibility with legacy field.

- **Working-Storage Section (PORTTRAN.cbl)**  
  - Purpose of Changes: Add working-storage variable for the new transaction type.
  - Impact: Supports validation and processing of the new field.

- **Validation and Processing Paragraphs (PORTTRAN.cbl)**  
  - Purpose of Changes: Insert new validation and processing logic for the new field.
  - Impact: Ensures data integrity and correct transaction handling.

### 3.3 Insertion Points  

- **TRNREC.cpy**  
  - Inserted new field `10  TRN-TRANSACTION-TYPE  PIC X(04).` after the existing transaction data fields.
  - Adjusted filler size to accommodate the new field.

- **PORTTRAN.cbl**
  - **WORKING-STORAGE SECTION:**  
    - Added `01  WS-TRANSACTION-TYPE-VLD PIC X(04).` for validation.
  - **2100-VALIDATE-TRANSACTION:**  
    - After amount checks, inserted call to new validation paragraph for `TRN-TRANSACTION-TYPE`.
  - **New Paragraph 2140-CHECK-TRANSACTION-TYPE-FIELD:**  
    - Validates presence and correctness of the new field.
  - **2200-UPDATE-POSITIONS:**  
    - Updated logic to process transactions based on `TRN-TRANSACTION-TYPE` first, with fallback to `TRN-TYPE`.
  - **2300-UPDATE-AUDIT-TRAIL:**  
    - Audit trail now records the new transaction type when present.

### 3.4 Structured Diffs  

#### **A. TRNREC.cpy (Transaction Record Structure)**

**Before:**  
```cobol
05  TRN-DATA.
    10  TRN-INVESTMENT-ID  PIC X(10).
    10  TRN-TYPE           PIC X(02).
        88  TRN-TYPE-BUY     VALUE 'BU'.
        88  TRN-TYPE-SELL    VALUE 'SL'.
        88  TRN-TYPE-TRANS   VALUE 'TR'.
        88  TRN-TYPE-FEE     VALUE 'FE'.
    10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
    10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
    10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
    10  TRN-CURRENCY      PIC X(03).
    10  TRN-STATUS        PIC X(01).
        88  TRN-STATUS-PEND   VALUE 'P'.
        88  TRN-STATUS-DONE   VALUE 'D'.
        88  TRN-STATUS-FAIL   VALUE 'F'.
        88  TRN-STATUS-REV    VALUE 'R'.
```

**After:**  
```cobol
05  TRN-DATA.
    10  TRN-INVESTMENT-ID  PIC X(10).
    10  TRN-TYPE           PIC X(02).
        88  TRN-TYPE-BUY     VALUE 'BU'.
        88  TRN-TYPE-SELL    VALUE 'SL'.
        88  TRN-TYPE-TRANS   VALUE 'TR'.
        88  TRN-TYPE-FEE     VALUE 'FE'.
    10  TRN-QUANTITY       PIC S9(11)V9(4) COMP-3.
    10  TRN-PRICE         PIC S9(11)V9(4) COMP-3.
    10  TRN-AMOUNT        PIC S9(13)V9(2) COMP-3.
    10  TRN-CURRENCY      PIC X(03).
    10  TRN-STATUS        PIC X(01).
        88  TRN-STATUS-PEND   VALUE 'P'.
        88  TRN-STATUS-DONE   VALUE 'D'.
        88  TRN-STATUS-FAIL   VALUE 'F'.
        88  TRN-STATUS-REV    VALUE 'R'.
*--- Begin Enhancement: Add Transaction Type Field ---
    10  TRN-TRANSACTION-TYPE  PIC X(04).
*     New field: Transaction Type (e.g. 'BUY ', 'SELL', 'XFER', 'FEE ')
*--- End Enhancement ---
```

#### **B. PORTTRAN.cbl (Portfolio Transaction Processing)**

**1. WORKING-STORAGE SECTION**

**Before:**  
```cobol
01  WS-COUNTERS.
    05  WS-READ-COUNT       PIC 9(8) COMP.
    05  WS-PROCESS-COUNT    PIC 9(8) COMP.
    05  WS-ERROR-COUNT      PIC 9(8) COMP.
```

**After:**  
```cobol
01  WS-COUNTERS.
    05  WS-READ-COUNT       PIC 9(8) COMP.
    05  WS-PROCESS-COUNT    PIC 9(8) COMP.
    05  WS-ERROR-COUNT      PIC 9(8) COMP.

*--- Begin Enhancement: Working storage for new Transaction Type field ---
01  WS-TRANSACTION-TYPE-VLD PIC X(04).
*--- End Enhancement ---
```

**2. 2100-VALIDATE-TRANSACTION**

**Before:**  
```cobol
PERFORM 2110-CHECK-PORTFOLIO
IF ERR-TEXT = SPACES
    PERFORM 2120-CHECK-TRANSACTION-TYPE
END-IF
IF ERR-TEXT = SPACES
    PERFORM 2130-CHECK-AMOUNTS
END-IF
```

**After:**  
```cobol
PERFORM 2110-CHECK-PORTFOLIO
IF ERR-TEXT = SPACES
    PERFORM 2120-CHECK-TRANSACTION-TYPE
END-IF
IF ERR-TEXT = SPACES
    PERFORM 2130-CHECK-AMOUNTS
END-IF
*--- Begin Enhancement: Validate new Transaction Type field ---
IF ERR-TEXT = SPACES
    PERFORM 2140-CHECK-TRANSACTION-TYPE-FIELD
END-IF
*--- End Enhancement ---
```

**3. New Paragraph: 2140-CHECK-TRANSACTION-TYPE-FIELD**

**Added:**  
```cobol
*--- Begin Enhancement: New paragraph for TRANSACTION-TYPE field validation ---
2140-CHECK-TRANSACTION-TYPE-FIELD.
    IF TRN-TRANSACTION-TYPE = SPACES OR TRN-TRANSACTION-TYPE = LOW-VALUES
        MOVE 'Transaction Type field is required' TO ERR-TEXT
        EXIT PARAGRAPH
    END-IF
    MOVE TRN-TRANSACTION-TYPE TO WS-TRANSACTION-TYPE-VLD
    EVALUATE WS-TRANSACTION-TYPE-VLD
        WHEN 'BUY '
        WHEN 'SELL'
        WHEN 'XFER'
        WHEN 'FEE '
            CONTINUE
        WHEN OTHER
            STRING 'Invalid Transaction Type field: '
                   TRN-TRANSACTION-TYPE
              DELIMITED BY SIZE
              INTO ERR-TEXT
    END-EVALUATE
    .
*--- End Enhancement ---
```

**4. 2200-UPDATE-POSITIONS**

**Before:**  
```cobol
EVALUATE TRN-TYPE
    WHEN 'BU'
        PERFORM 2210-PROCESS-BUY
    WHEN 'SL'
        PERFORM 2220-PROCESS-SELL
    WHEN 'TR'
        PERFORM 2230-PROCESS-TRANSFER
    WHEN 'FE'
        PERFORM 2240-PROCESS-FEE
END-EVALUATE
```

**After:**  
```cobol
*--- Begin Enhancement: Use new Transaction Type field for processing ---
EVALUATE TRN-TRANSACTION-TYPE
    WHEN 'BUY '
        PERFORM 2210-PROCESS-BUY
    WHEN 'SELL'
        PERFORM 2220-PROCESS-SELL
    WHEN 'XFER'
        PERFORM 2230-PROCESS-TRANSFER
    WHEN 'FEE '
        PERFORM 2240-PROCESS-FEE
    WHEN OTHER
*        Fallback to legacy TRN-TYPE if new field not set
        EVALUATE TRN-TYPE
            WHEN 'BU'
                PERFORM 2210-PROCESS-BUY
            WHEN 'SL'
                PERFORM 2220-PROCESS-SELL
            WHEN 'TR'
                PERFORM 2230-PROCESS-TRANSFER
            WHEN 'FE'
                PERFORM 2240-PROCESS-FEE
        END-EVALUATE
END-EVALUATE
*--- End Enhancement ---
```

**5. 2300-UPDATE-AUDIT-TRAIL**

**Before:**  
```cobol
MOVE 'TRAN'         TO AUD-TYPE
```

**After:**  
```cobol
MOVE 'TRAN'         TO AUD-TYPE
*--- Begin Enhancement: Include new Transaction Type field in audit trail ---
IF TRN-TRANSACTION-TYPE NOT = SPACES AND TRN-TRANSACTION-TYPE NOT = LOW-VALUES
    MOVE TRN-TRANSACTION-TYPE TO AUD-ACTION
ELSE
    EVALUATE TRN-TYPE
        WHEN 'BU'
            MOVE 'CREATE  ' TO AUD-ACTION
        WHEN 'SL'
            MOVE 'DELETE  ' TO AUD-ACTION
        WHEN 'TR'
            MOVE 'UPDATE  ' TO AUD-ACTION
        WHEN 'FE'
            MOVE 'UPDATE  ' TO AUD-ACTION
    END-EVALUATE
END-IF
*--- End Enhancement ---
```

**Audit Message Construction:**

**Before:**  
```cobol
STRING 'Transaction: ' DELIMITED BY SIZE
       TRN-TYPE
       ' Amount: '    DELIMITED BY SIZE
       TRN-AMOUNT     DELIMITED BY SIZE
       ' Units: '     DELIMITED BY SIZE
       TRN-QUANTITY   DELIMITED BY SIZE
   INTO AUD-MESSAGE
```

**After:**  
```cobol
*--- Begin Enhancement: Report new Transaction Type field if present ---
STRING 'Transaction: ' DELIMITED BY SIZE
       (IF TRN-TRANSACTION-TYPE NOT = SPACES AND TRN-TRANSACTION-TYPE NOT = LOW-VALUES
           TRN-TRANSACTION-TYPE
        ELSE
           TRN-TYPE)
       ' Amount: '    DELIMITED BY SIZE
       TRN-AMOUNT     DELIMITED BY SIZE
       ' Units: '     DELIMITED BY SIZE
       TRN-QUANTITY   DELIMITED BY SIZE
   INTO AUD-MESSAGE
*--- End Enhancement ---
```

## 4. Conclusion  
The enhancements introduce a new, explicit transaction type field to the transaction record structure and update all relevant validation, processing, and audit logic to use this field. These changes enable more flexible and accurate transaction categorization, improve audit trail clarity, and maintain backward compatibility with existing data. The structured approach and clear insertion points ensure the system remains maintainable and extensible for future enhancements.
