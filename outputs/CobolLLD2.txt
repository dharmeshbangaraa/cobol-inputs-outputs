# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the COBOL application modules impacted by the introduction of the `CHANNEL-CODE` field in the transaction record structure. The purpose is to provide a comprehensive overview of the modifications, their rationale, and the expected impact on the system, ensuring clarity for developers, testers, and maintainers.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The COBOL application processes financial transactions by reading, validating, and reporting on transaction records. The core logic involves extracting transaction data, applying business rules, and generating reports or outputs for downstream systems.

### 2.2 Detailed Logic  
- **Transaction Record Structure:**  
  The transaction record (`TRANSACTION-RECORD`) is defined in the copybook `TRNREC.CPY`. It includes key fields such as transaction date, time, portfolio ID, sequence number, and now, the newly added `CHANNEL-CODE` for channel identification.
- **Processing Flow:**  
  1. **Initialization:** Load and validate transaction records.
  2. **Processing:** Apply business rules based on transaction type and status.
  3. **Reporting:** Generate output files and audit logs.

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    LoadRecords["Load
Transaction
Records"]
    ValidateRecords["Validate
Records"]
    ApplyBusinessRules["Apply
Business
Rules"]
    GenerateReports["Generate
Reports"]
    End(["End"])

    Start --> LoadRecords
    LoadRecords --> ValidateRecords
    ValidateRecords --> ApplyBusinessRules
    ApplyBusinessRules --> GenerateReports
    GenerateReports --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
To support multi-channel transaction processing, a new field `CHANNEL-CODE` (PIC X(04)) has been added to the transaction record structure. This enables the system to identify the source channel (e.g., online, branch, mobile) for each transaction, facilitating enhanced reporting and auditing.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **src/copybook/common/TRNREC.cpy**
  - **Purpose of Changes:**  
    Introduce `CHANNEL-CODE` to the transaction key for channel identification and adjust the filler to maintain record length.
  - **Impact:**  
    All programs referencing the transaction record structure must accommodate the new field. This affects data parsing, validation, and reporting logic.
- **src/programs/batch/RPTPOS00.cbl**
- **src/programs/utility/UTLVAL00.cbl**
- **src/programs/test/TSTGEN00.cbl**
- **src/programs/test/TSTVAL00.cbl**
  - **Purpose of Changes:**  
    Ensure all programs that read, write, or process transaction records are updated to handle the new `CHANNEL-CODE` field.
  - **Impact:**  
    - Data layouts and field mappings are updated.
    - Any logic referencing the transaction key must now include `CHANNEL-CODE`.
    - Test programs and utilities are updated for compatibility.

### 3.3 Insertion Points  
- **TRNREC.CPY (src/copybook/common/TRNREC.cpy):**
  - **Insertion Point:**  
    Within the `TRN-KEY` group, after `TRN-SEQUENCE-NO`.
  - **Description:**  
    The `CHANNEL-CODE` field is inserted to capture the channel identifier. The filler is reduced by 4 bytes to maintain the overall record length.
  - **Reference:**  
    See inline comment: `*-- Change: Added CHANNEL-CODE for channel identification`
- **Impacted Programs (RPTPOS00.CBL, UTLVAL00.CBL, TSTGEN00.CBL, TSTVAL00.CBL):**
  - **Insertion Point:**  
    Wherever the transaction record is defined, read, or written, the structure now includes `CHANNEL-CODE`.
  - **Description:**  
    All field references and data movement statements are updated to include the new field. Test data and validation logic are adjusted accordingly.
  - **Reference:**  
    Inline comments and summary change reports in each program file.

### 3.4 Structured Diffs  

#### **TRNREC.CPY (src/copybook/common/TRNREC.cpy)**

**Before:**  
```cobol
     05  TRN-KEY.
         10  TRN-DATE           PIC X(08).
         10  TRN-TIME           PIC X(06).
         10  TRN-PORTFOLIO-ID   PIC X(08).
         10  TRN-SEQUENCE-NO    PIC X(06).
     05  TRN-DATA.
         ...
     05  TRN-FILLER           PIC X(50).
```

**After:**  
```cobol
     05  TRN-KEY.
         10  TRN-DATE           PIC X(08).
         10  TRN-TIME           PIC X(06).
         10  TRN-PORTFOLIO-ID   PIC X(08).
         10  TRN-SEQUENCE-NO    PIC X(06).
         10  CHANNEL-CODE       PIC X(04).   *-- Change: Added CHANNEL-CODE for channel identification
     05  TRN-DATA.
         ...
     05  TRN-FILLER           PIC X(46).     *-- Change: Reduced filler by 4 to accommodate CHANNEL-CODE
```

#### **Field Descriptions Section**

**Before:**  
```cobol
* FIELD DESCRIPTIONS:
* TRN-DATE        : TRANSACTION DATE (YYYYMMDD)
* TRN-TIME        : TRANSACTION TIME (HHMMSS)
* TRN-PORTFOLIO-ID: PORTFOLIO IDENTIFIER
* TRN-SEQUENCE-NO : SEQUENCE NUMBER FOR MULTIPLE TRANS
* TRN-TYPE        : BU=BUY, SL=SELL, TR=TRANSFER, FE=FEE
* TRN-STATUS      : P=PENDING, D=DONE, F=FAILED, R=REVERSED
```

**After:**  
```cobol
* FIELD DESCRIPTIONS:
* TRN-DATE        : TRANSACTION DATE (YYYYMMDD)
* TRN-TIME        : TRANSACTION TIME (HHMMSS)
* TRN-PORTFOLIO-ID: PORTFOLIO IDENTIFIER
* TRN-SEQUENCE-NO : SEQUENCE NUMBER FOR MULTIPLE TRANS
* CHANNEL-CODE    : CHANNEL IDENTIFICATION CODE (NEW)
* TRN-TYPE        : BU=BUY, SL=SELL, TR=TRANSFER, FE=FEE
* TRN-STATUS      : P=PENDING, D=DONE, F=FAILED, R=REVERSED
```

#### **Impacted COBOL Programs (Generalized Example)**

**Before:**  
```cobol
MOVE TRN-KEY FROM INPUT-RECORD TO WS-TRANSACTION-KEY.
```

**After:**  
```cobol
MOVE TRN-KEY FROM INPUT-RECORD TO WS-TRANSACTION-KEY.
* Ensure CHANNEL-CODE is included in TRN-KEY structure
```

**Note:**  
All programs referencing the transaction record structure now automatically include `CHANNEL-CODE` due to the copybook update. Additional logic may be required if the channel information is used in processing or reporting.

## 4. Conclusion  
The introduction of the `CHANNEL-CODE` field enhances the transaction record structure, enabling the system to identify the source channel for each transaction. This change is backward-compatible in terms of record length and is fully traceable via inline comments and summary change reports. All impacted programs and utilities have been updated to accommodate the new field, ensuring consistent data handling and improved reporting capabilities.
