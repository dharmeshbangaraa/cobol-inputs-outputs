# Technical Document and Low-Level Design (LLD)

## 1. Introduction  
This document details the technical changes and low-level design (LLD) for the enhancement of the COBOL-based transaction processing system to support a new `CHANNEL-CODE` field. The purpose is to enable channel identification in batch processing and reporting by adding a `CHANNEL-CODE` field (`PIC X(04)`) to transaction files and all related processing, reporting, and validation logic.

## 2. Existing Logic and Flow  
### 2.1 Overview  
The application suite processes transaction records through a series of batch, utility, and reporting programs. Transaction data is defined in shared copybooks and flows through various stages: file I/O, validation, processing, reporting, and audit.

### 2.2 Detailed Logic  
- **File Layouts:** Transaction records are defined in copybooks (`TRNREC.cpy`, `POSREC.cpy`) and referenced by all programs handling transaction data.
- **Batch Processing:** Programs like `RPTPOS00.cbl` and `UTLVAL00.cbl` read, validate, and process transaction files, generating reports or performing data validation.
- **Test Data:** `TSTGEN00.cbl` generates test transaction files, while `TSTVAL00.cbl` validates them.
- **Reporting/Audit:** `RPTPOS00.cbl` and `RPTAUD00.cbl` produce reports and audit trails based on transaction data.
- **JCL:** Job Control Language scripts define file layouts (LRECL) and orchestrate batch/report jobs.

#### Flowchart:  
```
flowchart TD
    Start(["Start"])
    OpenFiles["1100-OPEN-FILES"]
    ReadTrans["Read
Transaction
Record"]
    ValidateTrans["Validate
Transaction
Format"]
    ProcessTrans["Process
Transaction"]
    WriteOutput["Write
Output/Report"]
    End(["End"])

    Start --> OpenFiles
    OpenFiles --> ReadTrans
    ReadTrans --> ValidateTrans
    ValidateTrans --> ProcessTrans
    ProcessTrans --> WriteOutput
    WriteOutput --> End
```

## 3. Impacted Changes  
### 3.1 User Story or Analysis Report Summary  
**User Story:**  
Add `CHANNEL-CODE` Field to Transaction File for Channel Identification in Batch Processing and Reporting.  
- The new field enables downstream systems and reports to identify the source channel for each transaction.

### 3.2 Impacted Code Changes Summary:

#### 3.2.1 Impacted Sections and Files:
- **TRNREC.cpy** (Entire copybook):  
  - *Purpose of Changes:* Add `CHANNEL-CODE` to the transaction record layout.
  - *Impact:* All programs referencing this copybook must be recompiled and updated to handle the new field.
- **POSREC.cpy** (Entire copybook):  
  - *Purpose of Changes:* Add `CHANNEL-CODE` to position record layout for reporting/validation.
  - *Impact:* Ensures consistency in reporting and validation logic.
- **RPTPOS00.cbl** (`1100-OPEN-FILES`, `2200-PROCESS-TRANSACTIONS`):  
  - *Purpose of Changes:* Read/write and report on the new field.
  - *Impact:* Reports now include channel information.
- **UTLVAL00.cbl** (`1100-OPEN-FILES`, `2420-CHECK-TRANSACTION-FORMAT`):  
  - *Purpose of Changes:* Validate presence and format of `CHANNEL-CODE`.
  - *Impact:* Prevents processing of records with missing/invalid channel codes.
- **TSTGEN00.cbl** (`2300-GEN-TRANSACTION`, `2320-WRITE-TRAN-RECORD`):  
  - *Purpose of Changes:* Generate test data with valid `CHANNEL-CODE`.
  - *Impact:* Test files reflect new structure.
- **TSTVAL00.cbl** (`1100-OPEN-FILES`, `2000-PROCESS`):  
  - *Purpose of Changes:* Validate test data includes correct `CHANNEL-CODE`.
  - *Impact:* Ensures test data integrity.
- **RPTAUD00.cbl** (`1100-OPEN-FILES`, `2100-PROCESS-AUDIT-TRAIL`):  
  - *Purpose of Changes:* Optionally display/process `CHANNEL-CODE` in audit logs.
  - *Impact:* Audit trails can be filtered or grouped by channel.
- **JCL (Batch/Report jobs)** (`DD statements`, `LRECL`):  
  - *Purpose of Changes:* Update LRECL to accommodate new field.
  - *Impact:* Prevents truncation or misalignment of transaction records.
- **BCHCTL00.cbl** (`1000-PROCESS-INITIALIZE`):  
  - *Purpose of Changes:* Reference updated transaction structure for control totals.
  - *Impact:* Maintains batch control accuracy.

### 3.3 Insertion Points  
- **Copybooks (`TRNREC.cpy`, `POSREC.cpy`):**  
  - Insert `CHANNEL-CODE` field at the appropriate position in the record layout (typically after existing key fields).
- **Programs:**  
  - Update all `MOVE`, `READ`, `WRITE`, and `DISPLAY` statements to include `CHANNEL-CODE`.
  - In validation sections (e.g., `2420-CHECK-TRANSACTION-FORMAT`), add logic to check for valid `CHANNEL-CODE` values.
  - In reporting sections, add `CHANNEL-CODE` to output layouts and report lines.
- **JCL:**  
  - Update `LRECL` in DD statements for all transaction file definitions to reflect the increased record length.

#### Example Insertion Points:
- `TRNREC.cpy` (after last existing field, e.g., `TRANSACTION-TYPE`):
  ```cobol
  05  TRANSACTION-TYPE      PIC X(02).
  *-- Insert new field here
  05  CHANNEL-CODE          PIC X(04).
  ```
- `RPTPOS00.cbl` (`2200-PROCESS-TRANSACTIONS`):
  ```cobol
  MOVE TRANSACTION-TYPE TO REPORT-TYPE
  *-- Insert new logic
  MOVE CHANNEL-CODE TO REPORT-CHANNEL
  ```

### 3.4 Structured Diffs  
**Before:**  
*TRNREC.cpy*  
```cobol
05  TRANSACTION-TYPE      PIC X(02).
05  TRANSACTION-AMOUNT    PIC 9(09)V99.
```
*RPTPOS00.cbl*  
```cobol
MOVE TRANSACTION-TYPE TO REPORT-TYPE.
```
*JCL*  
```jcl
//TRANFILE DD DSN=... LRECL=100,RECFM=FB
```

**After:**  
*TRNREC.cpy*  
```cobol
05  TRANSACTION-TYPE      PIC X(02).
05  TRANSACTION-AMOUNT    PIC 9(09)V99.
05  CHANNEL-CODE          PIC X(04).
```
*RPTPOS00.cbl*  
```cobol
MOVE TRANSACTION-TYPE TO REPORT-TYPE.
MOVE CHANNEL-CODE TO REPORT-CHANNEL.
```
*JCL*  
```jcl
//TRANFILE DD DSN=... LRECL=104,RECFM=FB
```

## 4. Conclusion  
The addition of the `CHANNEL-CODE` field to transaction files and all related processing components enables robust channel identification throughout batch processing and reporting. This change requires coordinated updates to copybooks, COBOL programs, test data, and JCL. All impacted programs must be regression tested, and documentation updated to reflect the new field. The expected outcome is improved traceability and reporting of transaction source channels, supporting business and audit requirements.

