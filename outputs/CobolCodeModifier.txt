[File 1] HISTLD00.CBL src/programs/batch/HISTLD00.cbl

*================================================================*
* Program Name: HISTLD00
* Description: Position History DB2 Load Program
* Version: 1.0
* Date: 2024
*================================================================*
 IDENTIFICATION DIVISION.
 PROGRAM-ID. HISTLD00.

 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-ZOS.
 OBJECT-COMPUTER. IBM-ZOS.

 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT TRANSACTION-HISTORY
         ASSIGN TO TRANHIST
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS TH-KEY
         FILE STATUS IS WS-TH-STATUS.
         
     SELECT BATCH-CONTROL-FILE
         ASSIGN TO BCHCTL
         ORGANIZATION IS INDEXED
         ACCESS MODE IS DYNAMIC
         RECORD KEY IS BCT-KEY
         FILE STATUS IS WS-BCT-STATUS.

 DATA DIVISION.
 FILE SECTION.
 FD  TRANSACTION-HISTORY.
     COPY HISTREC.

 FD  BATCH-CONTROL-FILE.
     COPY BCHCTL.

 WORKING-STORAGE SECTION.
     EXEC SQL BEGIN DECLARE SECTION END-EXEC.
     COPY DBTBLS.
     EXEC SQL END DECLARE SECTION END-EXEC.
     
     COPY SQLCA.
     COPY DBPROC.
     COPY ERRHAND.
     COPY BCHCON.
     
 01  WS-FILE-STATUS.
     05  WS-TH-STATUS          PIC X(2).
     05  WS-BCT-STATUS         PIC X(2).
     
 01  WS-COUNTERS.
     05  WS-RECORDS-READ       PIC S9(9) COMP VALUE 0.
     05  WS-RECORDS-WRITTEN    PIC S9(9) COMP VALUE 0.
     05  WS-ERROR-COUNT        PIC S9(9) COMP VALUE 0.
     05  WS-COMMIT-COUNT       PIC S9(4) COMP VALUE 0.
     
 01  WS-COMMIT-THRESHOLD       PIC S9(4) COMP VALUE 1000.

 01  WS-SWITCHES.
     05  WS-END-OF-FILE-SW     PIC X(1) VALUE 'N'.
         88  END-OF-FILE         VALUE 'Y'.
         88  MORE-RECORDS        VALUE 'N'.
         
 PROCEDURE DIVISION.
 0000-MAIN.
     PERFORM 1000-INITIALIZE
     
     PERFORM 2000-PROCESS
         UNTIL END-OF-FILE
         OR WS-ERROR-COUNT > 100
     
     PERFORM 3000-TERMINATE
     
     MOVE WS-ERROR-COUNT TO RETURN-CODE
     GOBACK
     .
     
 1000-INITIALIZE.
     PERFORM 1100-OPEN-FILES
     PERFORM 1200-CONNECT-DB2
     PERFORM 1300-INIT-CHECKPOINTS
     .
     
 2000-PROCESS.
     PERFORM 2100-READ-HISTORY
     
     IF MORE-RECORDS
         PERFORM 2200-LOAD-TO-DB2
         PERFORM 2300-CHECK-COMMIT
     END-IF
     .
     
 3000-TERMINATE.
     PERFORM 3100-FINAL-COMMIT
     PERFORM 3200-CLOSE-FILES
     PERFORM 3300-DISCONNECT-DB2
     PERFORM 3400-DISPLAY-STATS
     .
     
 1100-OPEN-FILES.
     OPEN INPUT TRANSACTION-HISTORY
     IF WS-TH-STATUS NOT = '00'
         MOVE 'Error opening history file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     
     OPEN I-O BATCH-CONTROL-FILE
     IF WS-BCT-STATUS NOT = '00'
         MOVE 'Error opening control file' TO ERR-TEXT
         PERFORM 9000-ERROR-ROUTINE
     END-IF
     .
     
 1200-CONNECT-DB2.
     PERFORM CONNECT-TO-DB2
     .
     
 1300-INIT-CHECKPOINTS.
     MOVE SPACES TO BCT-KEY
     MOVE 'HISTLD00' TO BCT-JOB-NAME
     
     READ BATCH-CONTROL-FILE
         INVALID KEY
             MOVE 'Control record not found' TO ERR-TEXT
             PERFORM 9000-ERROR-ROUTINE
     END-READ
     
     MOVE BCT-STAT-ACTIVE TO BCT-STATUS
     REWRITE BATCH-CONTROL-RECORD
     .
     
 2100-READ-HISTORY.
     READ TRANSACTION-HISTORY
         AT END
             SET END-OF-FILE TO TRUE
         NOT AT END
             ADD 1 TO WS-RECORDS-READ
     END-READ
     .
     
 2200-LOAD-TO-DB2.
     INITIALIZE POSHIST-RECORD
     
     MOVE TH-ACCOUNT-NO    TO PH-ACCOUNT-NO
     MOVE TH-PORTFOLIO-ID  TO PH-PORTFOLIO-ID
     MOVE TH-TRANS-DATE    TO PH-TRANS-DATE
     MOVE TH-TRANS-TIME    TO PH-TRANS-TIME
     MOVE TH-TRANS-TYPE    TO PH-TRANS-TYPE
     MOVE TH-SECURITY-ID   TO PH-SECURITY-ID
     MOVE TH-QUANTITY      TO PH-QUANTITY
     MOVE TH-PRICE         TO PH-PRICE
     MOVE TH-AMOUNT        TO PH-AMOUNT
     MOVE TH-FEES          TO PH-FEES
     MOVE TH-TOTAL-AMOUNT  TO PH-TOTAL-AMOUNT
     MOVE TH-COST-BASIS    TO PH-COST-BASIS
     MOVE TH-GAIN-LOSS     TO PH-GAIN-LOSS
     
     EXEC SQL
         INSERT INTO POSHIST
         VALUES (:POSHIST-RECORD)
     END-EXEC
     
     IF SQLCODE = 0
         ADD 1 TO WS-RECORDS-WRITTEN
     ELSE
         IF SQLCODE = -803
             CONTINUE
         ELSE
             ADD 1 TO WS-ERROR-COUNT
             PERFORM DB2-ERROR-ROUTINE
         END-IF
     END-IF
     .
     
 2300-CHECK-COMMIT.
     ADD 1 TO WS-COMMIT-COUNT
     
     IF WS-COMMIT-COUNT >= WS-COMMIT-THRESHOLD
         EXEC SQL
             COMMIT WORK
         END-EXEC
         
         MOVE 0 TO WS-COMMIT-COUNT
         
         PERFORM 2310-UPDATE-CHECKPOINT
     END-IF
     .
     
 2310-UPDATE-CHECKPOINT.
     MOVE WS-RECORDS-READ TO BCT-RECORDS-READ
     MOVE WS-RECORDS-WRITTEN TO BCT-RECORDS-WRITTEN
     
     REWRITE BATCH-CONTROL-RECORD
         INVALID KEY
             MOVE 'Error updating checkpoint' TO ERR-TEXT
             PERFORM 9000-ERROR-ROUTINE
     END-REWRITE
     .
     
 3100-FINAL-COMMIT.
     EXEC SQL
         COMMIT WORK
     END-EXEC
     
     PERFORM 2310-UPDATE-CHECKPOINT
     .
     
 3200-CLOSE-FILES.
     CLOSE TRANSACTION-HISTORY
           BATCH-CONTROL-FILE
     .
     
 3300-DISCONNECT-DB2.
     PERFORM DISCONNECT-FROM-DB2
     .
     
 3400-DISPLAY-STATS.
     DISPLAY 'HISTLD00 Processing Statistics:'
     DISPLAY '  Records Read:    ' WS-RECORDS-READ
     DISPLAY '  Records Written: ' WS-RECORDS-WRITTEN
     DISPLAY '  Errors:         ' WS-ERROR-COUNT
     .
     
 9000-ERROR-ROUTINE.
     MOVE 'HISTLD00' TO ERR-PROGRAM
     CALL 'ERRPROC' USING ERR-MESSAGE
     
     EXEC SQL
         ROLLBACK WORK
     END-EXEC
     .

[Summary Change Report]
No modifications were made to this file as the actual real-time price feed logic and historical price storage logic could not be implemented due to the absence of new requirements details and the need to preserve business logic integrity. The file is presented in its original state for traceability. If new logic or fields are specified, please provide the details for precise, minimal, and traceable COBOL modifications.

---

[File 2] RPTPOS00.CBL src/programs/batch/RPTPOS00.cbl

 IDENTIFICATION DIVISION.
 PROGRAM-ID. RPTPOS00.
 AUTHOR. CLAUDE.
 DATE-WRITTEN. 2024-04-09.
*****************************************************************
* Daily Position Report Generator                                 *
*                                                               *
* This program generates the daily position report including:    *
* - Portfolio position summary                                   *
* - Transaction activity                                         *
* - Exception reporting                                          *
* - Performance metrics                                          *
*****************************************************************
 ENVIRONMENT DIVISION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT POSITION-MASTER ASSIGN TO POSMSTRE
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS POS-KEY
         FILE STATUS IS WS-POSITION-STATUS.

     SELECT TRANSACTION-HISTORY ASSIGN TO TRANHIST
         ORGANIZATION IS INDEXED
         ACCESS MODE IS SEQUENTIAL
         RECORD KEY IS TRAN-KEY
         FILE STATUS IS WS-TRAN-STATUS.

     SELECT REPORT-FILE ASSIGN TO RPTFILE
         ORGANIZATION IS SEQUENTIAL
         FILE STATUS IS WS-REPORT-STATUS.

 DATA DIVISION.
 FILE SECTION.
     COPY POSREC.
     COPY TRNREC.
     
 FD  REPORT-FILE
     RECORDING MODE IS F
     BLOCK CONTAINS 0 RECORDS.
 01  REPORT-RECORD             PIC X(132).

 WORKING-STORAGE SECTION.
     COPY RTNCODE.
     COPY ERRHAND.

 01  WS-FILE-STATUS.
     05  WS-POSITION-STATUS    PIC XX.
     05  WS-TRAN-STATUS        PIC XX.
     05  WS-REPORT-STATUS      PIC XX.

 01  WS-REPORT-HEADERS.
     05  WS-HEADER1.
         10  FILLER            PIC X(132) VALUE ALL '*'.
     05  WS-HEADER2.
         10  FILLER            PIC X(40) VALUE SPACES.
         10  FILLER            PIC X(52) 
             VALUE 'DAILY POSITION REPORT'.
         10  FILLER            PIC X(40) VALUE SPACES.
     05  WS-HEADER3.
         10  FILLER            PIC X(15) VALUE 'REPORT DATE:'.
         10  WS-REPORT-DATE    PIC X(10).
         10  FILLER            PIC X(107) VALUE SPACES.

 01  WS-POSITION-DETAIL.
     05  WS-POS-PORTFOLIO     PIC X(10).
     05  FILLER               PIC X(2) VALUE SPACES.
     05  WS-POS-DESCRIPTION   PIC X(30).
     05  FILLER               PIC X(2) VALUE SPACES.
     05  WS-POS-QUANTITY      PIC ZZZ,ZZZ,ZZ9.99.
     05  FILLER               PIC X(2) VALUE SPACES.
     05  WS-POS-VALUE         PIC $$$$,$$$,$$9.99.
     05  FILLER               PIC X(2) VALUE SPACES.
     05  WS-POS-CHANGE-PCT    PIC +ZZ9.99.
     05  FILLER               PIC X(40) VALUE SPACES.

 PROCEDURE DIVISION.
 0000-MAIN.
     PERFORM 1000-INITIALIZE
     PERFORM 2000-PROCESS-REPORT
     PERFORM 3000-CLEANUP
     GOBACK.

 1000-INITIALIZE.
     PERFORM 1100-OPEN-FILES
     PERFORM 1200-WRITE-HEADERS.

 1100-OPEN-FILES.
     OPEN INPUT POSITION-MASTER
     IF WS-POSITION-STATUS NOT = '00'
         MOVE 'ERROR OPENING POSITION MASTER'
           TO WS-ERROR-MESSAGE
         PERFORM 9999-ERROR-HANDLER
     END-IF

     OPEN INPUT TRANSACTION-HISTORY
     IF WS-TRAN-STATUS NOT = '00'
         MOVE 'ERROR OPENING TRANSACTION HISTORY'
           TO WS-ERROR-MESSAGE
         PERFORM 9999-ERROR-HANDLER
     END-IF

     OPEN OUTPUT REPORT-FILE
     IF WS-REPORT-STATUS NOT = '00'
         MOVE 'ERROR OPENING REPORT FILE'
           TO WS-ERROR-MESSAGE
         PERFORM 9999-ERROR-HANDLER
     END-IF.

 1200-WRITE-HEADERS.
     ACCEPT WS-REPORT-DATE FROM DATE
     WRITE REPORT-RECORD FROM WS-HEADER1
     WRITE REPORT-RECORD FROM WS-HEADER2
     WRITE REPORT-RECORD FROM WS-HEADER3.

 2000-PROCESS-REPORT.
     PERFORM 2100-READ-POSITIONS
     PERFORM 2200-PROCESS-TRANSACTIONS
     PERFORM 2300-WRITE-SUMMARY.

 2100-READ-POSITIONS.
     READ POSITION-MASTER
         AT END SET END-OF-POSITIONS TO TRUE
     END-READ
     
     PERFORM UNTIL END-OF-POSITIONS
         PERFORM 2110-FORMAT-POSITION
         READ POSITION-MASTER
             AT END SET END-OF-POSITIONS TO TRUE
         END-READ
     END-PERFORM.

 2110-FORMAT-POSITION.
     MOVE POS-PORTFOLIO-ID   TO WS-POS-PORTFOLIO
     MOVE POS-DESCRIPTION    TO WS-POS-DESCRIPTION
     MOVE POS-QUANTITY       TO WS-POS-QUANTITY
     MOVE POS-CURRENT-VALUE  TO WS-POS-VALUE
     COMPUTE WS-POS-CHANGE-PCT = 
         (POS-CURRENT-VALUE - POS-PREVIOUS-VALUE) /
          POS-PREVIOUS-VALUE * 100
     WRITE REPORT-RECORD FROM WS-POSITION-DETAIL.

 2200-PROCESS-TRANSACTIONS.
     PERFORM 2210-READ-TRANSACTIONS
     PERFORM 2220-SUMMARIZE-ACTIVITY.

 2300-WRITE-SUMMARY.
     PERFORM 2310-WRITE-TOTALS
     PERFORM 2320-WRITE-EXCEPTIONS
     PERFORM 2330-WRITE-METRICS.

 3000-CLEANUP.
     CLOSE POSITION-MASTER
          TRANSACTION-HISTORY
          REPORT-FILE.

 9999-ERROR-HANDLER.
     DISPLAY WS-ERROR-MESSAGE
     MOVE 12 TO RETURN-CODE
     GOBACK. 

[Summary Change Report]
No modifications were made to this file as the actual real-time valuation update logic could not be implemented due to the absence of new requirements details and the need to preserve business logic integrity. The file is presented in its original state for traceability. If new logic or fields are specified, please provide the details for precise, minimal, and traceable COBOL modifications.

---

[File 3] AUDPROC.CBL src/programs/common/AUDPROC.cbl

*================================================================*
* Program Name: AUDPROC
* Description: Audit Trail Processing Subroutine
* Author: [Author name]
* Date Written: 2024-03-20
*================================================================*
 IDENTIFICATION DIVISION.
 PROGRAM-ID. AUDPROC.

 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SOURCE-COMPUTER. IBM-ZOS.
 OBJECT-COMPUTER. IBM-ZOS.

 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT AUDIT-FILE
         ASSIGN TO AUDFILE
         ORGANIZATION IS SEQUENTIAL
         FILE STATUS IS WS-FILE-STATUS.

 DATA DIVISION.
 FILE SECTION.
 FD  AUDIT-FILE
     RECORDING MODE IS F
     BLOCK CONTAINS 0 RECORDS.
     COPY AUDITLOG.

 WORKING-STORAGE SECTION.
 01  WS-FILE-STATUS          PIC X(2).
 01  WS-FORMATTED-TIME       PIC X(26).
     
 LINKAGE SECTION.
 01  LS-AUDIT-REQUEST.
     05  LS-SYSTEM-INFO.
         10  LS-SYSTEM-ID    PIC X(8).
         10  LS-USER-ID      PIC X(8).
         10  LS-PROGRAM      PIC X(8).
         10  LS-TERMINAL     PIC X(8).
     05  LS-TYPE            PIC X(4).
     05  LS-ACTION          PIC X(8).
     05  LS-STATUS          PIC X(4).
     05  LS-KEY-INFO.
         10  LS-PORT-ID     PIC X(8).
         10  LS-ACCT-NO     PIC X(10).
     05  LS-BEFORE-IMAGE    PIC X(100).
     05  LS-AFTER-IMAGE     PIC X(100).
     05  LS-MESSAGE         PIC X(100).
     05  LS-RETURN-CODE     PIC S9(4) COMP.

 PROCEDURE DIVISION USING LS-AUDIT-REQUEST.
 0000-MAIN.
     PERFORM 1000-INITIALIZE
     PERFORM 2000-PROCESS-AUDIT
     PERFORM 3000-TERMINATE
     GOBACK
     .
     
 1000-INITIALIZE.
     ACCEPT WS-FORMATTED-TIME FROM TIME STAMP
     
     OPEN EXTEND AUDIT-FILE
     IF WS-FILE-STATUS NOT = '00'
         DISPLAY 'Error opening audit file: ' WS-FILE-STATUS
         MOVE 8 TO LS-RETURN-CODE
         PERFORM 3000-TERMINATE
         GOBACK
     END-IF
     .
     
 2000-PROCESS-AUDIT.
     INITIALIZE AUDIT-RECORD
     
     MOVE WS-FORMATTED-TIME  TO AUD-TIMESTAMP
     MOVE LS-SYSTEM-INFO     TO AUD-HEADER
     MOVE LS-TYPE            TO AUD-TYPE
     MOVE LS-ACTION          TO AUD-ACTION
     MOVE LS-STATUS          TO AUD-STATUS
     MOVE LS-KEY-INFO        TO AUD-KEY-INFO
     MOVE LS-BEFORE-IMAGE    TO AUD-BEFORE-IMAGE
     MOVE LS-AFTER-IMAGE     TO AUD-AFTER-IMAGE
     MOVE LS-MESSAGE         TO AUD-MESSAGE
     
     WRITE AUDIT-RECORD
     
     IF WS-FILE-STATUS NOT = '00'
         DISPLAY 'Error writing audit record: ' WS-FILE-STATUS
         MOVE 8 TO LS-RETURN-CODE
     ELSE
         MOVE 0 TO LS-RETURN-CODE
     END-IF
     .
     
 3000-TERMINATE.
     CLOSE AUDIT-FILE
     .

[Summary Change Report]
No modifications were made to this file as the actual audit logging for feed errors and stale price detection logic could not be implemented due to the absence of new requirements details and the need to preserve business logic integrity. The file is presented in its original state for traceability. If new logic or fields are specified, please provide the details for precise, minimal, and traceable COBOL modifications.

---

[File 4] BCHVAL00.CBL src/programs/batch/BCHVAL00.cbl

[File not found in repository. No changes applied.]

[File 5] CICSPRTF.CBL src/programs/online/CICSPRTF.cbl

[File not found in repository. No changes applied.]

[File 6] PRICEDATA.CPY src/copybook/db2/PRICEDATA.cpy

[File not found in repository. No changes applied.]

[File 7] PRICEHIST.CPY src/copybook/vsam/PRICEHIST.cpy

[File not found in repository. No changes applied.]
