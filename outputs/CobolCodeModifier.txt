[File 1] RPTPOS00.cbl src/programs/batch/RPTPOS00.cbl

      *---------------------------------------------------------------*
      * PROGRAM: RPTPOS00                                            *
      * PURPOSE: Portfolio/Position Valuation and Reporting           *
      *---------------------------------------------------------------*
       IDENTIFICATION DIVISION.
       PROGRAM-ID. RPTPOS00.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT POS-FILE ASSIGN TO 'POS.DAT'
               ORGANIZATION IS SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD  POS-FILE.
       COPY 'src/copybook/common/POSREC.cpy'.

       WORKING-STORAGE SECTION.
       01  WS-REALTIME-PRICE         PIC 9(10)V99 VALUE 0.
       01  WS-REALTIME-TIMESTAMP     PIC X(26) VALUE SPACES.
       01  WS-REALTIME-PNL           PIC S9(13)V99 VALUE 0.
       01  WS-FEED-STATUS            PIC X(10) VALUE SPACES.
       01  WS-ERROR-MSG              PIC X(80) VALUE SPACES.
       01  WS-AUDIT-ALARM-CODE       PIC X(10) VALUE SPACES.
       01  WS-AUDIT-ERROR-CODE       PIC X(10) VALUE SPACES.
       01  WS-END-FILE               PIC X VALUE 'N'.

       01  WS-REPORT-LINE            PIC X(132).

       PROCEDURE DIVISION.

       1000-START.
           OPEN INPUT POS-FILE
           PERFORM 2000-PROCESS-REPORT
           CLOSE POS-FILE
           STOP RUN.

       2000-PROCESS-REPORT.
           READ POS-FILE
               AT END
                   MOVE 'Y' TO WS-END-FILE
           END-READ
           PERFORM UNTIL WS-END-FILE = 'Y'
               PERFORM 2100-GET-REALTIME-PRICE
               PERFORM 2110-FORMAT-POSITION
               READ POS-FILE
                   AT END
                       MOVE 'Y' TO WS-END-FILE
               END-READ
           END-PERFORM.
           EXIT.

       2100-GET-REALTIME-PRICE.
           *-- Change: Integrate real-time market price feed for dynamic valuation
           CALL 'REALTIMEFEED' USING POS-PORTFOLIO-ID, POS-DATE,
                                    WS-REALTIME-PRICE, WS-REALTIME-TIMESTAMP,
                                    WS-FEED-STATUS, WS-ERROR-MSG
           IF WS-FEED-STATUS NOT = 'OK'
               MOVE 'FEEDFAIL' TO WS-AUDIT-ALARM-CODE
               MOVE WS-ERROR-MSG TO WS-AUDIT-ERROR-CODE
               CALL 'AUDPROC' USING WS-AUDIT-ALARM-CODE, WS-AUDIT-ERROR-CODE
               *-- Change: Audit logging for feed failure
               MOVE 0 TO WS-REALTIME-PRICE
           END-IF
           EXIT.

       2110-FORMAT-POSITION.
           *-- Change: Recalculate P&L using real-time price
           COMPUTE WS-REALTIME-PNL = (WS-REALTIME-PRICE - POS-BOOK-PRICE) * POS-QUANTITY
           MOVE WS-REALTIME-PRICE TO POS-REALTIME-PRICE
           MOVE WS-REALTIME-TIMESTAMP TO POS-REALTIME-TIMESTAMP
           MOVE WS-REALTIME-PNL TO POS-REALTIME-PNL
           *-- Change: Store real-time price, P&L, and timestamp in POSREC
           STRING
               POS-PORTFOLIO-ID DELIMITED BY SIZE
               ' ' DELIMITED BY SIZE
               POS-DATE DELIMITED BY SIZE
               ' ' DELIMITED BY SIZE
               WS-REALTIME-PRICE DELIMITED BY SIZE
               ' ' DELIMITED BY SIZE
               WS-REALTIME-PNL DELIMITED BY SIZE
               ' ' DELIMITED BY SIZE
               WS-REALTIME-TIMESTAMP DELIMITED BY SIZE
               INTO WS-REPORT-LINE
           END-STRING
           DISPLAY WS-REPORT-LINE
           EXIT.

      *-- End of RPTPOS00.cbl

[Summary Change Report]
- Integrated real-time market price feed in 2100-GET-REALTIME-PRICE.
- Added error handling and audit logging for feed failures.
- Modified 2110-FORMAT-POSITION to recalculate P&L using real-time price and store new fields in POSREC.
- Preserved COBOL formatting and business logic integrity.

[File 2] POSREC.cpy src/copybook/common/POSREC.cpy

       01  POSITION-RECORD.
           05  POS-KEY.
               10  POS-PORTFOLIO-ID   PIC X(08).
               10  POS-DATE           PIC X(08).
           05  POS-BOOK-PRICE         PIC 9(10)V99.
           05  POS-QUANTITY           PIC S9(9).
           05  POS-REALTIME-PRICE     PIC 9(10)V99.
               *-- Change: Added for real-time price feed
           05  POS-REALTIME-PNL       PIC S9(13)V99.
               *-- Change: Added for real-time P&L calculation
           05  POS-REALTIME-TIMESTAMP PIC X(26).
               *-- Change: Added for real-time price timestamp

[Summary Change Report]
- Added POS-REALTIME-PRICE, POS-REALTIME-PNL, and POS-REALTIME-TIMESTAMP fields to support real-time valuation and audit requirements.

[File 3] POSUPDT.cbl src/programs/batch/POSUPDT.cbl

      *---------------------------------------------------------------*
      * PROGRAM: POSUPDT                                             *
      * PURPOSE: Position Update Batch                               *
      *---------------------------------------------------------------*
       IDENTIFICATION DIVISION.
       PROGRAM-ID. POSUPDT.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT POS-FILE ASSIGN TO 'POS.DAT'
               ORGANIZATION IS SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD  POS-FILE.
       COPY 'src/copybook/common/POSREC.cpy'.

       WORKING-STORAGE SECTION.
       01  WS-REALTIME-PRICE         PIC 9(10)V99 VALUE 0.
       01  WS-REALTIME-TIMESTAMP     PIC X(26) VALUE SPACES.
       01  WS-REALTIME-PNL           PIC S9(13)V99 VALUE 0.
       01  WS-FEED-STATUS            PIC X(10) VALUE SPACES.
       01  WS-ERROR-MSG              PIC X(80) VALUE SPACES.
       01  WS-END-FILE               PIC X VALUE 'N'.

       PROCEDURE DIVISION.

       1000-START.
           OPEN I-O POS-FILE
           PERFORM 2000-PROCESS-UPDATES
           CLOSE POS-FILE
           STOP RUN.

       2000-PROCESS-UPDATES.
           READ POS-FILE
               AT END
                   MOVE 'Y' TO WS-END-FILE
           END-READ
           PERFORM UNTIL WS-END-FILE = 'Y'
               PERFORM 2100-UPDATE-POSITION
               REWRITE POSITION-RECORD
               READ POS-FILE
                   AT END
                       MOVE 'Y' TO WS-END-FILE
               END-READ
           END-PERFORM.
           EXIT.

       2100-UPDATE-POSITION.
           *-- Change: Integrate real-time price feed for position update
           CALL 'REALTIMEFEED' USING POS-PORTFOLIO-ID, POS-DATE,
                                    WS-REALTIME-PRICE, WS-REALTIME-TIMESTAMP,
                                    WS-FEED-STATUS, WS-ERROR-MSG
           IF WS-FEED-STATUS = 'OK'
               COMPUTE WS-REALTIME-PNL = (WS-REALTIME-PRICE - POS-BOOK-PRICE) * POS-QUANTITY
               MOVE WS-REALTIME-PRICE TO POS-REALTIME-PRICE
               MOVE WS-REALTIME-TIMESTAMP TO POS-REALTIME-TIMESTAMP
               MOVE WS-REALTIME-PNL TO POS-REALTIME-PNL
               *-- Change: Persist new real-time values in POSREC
           ELSE
               *-- Change: Error handling for feed failure (no update)
               CONTINUE
           END-IF
           EXIT.

      *-- End of POSUPDT.cbl

[Summary Change Report]
- Enhanced to recalculate and persist P&L and real-time price/timestamp on each price update.
- Integrated real-time price feed and error handling.
- Preserved COBOL formatting and business logic.

[File 4] AUDPROC.cbl src/programs/common/AUDPROC.cbl

      *---------------------------------------------------------------*
      * PROGRAM: AUDPROC                                             *
      * PURPOSE: Centralized Audit Logging                           *
      *---------------------------------------------------------------*
       IDENTIFICATION DIVISION.
       PROGRAM-ID. AUDPROC.

       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT AUDIT-FILE ASSIGN TO 'AUDIT.DAT'
               ORGANIZATION IS SEQUENTIAL.

       DATA DIVISION.
       FILE SECTION.
       FD  AUDIT-FILE.
       COPY 'src/copybook/common/AUDITLOG.cpy'.

       WORKING-STORAGE SECTION.
       01  WS-AUDIT-ALARM-CODE       PIC X(10) VALUE SPACES.
       01  WS-AUDIT-ERROR-CODE       PIC X(10) VALUE SPACES.
       01  WS-AUDIT-TIMESTAMP        PIC X(26) VALUE SPACES.
       01  WS-END-FILE               PIC X VALUE 'N'.

       PROCEDURE DIVISION.

       1000-START.
           OPEN OUTPUT AUDIT-FILE
           PERFORM 2000-PROCESS-AUDIT
           CLOSE AUDIT-FILE
           STOP RUN.

       2000-PROCESS-AUDIT.
           *-- Change: Log alarm and error conditions for real-time feed monitoring
           MOVE WS-AUDIT-ALARM-CODE TO AUD-ALARM-CODE
           MOVE WS-AUDIT-ERROR-CODE TO AUD-ERROR-CODE
           ACCEPT WS-AUDIT-TIMESTAMP FROM TIME
           MOVE WS-AUDIT-TIMESTAMP TO AUD-TIMESTAMP
           WRITE AUDIT-LOG-RECORD
           EXIT.

      *-- End of AUDPROC.cbl

[Summary Change Report]
- Updated 2000-PROCESS-AUDIT to log new alarm and error conditions for real-time feed monitoring.
- Preserved COBOL formatting and business logic.

[File 5] AUDITLOG.cpy src/copybook/common/AUDITLOG.cpy

       01  AUDIT-LOG-RECORD.
           05  AUD-ALARM-CODE        PIC X(10).
               *-- Change: Added for real-time feed alarm conditions
           05  AUD-ERROR-CODE        PIC X(10).
               *-- Change: Added for real-time feed error conditions
           05  AUD-TIMESTAMP         PIC X(26).
               *-- Change: Added for real-time event timestamp
           05  AUD-DETAILS           PIC X(80).

[Summary Change Report]
- Added AUD-ALARM-CODE, AUD-ERROR-CODE, and AUD-TIMESTAMP fields to support new audit requirements for real-time feed monitoring.
